# Strict use for game rules


tec_can_assemble_organic_hive_species = {
	OR = {
		# This is done so hives can clone other species, but breed only hiveminded species
		tec_has_spawning_buildings = yes
		tec_has_cloning_buildings = yes
		AND = {
			# Eusocial exception
			owner = {
				has_valid_civic = civic_tec_hive_eusocial
			}
			num_assigned_jobs = {
				job = tec_broodqueen_drone
				value >= 1
			}
			tec_has_robotic_buildings = no			# Prevents certain bugs
		}
	}
}

tec_waives_clone_origin_assembly_restrictions = {
	NOT = { has_country_flag = tec_waives_clone_origin_restrictions }
}

tec_can_assemble_species_due_to_purity_assembly_policy = {
	if = {	# Restriction on main species with purity
		limit = {
			root.owner = { has_policy_flag = tec_purity_assembly }
		}
		is_same_species = root.owner_main_species
		# Note: Exact same species takes into account the main template, not subtemplates
		#	same species is more flexible to the system and subsystems
	}
}

tec_is_symbiotic_gestalt = {
	OR = {
		tec_is_symbiotic_hivemind = yes 
		tec_is_symbiotic_machine = yes
	}
}