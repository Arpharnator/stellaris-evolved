# common\scripted_triggers\zzz_evolved_mechanic_scripted_triggers.txt

# Authority Triggers
 # Biological swarm checker
	# Drones produce biomatter, 1 per drone
	# Cattle produce 2, shaper drones generate 2 extra
	#tec_has_enough_biomatter = {
	#	custom_tooltip = {
	#		custom_tooltip = tec_requires_biomatter
	#		fail_text = tec_not_enough_biomatter
	#		check_modifier_value = {
	#			modifier = tec_biomatter
	#			value >= $VALUE$
	#		}
	#	}
	#}
 # /
# /

# Civic Triggers
 # Megacity trigger
	#tec_has_megacity_trigger = {
	#	custom_tooltip = {
	#		custom_tooltip = tec_requires_biomatter
	#		fail_text = tec_not_enough_biomatter
	#		check_modifier_value = {
	#			modifier = tec_biomatter
	#			value >= $VALUE$
	#		}
	#	}
	#}
 # /
# /

# Ascension triggers
 # TODO ASCENSION
	tec_has_genetic_ascension_t1_techs = {
		has_technology = tech_gene_tailoring
	}

	tec_has_cybernetic_ascension_t1_techs = {
		if = {
			limit = {
				is_machine_empire = yes
			}
			always = yes
		}
		else = {
			has_technology = tech_neuro_quantum_links
		}
	}

	tec_has_synthetic_ascension_t1_techs = {
		if = {
			limit = {
				is_gestalt = yes
			}
			has_technology = tech_robomodding_m
		}
		else = {
			has_technology = tech_synthetic_workers
			has_technology = tech_synthetic_leaders
		}
	}

	tec_has_mystical_ascension_t1_techs = {
		if = {
			limit = {
				is_gestalt = yes
			}
			# Psi theory is diff to find for hives
			always = yes
		}
		else = {
			has_technology = tech_psionic_theory
			has_technology = tech_telepathy
		}
	}
 # /
 # Genetics
	tec_has_genetic_perfection_traits = {
		OR = {
			# Cortex T1
			has_trait = trait_tec_gene_main_t1
			has_trait = trait_tec_gene_main_t2
			has_trait = trait_tec_gene_main_t3
			
			has_trait = trait_tec_gene_main_cloning_t1
			has_trait = trait_tec_gene_main_cloning_t2
			has_trait = trait_tec_gene_main_cloning_t3

			# Normal traits
			has_trait = trait_tec_gene_research_t1
			has_trait = trait_tec_gene_research_t2
			has_trait = trait_tec_gene_research_t3

			has_trait = trait_tec_gene_unity_t1
			has_trait = trait_tec_gene_unity_t2
			has_trait = trait_tec_gene_unity_t3

			has_trait = trait_tec_gene_fertile_t1
			has_trait = trait_tec_gene_fertile_t2
			has_trait = trait_tec_gene_fertile_t3

			has_trait = trait_tec_gene_robust_t1
			has_trait = trait_tec_gene_robust_t2
			has_trait = trait_tec_gene_robust_t3

			has_trait = trait_tec_gene_audacious_t1
			has_trait = trait_tec_gene_audacious_t2
			has_trait = trait_tec_gene_audacious_t3

			has_trait = trait_tec_gene_lifespan_t1
			has_trait = trait_tec_gene_lifespan_t2
			has_trait = trait_tec_gene_lifespan_t3

			has_trait = trait_tec_gene_metabolic_t1
			has_trait = trait_tec_gene_metabolic_t2
			has_trait = trait_tec_gene_metabolic_t3

			has_trait = trait_tec_gene_energy_t1
			has_trait = trait_tec_gene_energy_t2
			has_trait = trait_tec_gene_energy_t3

			has_trait = trait_tec_gene_mining_t1
			has_trait = trait_tec_gene_mining_t2
			has_trait = trait_tec_gene_mining_t3

			has_trait = trait_tec_gene_food_t1
			has_trait = trait_tec_gene_food_t2
			has_trait = trait_tec_gene_food_t3

			has_trait = trait_tec_gene_industry_t1
			has_trait = trait_tec_gene_industry_t2
			has_trait = trait_tec_gene_industry_t3

			has_trait = trait_tec_gene_amenities_t1
			has_trait = trait_tec_gene_amenities_t2
			has_trait = trait_tec_gene_amenities_t3

			has_trait = trait_tec_gene_trade_t1
			has_trait = trait_tec_gene_trade_t2
			has_trait = trait_tec_gene_trade_t3

			has_trait = trait_tec_gene_automodding_t1
			has_trait = trait_tec_gene_automodding_t2
			has_trait = trait_tec_gene_automodding_t3

			#Resequenced
			has_trait = trait_tec_gene_resequenced_dragon
			has_trait = trait_tec_gene_resequenced_voidspawn
			has_trait = trait_tec_gene_resequenced_tiyanki

			has_trait = trait_tec_gene_resequenced_warmblood
			has_trait = trait_tec_gene_resequenced_coldblood
			has_trait = trait_tec_gene_resequenced_vegetal
			has_trait = trait_tec_gene_resequenced_lithoid
			has_trait = trait_tec_gene_resequenced_necroid
			has_trait = trait_tec_gene_resequenced_toxoid
		}
	}
	tec_has_genetic_resequence_traits = {
		OR = {
			#Resequenced
			has_trait = trait_tec_gene_resequenced_dragon
			has_trait = trait_tec_gene_resequenced_voidspawn
			has_trait = trait_tec_gene_resequenced_tiyanki

			has_trait = trait_tec_gene_resequenced_warmblood
			has_trait = trait_tec_gene_resequenced_coldblood
			has_trait = trait_tec_gene_resequenced_vegetal
			has_trait = trait_tec_gene_resequenced_lithoid
			has_trait = trait_tec_gene_resequenced_necroid
			has_trait = trait_tec_gene_resequenced_toxoid
		}
	}

 # /
 # Cybernetics
	tec_has_cybernetic_dangerous_traits = {
		OR = {
			# Cortex T1
			has_trait = trait_tec_cyborg_cortex_research
			has_trait = trait_tec_cyborg_cortex_unity
			#has_trait = trait_tec_cyborg_cortex_neuroconductor
			#has_trait = trait_tec_cyborg_cortex_ram
			# Cortex T2
			has_trait = trait_tec_cyborg_cortex_science
			has_trait = trait_tec_cyborg_cortex_memory
			has_trait = trait_tec_cyborg_cortex_intralink
			has_trait = trait_tec_cyborg_cortex_relic
			# Internal T1
			has_trait = trait_tec_cyborg_internal_organs
			has_trait = trait_tec_cyborg_internal_septic
			has_trait = trait_tec_cyborg_internal_intergumentary
			has_trait = trait_tec_cyborg_internal_retrofit
			# Internal T2
			has_trait = trait_tec_cyborg_internal_servos
			has_trait = trait_tec_cyborg_internal_maintenance
			has_trait = trait_tec_cyborg_internal_vital
			# External T1
			has_trait = trait_tec_cyborg_external_worker
			#has_trait = trait_tec_cyborg_external_aesthetic
			#has_trait = trait_tec_cyborg_external_skin
			#has_trait = trait_tec_cyborg_external_connector
			#has_trait = trait_tec_cyborg_external_climate_dry
			#has_trait = trait_tec_cyborg_external_climate_wet
			#has_trait = trait_tec_cyborg_external_climate_cold
			# External T2
			has_trait = trait_tec_cyborg_external_specialist
			has_trait = trait_tec_cyborg_external_multilimb
			has_trait = trait_tec_cyborg_external_climate_multi

			# Deck T1
			has_trait = trait_tec_cyborg_deck_loyalty
			has_trait = trait_tec_cyborg_deck_trading
			#has_trait = trait_tec_cyborg_deck_joywire
			# Deck T2
			has_trait = trait_tec_cyborg_deck_stappled
			has_trait = trait_tec_cyborg_deck_servient
			has_trait = trait_tec_cyborg_deck_automodding
		}
	}
	tec_cybernetic_trait_risk_tooltip = {
		# From SHOULD be indicated in the trait_tooltip trigger
		#TODO ASCENSION - Warning when having 3+ cybernetic traits
		# for t2, warning when having 5+ cybernetic traits
	}
	# Cortex
	tec_has_cybernetic_cortex_trait = {
		OR = {
			# Cortex T1
			has_trait = trait_tec_cyborg_cortex_research
			has_trait = trait_tec_cyborg_cortex_unity
			has_trait = trait_tec_cyborg_cortex_neuroconductor
			has_trait = trait_tec_cyborg_cortex_ram
			# Cortex T2
			has_trait = trait_tec_cyborg_cortex_science
			has_trait = trait_tec_cyborg_cortex_memory
			has_trait = trait_tec_cyborg_cortex_intralink
			has_trait = trait_tec_cyborg_cortex_relic
		}
	}
	tec_cybernetic_cortex_trait_tooltip = {
		hidden_trigger = {
			exists = from
		}
		if = {
			limit = {
				from = {
					has_country_flag = tec_test_traits_max_2
				}
			}
			custom_tooltip = {
				fail_text = tec_only_2_cybernetic_cortex_trait
				calc_true_if = {
					amount < 2
					# Cortex T1
					has_trait = trait_tec_cyborg_cortex_research
					has_trait = trait_tec_cyborg_cortex_unity
					has_trait = trait_tec_cyborg_cortex_neuroconductor
					has_trait = trait_tec_cyborg_cortex_ram
					# Cortex T2
					has_trait = trait_tec_cyborg_cortex_science
					has_trait = trait_tec_cyborg_cortex_memory
					has_trait = trait_tec_cyborg_cortex_intralink
					has_trait = trait_tec_cyborg_cortex_relic
				}
			}
		}
		else = {
			custom_tooltip = {
				fail_text = tec_only_1_cybernetic_cortex_trait
				calc_true_if = {
					amount < 1
					# Cortex T1
					has_trait = trait_tec_cyborg_cortex_research
					has_trait = trait_tec_cyborg_cortex_unity
					has_trait = trait_tec_cyborg_cortex_neuroconductor
					has_trait = trait_tec_cyborg_cortex_ram
					# Cortex T2
					has_trait = trait_tec_cyborg_cortex_science
					has_trait = trait_tec_cyborg_cortex_memory
					has_trait = trait_tec_cyborg_cortex_intralink
					has_trait = trait_tec_cyborg_cortex_relic
				}
			}
		}
	}
	# Internal
	tec_has_cybernetic_internal_trait = {
		OR = {
			# Internal T1
			has_trait = trait_tec_cyborg_internal_organs
			has_trait = trait_tec_cyborg_internal_septic
			has_trait = trait_tec_cyborg_internal_intergumentary
			has_trait = trait_tec_cyborg_internal_retrofit
			# Internal T2
			has_trait = trait_tec_cyborg_internal_servos
			has_trait = trait_tec_cyborg_internal_maintenance
			has_trait = trait_tec_cyborg_internal_vital
		}
	}
	tec_cybernetic_internal_trait_tooltip = {
		hidden_trigger = {
			exists = from
		}
		if = {
			limit = {
				from = {
					has_country_flag = tec_test_traits_max_2
				}
			}
			custom_tooltip = {
				fail_text = tec_only_2_cybernetic_internal_trait
				calc_true_if = {
					amount < 2
					# Internal T1
					has_trait = trait_tec_cyborg_internal_organs
					has_trait = trait_tec_cyborg_internal_septic
					has_trait = trait_tec_cyborg_internal_intergumentary
					has_trait = trait_tec_cyborg_internal_retrofit
					# Internal T2
					has_trait = trait_tec_cyborg_internal_servos
					has_trait = trait_tec_cyborg_internal_maintenance
					has_trait = trait_tec_cyborg_internal_vital
				}
			}
		}
		else = {
			custom_tooltip = {
				fail_text = tec_only_1_cybernetic_internal_trait
				calc_true_if = {
					amount < 1
					# Internal T1
					has_trait = trait_tec_cyborg_internal_organs
					has_trait = trait_tec_cyborg_internal_septic
					has_trait = trait_tec_cyborg_internal_intergumentary
					has_trait = trait_tec_cyborg_internal_retrofit
					# Internal T2
					has_trait = trait_tec_cyborg_internal_servos
					has_trait = trait_tec_cyborg_internal_maintenance
					has_trait = trait_tec_cyborg_internal_vital
				}
			}
		}
	}
	# External
	tec_has_cybernetic_external_trait = {
		OR = {
			# External T1
			has_trait = trait_tec_cyborg_external_worker
			has_trait = trait_tec_cyborg_external_aesthetic
			has_trait = trait_tec_cyborg_external_skin
			has_trait = trait_tec_cyborg_external_connector
			has_trait = trait_tec_cyborg_external_climate_dry
			has_trait = trait_tec_cyborg_external_climate_wet
			has_trait = trait_tec_cyborg_external_climate_cold
			# External T2
			has_trait = trait_tec_cyborg_external_specialist
			has_trait = trait_tec_cyborg_external_multilimb
			has_trait = trait_tec_cyborg_external_climate_multi
		}
	}
	tec_cybernetic_external_trait_tooltip = {
		hidden_trigger = {
			exists = from
		}
		if = {
			limit = {
				from = {
					has_country_flag = tec_test_traits_max_2
				}
			}
			custom_tooltip = {
				fail_text = tec_only_2_cybernetic_external_trait
				calc_true_if = {
					amount < 2
					# External T1
					has_trait = trait_tec_cyborg_external_worker
					has_trait = trait_tec_cyborg_external_aesthetic
					has_trait = trait_tec_cyborg_external_skin
					has_trait = trait_tec_cyborg_external_connector
					has_trait = trait_tec_cyborg_external_climate_dry
					has_trait = trait_tec_cyborg_external_climate_wet
					has_trait = trait_tec_cyborg_external_climate_cold
					# External T2
					has_trait = trait_tec_cyborg_external_specialist
					has_trait = trait_tec_cyborg_external_multilimb
					has_trait = trait_tec_cyborg_external_climate_multi
				}
			}
		}
		else = {
			custom_tooltip = {
				fail_text = tec_only_1_cybernetic_external_trait
				calc_true_if = {
					amount < 1
					# External T1
					has_trait = trait_tec_cyborg_external_worker
					has_trait = trait_tec_cyborg_external_aesthetic
					has_trait = trait_tec_cyborg_external_skin
					has_trait = trait_tec_cyborg_external_connector
					has_trait = trait_tec_cyborg_external_climate_dry
					has_trait = trait_tec_cyborg_external_climate_wet
					has_trait = trait_tec_cyborg_external_climate_cold
					# External T2
					has_trait = trait_tec_cyborg_external_specialist
					has_trait = trait_tec_cyborg_external_multilimb
					has_trait = trait_tec_cyborg_external_climate_multi
				}
			}
		}
	}
	# Cyberdeck
	tec_has_cybernetic_deck_trait = {
		OR = {
			# Deck T1
			has_trait = trait_tec_cyborg_deck_loyalty
			has_trait = trait_tec_cyborg_deck_trading
			has_trait = trait_tec_cyborg_deck_joywire
			# Deck T2
			has_trait = trait_tec_cyborg_deck_stappled
			has_trait = trait_tec_cyborg_deck_servient
			has_trait = trait_tec_cyborg_deck_automodding
		}
	}
	tec_cybernetic_deck_trait_tooltip = {
		hidden_trigger = {
			exists = from
		}
		if = {
			limit = {
				from = {
					has_country_flag = tec_test_traits_max_2
				}
			}
			custom_tooltip = {
				fail_text = tec_only_2_cybernetic_deck_trait
				calc_true_if = {
					amount < 2
					# Deck T1
					has_trait = trait_tec_cyborg_deck_loyalty
					has_trait = trait_tec_cyborg_deck_trading
					has_trait = trait_tec_cyborg_deck_joywire
					# Deck T2
					has_trait = trait_tec_cyborg_deck_stappled
					has_trait = trait_tec_cyborg_deck_servient
					has_trait = trait_tec_cyborg_deck_automodding
				}
			}
		}
		else = {
			custom_tooltip = {
				fail_text = tec_only_1_cybernetic_deck_trait
				calc_true_if = {
					amount < 1
					# Deck T1
					has_trait = trait_tec_cyborg_deck_loyalty
					has_trait = trait_tec_cyborg_deck_trading
					has_trait = trait_tec_cyborg_deck_joywire
					# Deck T2
					has_trait = trait_tec_cyborg_deck_stappled
					has_trait = trait_tec_cyborg_deck_servient
					has_trait = trait_tec_cyborg_deck_automodding
				}
			}
		}
	}
 # /