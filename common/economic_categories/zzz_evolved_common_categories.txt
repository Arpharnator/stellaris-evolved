buffer = {
	hidden = yes
	use_for_ai_budget = yes
}

country = {
	hidden = yes
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		produces
	}

	generate_add_modifiers = {
		produces
	}
	#modifier category: economic_unit is fine
	
	triggered_produces_modifier = {
		key = country_tec_at_war
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes
			#OR = {
				is_at_war = yes
				# Ideally we should add a "exist crisis" here
			#}
		}
	}
	triggered_upkeep_modifier = {
		key = country_tec_at_war
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes
			#OR = {
				is_at_war = yes
				# Ideally we should add a "exist crisis" here
			#}
		}
	}
	
	triggered_produces_modifier = {
		key = country_tec_at_peace
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes
			#OR = {
				is_at_war = no
				# Ideally we should add a "not exist crisis" here
			#}
		}
	}
	triggered_upkeep_modifier = {
		key = country_tec_at_peace
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes
			#OR = {
				is_at_war = no
				# Ideally we should add a "not exist crisis" here
			#}
		}
	}
}

# Base income of country
country_base = {
	parent = country
	generate_add_modifiers = {
		produces
	}
	generate_mult_modifiers = {
		produces
	}
	modifier_category = country
}

trade = {
	use_for_ai_budget = yes
}

trade_routes = {
	parent = trade
}

situations = {
	parent = country
}

resolutions = {
	parent = country
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		cost
	}
}

edicts = {
	use_for_ai_budget = yes
	parent = country
	ai_use_parent_for_resources_upkeep = {
		energy
		food
		minerals
	}
	generate_mult_modifiers = {
		cost
		upkeep
	}
	modifier_category = country
}

rare_edicts = {
	use_for_ai_budget = yes
	parent = edicts
	generate_mult_modifiers = {
		cost
		upkeep
	}
}

ship_edicts = {
	parent = rare_edicts
	use_for_ai_budget = no
}

campaigns = {
	use_for_ai_budget = no
	parent = edicts
	generate_mult_modifiers = {
		cost
	}
}

decisions = {
	use_for_ai_budget = yes
	parent = country
	
	generate_mult_modifiers = {
		cost
	}

	generate_add_modifiers = {
		cost
	}
}


decisions_arcologies = {
	parent = decisions

	
	generate_mult_modifiers = {
		cost
	}

	generate_add_modifiers = {
		cost
	}
}

decisions_ecoworld = {
	parent = decisions_arcologies

	
	generate_mult_modifiers = {
		cost
	}

	generate_add_modifiers = {
		cost
	}
}

decisions_ecu = {
	parent = decisions_arcologies

	
	generate_mult_modifiers = {
		cost
	}

	generate_add_modifiers = {
		cost
	}
}

megastructures = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
		consumer_goods
	}
	parent = country
	modifier_category = megastructure
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
}

megastructures_habitat = {
	use_for_ai_budget = yes
	parent = megastructures
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = megastructure
}

habitats = {
	parent = megastructures_habitat
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
}

# Evolved


tec_protoworlds = {
	parent = megastructures
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
}
# /

megastructures_hyper_relay = {
	parent = megastructures
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
		consumer_goods
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	modifier_category = megastructure
}

ships = {
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		upkeep
		cost
	}
	generate_add_modifiers = {
		upkeep
		cost
	}

	ai_use_parent_for_resources_upkeep = {
		energy
		# this is for bioships
		#food
		#minerals
	}

	parent = country
	modifier_category = ship

	triggered_cost_modifier = {
		key = starbase_shipyard_build
		use_parent_icon = yes

		modifier_types = {
			mult
			add
		}
	}

	triggered_cost_modifier = {
		key = gdf_ship
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			has_ship_owner_type = galactic_community
		}
	}

	triggered_cost_modifier = {
		key = ship_corvette
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_size = corvette
				is_ship_size = offspring_corvette
				is_ship_size = frigate
			}
		}
	}

	triggered_cost_modifier = {
		key = ship_destroyer
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_size = destroyer
				is_ship_size = offspring_destroyer
			}
		}
	}

	triggered_cost_modifier = {
		key = ship_cruiser
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_size = cruiser
				is_ship_size = offspring_cruiser
			}
		}
	}

	triggered_cost_modifier = {
		key = ship_battleship
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_size = battleship
				is_ship_size = offspring_battleship
			}
		}
	}

	triggered_cost_modifier = {
		key = ship_military_station_small
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			is_ship_size = military_station_small
		}
	}

	triggered_upkeep_modifier = {
		key = ship_military_station_small
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			is_ship_size = military_station_small
		}
	}

	triggered_cost_modifier = {
		key = ship_science
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			is_ship_class = shipclass_science_ship
		}
	}

	triggered_cost_modifier = {
		key = ship_military
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_class = shipclass_military
				is_ship_class = shipclass_military_special
			}
		}
	}

	triggered_upkeep_modifier = {
		key = ship_military
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_class = shipclass_military
				is_ship_class = shipclass_military_special
			}
		}
	}

	triggered_cost_modifier = {
		key = ship_science
		use_parent_icon = yes
		modifier_types = {
			add
			mult
		}

		trigger = {
			is_scope_valid = yes
			is_ship_class = shipclass_science_ship
		}
	}
	
	triggered_upkeep_modifier = {
		key = ship_science
		use_parent_icon = yes
		modifier_types = {
			add
			mult
		}

		trigger = {
			is_scope_valid = yes
			is_ship_class = shipclass_science_ship
		}
	}
}

colonies = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	modifier_category = ship

	triggered_cost_modifier = {
		key = ship_colonizer
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_class = shipclass_colonizer
		}
	}

	parent = ships
}

ship_components = {
	parent = ships
	generate_mult_modifiers = {
		cost
	}
}

ship_sections = {
	parent = ships
}

ship_upgrades = {
	parent = ships
	use_for_ai_budget = yes
}

stations = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}

	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}

	parent = country
	modifier_category = deposit #it applies to the planet
}

station_gatherers = {
	parent = stations

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	modifier_category = deposit #it applies to the planet
}

station_researchers = {
	parent = stations

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	modifier_category = deposit #it applies to the planet
}

station_observers = {
	parent = stations

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

station_observer_missions = {
	parent = station_observers
}

starbases = {
	use_for_ai_budget = yes

	generate_mult_modifiers = {
		upkeep
		cost
	}
	ai_use_parent_for_resources_upkeep = {
		energy
	}

	parent = country
	modifier_category = starbase
}

starbase_stations = {
	parent = starbases
	modifier_category = starbase

	triggered_cost_modifier = {
		key = starbase_outpost
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			OR = {
				is_ship_size = starbase_outpost
				is_ship_size = orbital_ring_tier_1 #TODOJM: Remove?
			}
		}
	}
}

starbase_constructions = {
	parent = starbases

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}

	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	modifier_category = starbase
}

starbase_buildings = {
	parent = starbase_constructions

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	modifier_category = starbase
}

starbase_modules = {
	parent = starbase_constructions

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	modifier_category = starbase
}

# Production and research modules 
	starbase_production_modules = {
		parent = starbase_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}

	starbase_food_production_modules = {
		parent = starbase_production_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}

	starbase_minerals_production_modules = {
		parent = starbase_production_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}

	starbase_energy_production_modules = {
		parent = starbase_production_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}

	starbase_research_modules = {
		parent = starbase_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}

	starbase_physics_research_modules = {
		parent = starbase_research_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}

	starbase_society_research_modules = {
		parent = starbase_research_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}

	starbase_engineering_research_modules = {
		parent = starbase_research_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}
# /

terraforming = {
	parent = country
	use_for_ai_budget = yes

	generate_mult_modifiers = {
		cost
	}

	generate_add_modifiers = {
		cost
	}
	modifier_category = planet
}

terraforming_ocean = {
	parent = terraforming

	generate_mult_modifiers = {
		cost
	}

	generate_add_modifiers = {
		cost
	}
	modifier_category = planet
}

planets = {
	parent = country
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		produces
	}
	hidden = yes
}

planet_structures = {
	parent = planets
	hidden = yes
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_buildings = {
	parent = planet_structures

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

#Evolved
	planet_buildings_strongholds = {
		parent = planet_buildings

		generate_mult_modifiers = {
			cost
			upkeep
			produces
		}
		generate_add_modifiers = {
			cost
			upkeep
			produces
		}
	}

	planet_buildings_bastions = {
		parent = planet_buildings_strongholds

		generate_mult_modifiers = {
			cost
			upkeep
			produces
		}
		generate_add_modifiers = {
			cost
			upkeep
			produces
		}
	}
# /

planet_branch_offices = {
	parent = planets

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_buildings_hab_capital = {
	parent = planet_buildings

	generate_mult_modifiers = {
		upkeep
		produces
	}
	generate_add_modifiers = {
		upkeep
		produces
	}
	modifier_category = planet
}


planet_branch_office_buildings = {
	parent = planets
}

planet_holdings = {
	parent = planets
}

planet_districts = {
	parent = planet_structures

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}


planet_districts_farming = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}

	modifier_category = planet
}

planet_districts_mining = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	
	modifier_category = planet
}

planet_districts_generator = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	
	modifier_category = planet
}

planet_districts_cities = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_industrial = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_hab_energy = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_hab_food = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_hab_research = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_hab_mining = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_hab_trade = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_hab_leisure = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_orders_demesne = {
	parent = planet_districts
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_rw_generator = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}
planet_districts_rw_farming = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}
planet_districts_rw_replicator = {	#Evolved
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}


planet_jobs = {
	parent = planets

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = pop

	triggered_produces_modifier = {
		key = planet_jobs_slave
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_pop_category = slave
			OR = {
				has_job_category = worker
				has_job_category = specialist
			}
		}
	}

	triggered_produces_modifier = {
		key = planet_psionic_jobs
		modifier_types = {
			mult
			add
		}
		trigger = {
			species = {
				tec_is_any_psionic_species = yes
			}
		}
	}
	
	triggered_upkeep_modifier = {
		key = planet_psionic_jobs
		modifier_types = {
			mult
			add
		}
		trigger = {
			species = {
				tec_is_any_psionic_species = yes
			}
		}
	}

	triggered_produces_modifier = {
		key = planet_cyborg_jobs
		modifier_types = {
			mult
			add
		}
		trigger = {
			species = {
				tec_is_cyborg_species = yes
			}
		}
	}
	triggered_upkeep_modifier = {
		key = planet_cyborg_jobs
		modifier_types = {
			mult
			add
		}
		trigger = {
			species = {
				tec_is_cyborg_species = yes
			}
			
		}
	}

	triggered_produces_modifier = {
		key = habitat_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = {
				uses_habitat_capitals = yes
			}
		}
	}
	triggered_upkeep_modifier = {	# Evolved
		key = habitat_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = {
				uses_habitat_capitals = yes
			}
		}
	}

	triggered_produces_modifier = {
		key = non_artificial_planet_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = {
				is_artificial = no
				uses_habitat_capitals = no
				tec_is_viable_voidwellerneutral_planet = no
			}
		}
	}
	triggered_upkeep_modifier = {	# Evolved
		key = non_artificial_planet_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = {
				is_artificial = no
				uses_habitat_capitals = no
				tec_is_viable_voidwellerneutral_planet = no
			}
		}
	}

	triggered_produces_modifier = {	# Evolved
		key = artificial_planet_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = {
				is_artificial = yes
			}
		}
	}
	triggered_upkeep_modifier = {	# Evolved
		key = artificial_planet_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = {
				is_artificial = yes
			}
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_worker
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job_category = worker # should be faster
				has_job_category = simple_drone 
				# is_pop_category = worker
				# AND = {
				# 	is_pop_category = slave # Yes, slave should count towards both worker and slave
				# 	has_job_category = worker
				# }
				# is_pop_category = simple_drone
			}
		}
	}

	triggered_upkeep_modifier = {
		key = planet_jobs_worker
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job_category = worker # should be faster
				has_job_category = simple_drone 
				# is_pop_category = worker
				# AND = {
				# 	is_pop_category = slave # Yes, slave should count towards both worker and slave
				# 	has_job_category = worker
				# }
				# is_pop_category = simple_drone
			}
		}
	}

	triggered_produces_modifier = { #use this one if deliberately excluding worker drones
		key = planet_jobs_worker_only
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job_category = worker # should be faster
				# is_pop_category = worker
				# AND = {
				# 	is_pop_category = slave # Yes, slave should count towards both worker and slave
				# 	has_job_category = worker
				# }
			}
		}
	}

	triggered_upkeep_modifier = { #use this one if deliberately excluding worker drones
		key = planet_jobs_worker_only
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job_category = worker # should be faster
				# is_pop_category = worker
				# AND = {
				# 	is_pop_category = slave # Yes, slave should count towards both worker and slave
				# 	has_job_category = worker
				# }
			}
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_specialist
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job_category = specialist
				has_job_category = complex_drone
				# evolved
				has_job_category = tec_brood_drone
				has_job_category = tec_prime_drone
				has_job_category = tec_hedonists

				# is_pop_category = specialist
				# is_pop_category = complex_drone #should use planet_jobs_complex_drone wherever possible, this is just for cases like species traits
				# # Evolved
				# is_pop_category = tec_hedonists
				# is_pop_category = tec_brood_drone
				# is_pop_category = tec_prime_drone
				# # /
				# AND = {
				# 	is_pop_category = slave
				# 	has_job_category = specialist
				# }
			}
		}
	}

	triggered_upkeep_modifier = {
		key = planet_jobs_specialist
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job_category = specialist
				has_job_category = complex_drone
				# evolved
				has_job_category = tec_brood_drone
				has_job_category = tec_prime_drone
				has_job_category = tec_hedonists

				# is_pop_category = specialist
				# is_pop_category = complex_drone #should use planet_jobs_complex_drone wherever possible, this is just for cases like species traits
				# # Evolved
				# is_pop_category = tec_hedonists
				# is_pop_category = tec_brood_drone
				# is_pop_category = tec_prime_drone
				# # /
				# AND = {
				# 	is_pop_category = slave
				# 	has_job_category = specialist
				# }
			}
		}
	}

	triggered_produces_modifier = { #use this one if deliberately excluding complex drones
		key = planet_jobs_specialist_only
		modifier_types = {
			mult
		}
		trigger = {
			OR = {
				has_job_category = specialist
				# Evolved
				has_job_category = tec_hedonists
				# is_pop_category = specialist
				# # Evolved
				# is_pop_category = tec_hedonists
				# # /
				# AND = {
				# 	is_pop_category = slave
				# 	has_job_category = specialist
				# }
			}
		}
	}

	triggered_upkeep_modifier = { #use this one if deliberately excluding complex drones
		key = planet_jobs_specialist_only
		modifier_types = {
			mult
		}
		trigger = {
			OR = {
				has_job_category = specialist
				# Evolved
				has_job_category = tec_hedonists
				# is_pop_category = specialist
				# # Evolved
				# is_pop_category = tec_hedonists
				# # /
				# AND = {
				# 	is_pop_category = slave
				# 	has_job_category = specialist
				# }
			}
		}
	}


	triggered_produces_modifier = {
		key = planet_jobs_ruler
		modifier_types = {
			mult
			add
		}
		trigger = {
			has_job_category = ruler
		}
	}
	triggered_upkeep_modifier = {
		key = planet_jobs_ruler
		modifier_types = {
			mult
			add
		}
		trigger = {
			has_job_category = ruler
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_simple_drone
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job_category = simple_drone # should be more efficient
				# is_pop_category = simple_drone
				# AND = {
				# 	is_pop_category = robot_servant # Yes, robot servants should count towards simple drones
				# 	has_job_category = simple_drone
				# }
				# AND = {
				# 	is_pop_category = tec_free_agent # Yes, robot servants should count towards simple drones
				# 	has_job_category = simple_drone
				# }
			}
			
		}
	}

	triggered_upkeep_modifier = {
		key = planet_jobs_simple_drone
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job_category = simple_drone # should be more efficient
				# is_pop_category = simple_drone
				# AND = {
				# 	is_pop_category = robot_servant # Yes, robot servants should count towards simple drones
				# 	has_job_category = simple_drone
				# }
				# AND = {
				# 	is_pop_category = tec_free_agent # Yes, robot servants should count towards simple drones
				# 	has_job_category = simple_drone
				# }
			}
			
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_complex_drone
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job_category = complex_drone
				has_job_category = tec_brood_drone
				has_job_category = tec_prime_drone
				# is_pop_category = complex_drone
				# is_pop_category = tec_brood_drone
				# is_pop_category = tec_prime_drone
			}
		}
	}
	triggered_upkeep_modifier = {
		key = planet_jobs_complex_drone
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job_category = complex_drone
				has_job_category = tec_brood_drone
				has_job_category = tec_prime_drone
				
				# is_pop_category = complex_drone
				# is_pop_category = tec_brood_drone
				# is_pop_category = tec_prime_drone
			}
		}
	}
	triggered_produces_modifier = {
		key = planet_jobs_complex_and_simple_drone
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job_category = simple_drone 
				has_job_category = complex_drone
				has_job_category = tec_brood_drone
				has_job_category = tec_prime_drone
				# is_pop_category = complex_drone
				# is_pop_category = simple_drone
				# AND = {
				# 	is_pop_category = robot_servant # Yes, robot servants should count towards simple drones
				# 	has_job_category = simple_drone
				# }
				# is_pop_category = tec_brood_drone
				# is_pop_category = tec_prime_drone
			}
			
		}
	}
	triggered_upkeep_modifier = {
		key = planet_jobs_complex_and_simple_drone
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job_category = simple_drone 
				has_job_category = complex_drone
				has_job_category = tec_brood_drone
				has_job_category = tec_prime_drone
				# is_pop_category = complex_drone
				# is_pop_category = simple_drone
				# AND = {
				# 	is_pop_category = robot_servant # Yes, robot servants should count towards simple drones
				# 	has_job_category = simple_drone
				# }
				# is_pop_category = tec_brood_drone
				# is_pop_category = tec_prime_drone
			}
			
		}
	}

	#Evolved
		triggered_produces_modifier = {
			key = planet_jobs_tec_prime_drone
			modifier_types = {
				mult
				add
			}
			trigger = {
				has_job_category = tec_prime_drone
			}
		}
		triggered_upkeep_modifier = {
			key = planet_jobs_tec_prime_drone
			modifier_types = {
				mult
				add
			}
			trigger = {
				has_job_category = tec_prime_drone
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_tec_brood_drone
			modifier_types = {
				mult
				add
			}
			trigger = {
				has_job_category = tec_brood_drone
			}
		}
		triggered_upkeep_modifier = {
			key = planet_jobs_tec_brood_drone
			modifier_types = {
				mult
				add
			}
			trigger = {
				has_job_category = tec_brood_drone
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_tec_main_species
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					is_same_species = from.owner
				}
			}
		}
		triggered_upkeep_modifier = {
			key = planet_jobs_tec_main_species
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					is_same_species = from.owner
				}
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_tec_xeno_species
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					NOT = {
						is_same_species = from.owner
					}
				}
			}
		}
		triggered_upkeep_modifier = {
			key = planet_jobs_tec_xeno_species
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					NOT = {
						is_same_species = from.owner
					}
				}
			}
		}

	# /

	triggered_produces_modifier = {
		key = planet_jobs_robotic
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				is_robot_pop = yes
				# Evolved
				species = {
					tec_is_replicant_species = yes
				}
			}
		}
	}
	triggered_upkeep_modifier = {	# Evolved
		key = planet_jobs_robotic
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				is_robot_pop = yes
				# Evolved
				species = {
					tec_is_replicant_species = yes
				}
			}
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_organics
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_robot_pop = no
		}
	}
	triggered_upkeep_modifier = {	# Evolved
		key = planet_jobs_organics
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_robot_pop = no
		}
	}

	# Stellaris Evolved
		triggered_produces_modifier = {
			key = planet_jobs_bioservant
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					tec_is_bioservant_species = yes
				}
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_replicant
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					tec_is_replicant_species = yes
				}
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_energyentity
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_robot_pop = yes
			}
		}
	# /

	# Stellaris Evolved
		# Used for both robots and synths
		triggered_produces_modifier = {
			key = planet_jobs_tec_cybernetics
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					OR = {
						is_robotic = yes
						tec_is_cyborg_species = yes
					}
				}
			}
		}
		triggered_upkeep_modifier = {
			key = planet_jobs_tec_cybernetics
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					OR = {
						is_robotic = yes
						tec_is_cyborg_species = yes
					}
				}
				
			}
		}

		# Specific for cybernetic ap
		triggered_produces_modifier = {
			key = planet_jobs_tec_cyberlinked
			modifier_types = {
				mult
				add
			}
			trigger = {
				always = no
			}
		}
		
		triggered_upkeep_modifier = {
			key = planet_jobs_tec_cyberlinked
			modifier_types = {
				mult
				add
			}
			trigger = {
				always = no
			}
		}

		# Specific for pure of form
		triggered_produces_modifier = {
			key = planet_jobs_tec_biopsionic_embroidered
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					OR = {
						has_trait = @trait_tec_biopsionic_embroidered
					}
				}
			}
		}
		
		triggered_upkeep_modifier = {
			key = planet_jobs_tec_biopsionic_embroidered
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					OR = {
						has_trait = @trait_tec_biopsionic_embroidered
					}
				}
				
			}
		}
	
		#triggered_produces_modifier = {	# Unused for now
		#	key = planet_jobs_tec_calm	
		#	modifier_types = {
		#		mult
		#		add
		#	}
		#	trigger = {
		#		species = {
		#			has_trait = trait_tec_biopsionic_calm
		#		}
		#	}
		#}
		#
		#triggered_upkeep_modifier = {
		#	key = planet_jobs_tec_calm
		#	modifier_types = {
		#		mult
		#		add
		#	}
		#	trigger = {
		#		species = {
		#			has_trait = trait_tec_biopsionic_calm
		#		}
		#		
		#	}
		#}
		triggered_produces_modifier = {
			key = planet_jobs_tec_converged
			modifier_types = {
				mult
				add
			}
			trigger = {
				has_modifier = tec_converged_pop
			}
		}
		triggered_upkeep_modifier = {
			key = planet_jobs_tec_converged
			modifier_types = {
				mult
				add
			}
			trigger = {
				has_modifier = tec_converged_pop
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_tec_main_species
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					is_same_species = owner_main_species
				}
			}
		}
		triggered_upkeep_modifier = {
			key = planet_jobs_tec_main_species
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					is_same_species = owner_main_species
				}
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_tec_xeno_species
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					NOT = {
						is_same_species = owner_main_species
					}
				}
			}
		}
		triggered_upkeep_modifier = {
			key = planet_jobs_tec_xeno_species
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					NOT = {
						is_same_species = owner_main_species
					}
				}
			}
		}
	# /
		# LIFEAFFINITY
	triggered_produces_modifier = {
		key = gaia_planet_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = {
				tec_is_gaia_world = yes
			}
		}
	}
	triggered_upkeep_modifier = {
		key = gaia_planet_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = {
				tec_is_gaia_world = yes
			}
		}
	}
	triggered_produces_modifier = {
		key = perfect_planet_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = {
				tec_is_perfect_planet = { cached = yes }
			}
		}
	}
	triggered_upkeep_modifier = {
		key = perfect_planet_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = {
				tec_is_perfect_planet = { cached = yes }
			}
		}
	}

	triggered_produces_modifier = {
		key = non_perfect_planet_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = {
				NOT = { tec_is_perfect_planet = { cached = yes } } 
				NOT = { tec_is_neutral_planet = { cached = yes } }
			}
		}
	}
	triggered_upkeep_modifier = {
		key = non_perfect_planet_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = {
				NOT = { tec_is_perfect_planet = { cached = yes } } 
				NOT = { tec_is_neutral_planet = { cached = yes } }
			}
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_hired
		modifier_types = {
			add
			mult
		}
		trigger = {
			tec_has_hired_job = yes
		}
	}
	
	triggered_upkeep_modifier = {
		key = planet_jobs_hired
		modifier_types = {
			add
			mult
		}
		trigger = {
			tec_has_hired_job = yes
		}
	}

	inline_script = economic_categories/inline_evolved_xvcv_pop_category_drones
	inline_script = economic_categories/inline_evolved_pd_biosynths
}

planet_criminals = {
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_jobs_productive = { #this should contain all categories that primarily produce resources (rather than e.g. amenities, trade, stability)
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_bio_trophies = {
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

# Evolved
	planet_tec_free_agents = {
		parent = planet_jobs
		generate_mult_modifiers = {
			produces
			upkeep
		}
		generate_add_modifiers = {
			produces
			upkeep
		}
		modifier_category = pop
	}

	planet_tec_integrated = {
		parent = planet_jobs
		generate_mult_modifiers = {
			produces
			upkeep
		}
		generate_add_modifiers = {
			produces
			upkeep
		}
		modifier_category = pop
	}
# /

planet_pop_assemblers = {
	parent = planet_jobs
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

planet_farmers = {
	parent = planet_jobs_productive
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces 
		upkeep
	}
}

planet_anglers = {
	parent = planet_farmers
}

planet_miners = {
	parent = planet_jobs_productive
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}


planet_technician = {
	parent = planet_jobs_productive
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_sr_miners = { #added because we don't want miners_minerals_produces_add to apply to these
	parent = planet_miners
	modifier_category = pop
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_tec_labour_heroes = {
	parent = planet_jobs_productive
	modifier_category = pop
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}

	# considered all types of jobs
		triggered_produces_modifier = {
			key = planet_miners
			modifier_types = {
				mult
				add
			}
			trigger = {
				always = yes
			}
			use_parent_icon = yes
		}
		triggered_upkeep_modifier = {
			key = planet_miners
			modifier_types = {
				mult
				add
			}
			trigger = {
				always = yes
			}
			use_parent_icon = yes
		}

		triggered_produces_modifier = {
			key = planet_farmers
			modifier_types = {
				mult
				add
			}
			trigger = {
				always = yes
			}
			use_parent_icon = yes
		}
		triggered_upkeep_modifier = {
			key = planet_farmers
			modifier_types = {
				mult
				add
			}
			trigger = {
				always = yes
			}
			use_parent_icon = yes
		}

		triggered_produces_modifier = {
			key = planet_technician
			modifier_types = {
				mult
				add
			}
			trigger = {
				always = yes
			}
			use_parent_icon = yes
		}
		triggered_upkeep_modifier = {
			key = planet_technician
			modifier_types = {
				mult
				add
			}
			trigger = {
				always = yes
			}
			use_parent_icon = yes
		}
	# /
}

planet_livestock = {
	parent = planet_jobs_productive
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}

	triggered_produces_modifier = {
		key = planet_livestock_biological
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_organic_species = yes
			is_lithoid = no
		}
		use_parent_icon = yes
	}

	triggered_produces_modifier = {
		key = planet_livestock_lithoid
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_lithoid = yes
		}
		use_parent_icon = yes
	}

}

planet_tec_batteries = {	# Evolved
	icon = "job_organic_battery"
	parent = planet_jobs_productive
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_colonists = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_politicians = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_administrators = {
	icon = "job_bureaucrat"
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_executives = {
	parent = planet_politicians
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_managers = {
	parent = planet_administrators
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_researchers = {
	icon = "job_researcher"
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_metallurgists = {
	icon = "job_foundry"
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_laborer = {
	icon = "low_tech_laborer"
	parent = planet_jobs_productive
	modifier_category = pop
}

planet_culture_workers = {
	parent = planet_administrators
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_evaluators = {
	parent = planet_administrators
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_nobles = {
	parent = planet_politicians
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_necro_apprentices = {
	parent = planet_pop_assemblers
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_merchants = {
	parent = planet_jobs
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_tec_trade_drones = {
	parent = planet_jobs
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_entertainers = {
	parent = planet_jobs
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_soldiers = {
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_squires = {
	parent = planet_jobs
}

# Evolved
	planet_tec_state_workers = {
		parent = planet_jobs_productive
		modifier_category = pop
		generate_mult_modifiers = {
			produces
			upkeep
		}
		generate_add_modifiers = {
			produces
			upkeep
		}
	}
# /

planet_priests = {
	parent = planet_administrators
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_enforcers = {
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_clerks = {
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_telepaths = {
	parent = planet_administrators
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_doctors = {
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_refiners = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_translucers = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_chemists = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_artisans = {
	icon = "job_artisan"
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}

	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}


planet_bath_attendants = {
	icon = "job_bath_attendant"
	parent = planet_jobs
	modifier_category = pop
}

planet_bath_attendants_hive = {
	icon = "job_bath_attendant"
	parent = planet_jobs
	modifier_category = pop
}

planet_bath_attendants_machine = {
	icon = "job_bath_attendant"
	parent = planet_jobs
	modifier_category = pop
}

#DO NOT ASSIGN A PARENT TO THIS.
#It is a special hack. The normal job modifiers apply via knights_unity/research_output_modifier script values in the jobs
knights_independent_category = {
	generate_mult_modifiers = {
		produces
	}
}

# Evolved
	planet_maintenancedrones = {
		icon = "job_maintenance_drone"
		parent = planet_jobs

		generate_add_modifiers = {
			produces
			upkeep
		}

		generate_mult_modifiers = {
			produces
			upkeep
		}
		modifier_category = pop
	}
# /

planet_pops = {
	parent = planets
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	triggered_produces_modifier = {		# Evolved
		key = planet_pops_robotics
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				is_robot_pop = yes
				species = {
					tec_is_replicant_species = yes
				}
			}
		}
	}
	triggered_upkeep_modifier = {
		key = planet_pops_robotics
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				is_robot_pop = yes
				species = {
					tec_is_replicant_species = yes
				}
			}
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_cyborgs
		modifier_types = {
			mult
		}
		trigger = {
			tec_is_cyborg_species = yes
		}
	}

	triggered_produces_modifier = {		# Evolved
		key = planet_pops_organics
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_robot_pop = no
		}
	}
	triggered_upkeep_modifier = {
		key = planet_pops_organics
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_robot_pop = no
		}
	}

	triggered_produces_modifier = {		# Evolved
		key = planet_pops_lithoids
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_lithoid = yes
		}
	}
	triggered_upkeep_modifier = {
		key = planet_pops_lithoids
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_lithoid = yes
		}
	}

	# Stellaris Evolved
		triggered_upkeep_modifier = {
			key = planet_pops_bioservant
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					tec_is_replicant_species = yes
				}
			}
		}

		triggered_upkeep_modifier = {
			key = planet_pops_replicant
			modifier_types = {
				mult
				add
			}
			trigger = {
				species = {
					tec_is_replicant_species = yes
				}
			}
		}

		triggered_upkeep_modifier = {
			key = planet_pops_tec_cybernetics
			modifier_types = {
				mult
				add
			}
			trigger = {
				OR = {
					is_robot_pop = yes
					tec_is_cyborg_species = yes
				}
			}
		}
	# /
	triggered_upkeep_modifier = {
		key = planet_pops_unemployed
		modifier_types = {
			add
		}
		trigger = {
			is_unemployed = yes
		}
	}
	# PD

	inline_script = economic_categories/inline_evolved_pd_biosynths
}

unemployment_resources = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

pop_category_precursor = {
	parent = planet_pops
	modifier_category = pop
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	
	# New eco modification
		inline_script = economic_categories/inline_evolved_pop_category_non_slave_resources
		inline_script = economic_categories/inline_evolved_pop_category_normal_resources
	# /
}

pop_category_xeno_ward = {
	parent = planet_pops
	modifier_category = pop
	generate_add_modifiers = {
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}

		
	# New eco modification
		inline_script = economic_categories/inline_evolved_pop_category_non_slave_resources
		inline_script = economic_categories/inline_evolved_pop_category_normal_resources
	# /
}

pop_category_pre_sapients = {
	parent = planet_pops
	modifier_category = pop
	generate_add_modifiers = {
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}

	
	# New eco modification
		inline_script = economic_categories/inline_evolved_pop_category_normal_resources
	# /
}

pop_category_purge = {
	parent = planet_pops
	modifier_category = pop
	generate_add_modifiers = {
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}

	# New eco modification
	# NOTE: Deliberatedly different
		inline_script = economic_categories/inline_evolved_pop_category_purge_resources
	# /
}

pop_category_bio_trophy = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	
	# New eco modification
		inline_script = economic_categories/inline_evolved_pop_category_normal_resources
	# /
}

pop_category_slave = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	# New eco modification
		inline_script = economic_categories/inline_evolved_pop_category_normal_resources
	# /

	inline_script = {
		script = economic_categories/inline_evolved_xvcv_pop_category_bio_robot
		pop_category = slave
	}
	inline_script = {
		script = economic_categories/inline_evolved_pse_pop_category_psionic
		pop_category = slave
	}
}

pop_category_robot = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	# New eco modification
		inline_script = economic_categories/inline_evolved_pop_category_normal_resources
	# /
}

pop_category_drones = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	# New eco modification
		inline_script = economic_categories/inline_evolved_pop_category_non_slave_resources
		inline_script = economic_categories/inline_evolved_pop_category_normal_resources
	# /

	inline_script = economic_categories/inline_evolved_xvcv_pop_category_drones
}

pop_category_workers = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	# New eco modification
		inline_script = economic_categories/inline_evolved_pop_category_non_slave_resources
		inline_script = economic_categories/inline_evolved_pop_category_normal_resources
	# /

	inline_script = {
		script = economic_categories/inline_evolved_xvcv_pop_category_bio_robot
		pop_category = workers
	}
	inline_script = {
		script = economic_categories/inline_evolved_pse_pop_category_psionic
		pop_category = workers
	}
}

pop_category_specialists = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	# New eco modification
		inline_script = economic_categories/inline_evolved_pop_category_non_slave_resources
		inline_script = economic_categories/inline_evolved_pop_category_normal_resources
	# /

	inline_script = {
		script = economic_categories/inline_evolved_xvcv_pop_category_bio_robot
		pop_category = specialists
	}
	inline_script = {
		script = economic_categories/inline_evolved_pse_pop_category_psionic
		pop_category = specialists
	}
}

pop_category_rulers = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	# New eco modification
		inline_script = economic_categories/inline_evolved_pop_category_non_slave_resources

		inline_script = economic_categories/inline_evolved_pop_category_normal_resources
	# /

	inline_script = {
		script = economic_categories/inline_evolved_xvcv_pop_category_bio_robot
		pop_category = rulers
	}
	inline_script = {
		script = economic_categories/inline_evolved_pse_pop_category_psionic
		pop_category = rulers
	}
}

pop_category_assimilation = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	
	# New eco modification
		# Note: Deliberatedly different
		inline_script = economic_categories/inline_evolved_pop_category_assimilation_resources
	# /
}

# Evolved
	pop_category_tec_free_agent = {
		parent = planet_pops
		generate_add_modifiers = {
			upkeep
		}
		generate_mult_modifiers = {
			produces
			upkeep
		}
		modifier_category = pop

		
		# New eco modification
			inline_script = economic_categories/inline_evolved_pop_category_normal_resources
		# /
	}
# /

planet_deposits = {
	parent = planets
	generate_add_modifiers = {
		produces
	}
}

orbital_mining_deposits = {
	parent = station_gatherers
}

orbital_research_deposits = {
	parent = station_researchers
}

deposit_blockers = {
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		cost
	}

	modifier_category = deposit

	ai_use_parent_for_resources_upkeep = {
		energy
	}

	parent = country
}

deposit_blockers_natural = {
	generate_add_modifiers = {
		produces
	}
	modifier_category = deposit

	parent = deposit_blockers
}

armies = {
	use_for_ai_budget = yes

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = army

	parent = country
}

leaders = {
	use_for_ai_budget = yes

	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	modifier_category = leader

	parent = country
}

leader_admirals = {
	parent = leaders
	modifier_category = leader
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}

	inline_script = economic_categories/inline_evolved_leaders

	inline_script = economic_categories/inline_evolved_leaders_resources

	inline_script = {
		script = economic_categories/inline_evolved_pse_leader_psionic
		class = admirals
	}
}

leader_generals = {
	parent = leaders
	modifier_category = leader
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	inline_script = economic_categories/inline_evolved_leaders

	inline_script = economic_categories/inline_evolved_leaders_resources

	inline_script = {
		script = economic_categories/inline_evolved_pse_leader_psionic
		class = generals
	}
}

leader_scientists = {
	parent = leaders
	modifier_category = leader
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	inline_script = economic_categories/inline_evolved_leaders

	inline_script = economic_categories/inline_evolved_leaders_resources

	inline_script = {
		script = economic_categories/inline_evolved_pse_leader_psionic
		class = scientists
	}
}

leader_governors = {
	parent = leaders
	modifier_category = leader
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	inline_script = economic_categories/inline_evolved_leaders
	
	inline_script = economic_categories/inline_evolved_leaders_resources

	inline_script = {
		script = economic_categories/inline_evolved_pse_leader_psionic
		class = governors
	}
}

leader_envoys = {
	parent = leaders
	modifier_category = leader
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
}

diplomacy = {
	hidden = yes
	parent = country
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = country
}

# Country wide modifier collection
country_container = {
	hidden = yes
	parent = country
}

country_monuments = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_ambition = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_federation_perks = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_civics = {
	parent = country_container
	generate_add_modifiers = {
		upkeep
		produces
	}

	generate_mult_modifiers = {
		upkeep
		produces
	}
	modifier_category = country
}

country_ai_uprising = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_covenant = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_dessanu = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_extended_payout = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_shoulders = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_galactic_standard = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_concessions = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_first_contact = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_custodian = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_tech = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_traditions = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}

	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
	modifier_category = country
}

country_councilor = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_ruler = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_agendas = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_ethic = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_first_league_homeworld = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_power_projection = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	generate_mult_modifiers = {
		produces
	}
	modifier_category = country
}

pop_factions = {
	parent = country
	generate_mult_modifiers = {
		produces
	}

	generate_add_modifiers = {
		produces
	}
	modifier_category = country #pop factions category currently unused
}

subjects = {
	parent = diplomacy
}

federation = {
	parent = diplomacy
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

rivalries = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
	}
}

non_aggression_pacts = {
	parent = diplomacy
}

migration_pacts = {
	parent = diplomacy
}

research_agreements = {
	parent = diplomacy
	generate_mult_modifiers = {
		cost
	}

	generate_add_modifiers = {
		produces
	}
}

commercial_pacts = {
	parent = diplomacy
}

defensive_pacts = {
	parent = diplomacy
}

guarantees = {
	parent = diplomacy
}

monthly_trades = {
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

claims = {
	use_for_ai_budget = yes
	parent = country
}

agreement_proposals = {
	use_for_ai_budget = yes
	parent = diplomacy
}

subject_tax = {
}

envoy_costs = {
	parent = diplomacy
}

diplo_closed_borders = {
	parent = diplomacy
}

diplomatic_networking = {
	parent = diplomacy
}

societal_enlightenment_pacts = {
	parent = diplomacy
}

open_technological_enlightenment_pacts = {
	parent = diplomacy
}

stratified_technological_enlightenment_pacts = {
	parent = diplomacy
}

pre_ftl_trade_pacts = {
	parent = diplomacy
}

subject_integration = {
}

overlord_subsidy = {
}

specialist_subject_conversion = {
}

relics = {
}

artifact_actions = {
}

sector = {
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

menace = {
}

traditions = {
	use_for_ai_budget = yes
	parent = country
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}

	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

operations = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	generate_mult_modifiers = {
		cost
		upkeep
	}
	parent = country
	modifier_category = espionage
}

country_situations = {
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}
