# O V E R W R I T E 

# ------------ Gestalt social classes ---------------
# 	name = {
# 		script
#		weight
#		pop modifier
#		resettlement
#		unemployment
#		specific trait planet modifiers
#		trade
#		resources
#	}

complex_drone = {
	rank = 2
	clothes_texture_index = 2

	change_job_threshold = 1.25

	weight = {
		weight = 2
	}

	pop_modifier = {
		pop_housing_usage_base = 1
		pop_amenities_usage_no_happiness_base = 1
	}

	# Resettlement
		# scope: pop to be resettled
		allow_resettlement = {
			always = yes
		}
	
		resettlement_cost = {
			trigger = {
				NOT = {
					has_trait = @trait_tec_psionic_teleport
				}
			}
			energy = 100
		}
	
		resettlement_cost = {
			trigger = {
				NOR = {
					AND = {
						exists = owner
						owner = {
							OR = {
								has_valid_civic = civic_machine_ota_updates
								has_valid_civic = civic_hive_subsumed_will
							}
						}
					}
					has_trait = @trait_tec_psionic_teleport
				}
			}
			unity = 10
		}
	
	# /

	# Unemployment
		unemployment_resources = {
			category = unemployment_resources
		}
	# /

	# Pop modifiers
		# Biopsi
			triggered_planet_modifier = {	# Biopsi
				potential = {
					OR = {
						has_trait = @trait_tec_biopsionic_embroidered
						has_trait = trait_tec_biopsionic_seed
					}
				}
				planet_psionic_jobs_produces_mult = @tec_biopsionic_embroidered_rate
			}
			triggered_planet_modifier = {	# Biopsi
				potential = {
					has_trait = @trait_tec_biopsionic_embroidered
					has_modifier = tec_converged_pop
				}
				planet_psionic_jobs_produces_mult = @tec_biopsionic_embroidered_rate
			}
		# /
		# Replicant
			triggered_planet_modifier = {
				potential = {
					has_trait = trait_tec_replicant_capacitor
					exists = owner
					owner = {
						has_country_flag = tec_replicant_upgraded
					}
				}
				planet_jobs_produces_mult = @tec_replicant_capacitor_rate
			}
		# /
		# Cyborg
			triggered_planet_modifier = {
				potential = {
					tec_is_cyborg_species = yes
					exists = owner
					owner = {
						OR = {
							has_country_flag = tec_cybernetic_submodule_construction
							has_country_flag = tec_cybernetic_submodule_construction_2
						}
					}
				}
				planet_building_build_speed_mult = 0.01
			}
		# /
		# Budding
			triggered_planet_modifier = {
				planet_pop_assembly_organic_add = 1
				mult = modifier:tec_pop_self_assembly_organic_add
			}
			triggered_planet_modifier = {
				planet_pop_assembly_add = 1
				mult = modifier:tec_pop_self_assembly_add
			}
		# /
		
		# Noxious
			triggered_pop_modifier = {
				potential = {
					NOT = { has_trait = trait_noxious }
				}
				key = trait_noxious
				pop_happiness = 1
				mult = modifier:pop_non_noxious_happiness
			}
			triggered_planet_modifier = {
				potential = {
					has_trait = trait_noxious
				}
				key = trait_noxious
				pop_non_noxious_happiness = @noxious_happiness_penalty
			}
		# /
		# Robotic Noxious
			triggered_planet_modifier = {
				potential = {
					has_trait = trait_tec_robot_noxious
				}
				habitability_ceil_add = @tec_robot_noxious_habitability_reduction
			}
		# /
		# # Overclock
		# 	triggered_pop_modifier = {	# Hive overclock
		# 		potential = {
		# 			exists = owner
		# 			owner = {
		# 				has_policy_flag = tec_low_overclock_hive
		# 			}
		# 		}
		# 		planet_jobs_produces_mult = 0.025
		# 	}
		# 	triggered_pop_modifier = {
		# 		potential = {
		# 			exists = owner
		# 			owner = {
		# 				has_policy_flag = tec_mid_overclock_hive
		# 			}
		# 		}
		# 		planet_jobs_produces_mult = 0.05
		# 	}
		# 	triggered_pop_modifier = {
		# 		potential = {
		# 			exists = owner
		# 			owner = {
		# 				has_policy_flag = tec_max_overclock_hive
		# 			}
		# 		}
		# 		planet_jobs_produces_mult = 0.1
		# 	}
		# # /
	# /

	resources = {
		category = pop_category_drones
		# Regular food, mineral and energy upkeep.
			inline_script = "pop_categories/inline_evolved_pop_upkeep"
		# Additional energy upkeep for cyborgs.
			# Note : The vanilla ones work diff than evolved so
			# inline_script = "pop_categories/cyborg_upkeep"
		# Production traits
			inline_script = "pop_categories/inline_evolved_pop_production"
		# Instrument of Desire Upkeep
			inline_script = "pop_categories/instrument_upkeep"
			
		# Bio-Synth Upkeep
			inline_script = "pop_categories/biosynth_traits"
	}
}

simple_drone = {
	rank = 1
	clothes_texture_index = 2

	change_job_threshold = 1.15

	# This is called whenever a Pop is created, moved to a different planet, or gets a new owner
	assign_to_pop = {
		exists = owner
		owner = { is_gestalt = yes }
	}
	weight = {
		weight = 1
	}

	pop_modifier = {
		pop_housing_usage_base = 1
		pop_amenities_usage_no_happiness_base = 1
	}

	# Resettlement
		# scope: pop to be resettled
		allow_resettlement = {
			always = yes
		}
	
		resettlement_cost = {
			trigger = {
				NOR = {
					AND = {
						exists = owner
						owner = {
							OR = {
								has_valid_civic = civic_machine_ota_updates
								has_valid_civic = civic_hive_subsumed_will
							}
						}
					}
					has_trait = @trait_tec_psionic_teleport
				}
			}
			unity = 10
		}

		resettlement_cost = {
			trigger = {
				NOT = {
					has_trait = @trait_tec_psionic_teleport
				}
			}
			energy = 100
		}
	# /

	# Unemployment
		unemployment_resources = {
			category = unemployment_resources
			produces = {
				trigger = {
					exists = owner
					owner = {
						is_hive_empire = yes
					}
				}
				minerals = 1
			}
		}

	# /

	# Pop modifiers
		# Biopsi
			triggered_planet_modifier = {	# Biopsi
				potential = {
					OR = {
						has_trait = @trait_tec_biopsionic_embroidered
						has_trait = trait_tec_biopsionic_seed
					}
				}
				planet_psionic_jobs_produces_mult = @tec_biopsionic_embroidered_rate
			}
			triggered_planet_modifier = {	# Biopsi
				potential = {
					has_trait = @trait_tec_biopsionic_embroidered
					has_modifier = tec_converged_pop
				}
				planet_psionic_jobs_produces_mult = @tec_biopsionic_embroidered_rate
			}
		# /
		# Replicant
			triggered_planet_modifier = {
				potential = {
					has_trait = trait_tec_replicant_capacitor
					exists = owner
					owner = {
						has_country_flag = tec_replicant_upgraded
					}
				}
				planet_jobs_produces_mult = @tec_replicant_capacitor_rate
			}
		# /
		# Cyborg
			triggered_planet_modifier = {
				potential = {
					tec_is_cyborg_species = yes
					exists = owner
					owner = {
						OR = {
							has_country_flag = tec_cybernetic_submodule_construction
							has_country_flag = tec_cybernetic_submodule_construction_2
						}
					}
				}
				planet_building_build_speed_mult = 0.01
			}
		# /
		# Budding
			triggered_planet_modifier = {
				planet_pop_assembly_organic_add = 1
				mult = modifier:tec_pop_self_assembly_organic_add
			}
			triggered_planet_modifier = {
				planet_pop_assembly_add = 1
				mult = modifier:tec_pop_self_assembly_add
			}
		# /
		
		# Noxious
			triggered_pop_modifier = {
				potential = {
					NOT = { has_trait = trait_noxious }
				}
				key = trait_noxious
				pop_happiness = 1
				mult = modifier:pop_non_noxious_happiness
			}
			triggered_planet_modifier = {
				potential = {
					has_trait = trait_noxious
				}
				key = trait_noxious
				pop_non_noxious_happiness = @noxious_happiness_penalty
			}
		# /
		# Robotic Noxious
			triggered_planet_modifier = {
				potential = {
					has_trait = trait_tec_robot_noxious
				}
				habitability_ceil_add = @tec_robot_noxious_habitability_reduction
			}
		# /
		# # Overclock
		# 	triggered_pop_modifier = {	# Hive overclock
		# 		potential = {
		# 			exists = owner
		# 			owner = {
		# 				has_policy_flag = tec_low_overclock_hive
		# 			}
		# 		}
		# 		planet_jobs_produces_mult = 0.025
		# 	}
		# 	triggered_pop_modifier = {
		# 		potential = {
		# 			exists = owner
		# 			owner = {
		# 				has_policy_flag = tec_mid_overclock_hive
		# 			}
		# 		}
		# 		planet_jobs_produces_mult = 0.05
		# 	}
		# 	triggered_pop_modifier = {
		# 		potential = {
		# 			exists = owner
		# 			owner = {
		# 				has_policy_flag = tec_max_overclock_hive
		# 			}
		# 		}
		# 		planet_jobs_produces_mult = 0.1
		# 	}
		# # /
	# /

	resources = {
		category = pop_category_drones
		# Regular food, mineral and energy upkeep.
			inline_script = "pop_categories/inline_evolved_pop_upkeep"
		# Additional energy upkeep for cyborgs.
			# Note : The vanilla ones work diff than evolved so
			# inline_script = "pop_categories/cyborg_upkeep"
		# Production traits
			inline_script = "pop_categories/inline_evolved_pop_production"
		# Instrument of Desire Upkeep
			inline_script = "pop_categories/instrument_upkeep"
			
		# Bio-Synth Upkeep
			inline_script = "pop_categories/biosynth_traits"
	}
}
