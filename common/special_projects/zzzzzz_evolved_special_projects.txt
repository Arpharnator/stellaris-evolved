#Design a Bioservant
special_project = {
	key = "DESIGN_BIOSERVANT_PROJECT"
	cost = 1
	tech_department = society_technology
	icon = "gfx/interface/icons/situation_log/situation_log_main_quest.dds"
	picture = GFX_evt_society_research
	location = no
	
	event_scope = planet_event
	
	requirements = {
	}
	
	# Spawn 1 Bioservant Pop (in a future, choose a name, and probably also clean up flags)
	on_success = {
		owner = {
			country_event = { id = tec_bioservant.666 }
		}
	}
	
	on_fail = {
	}

	abort_trigger = {
		owner = {
			has_country_flag = done_first_bioservant
		}
	}
}

#Design a Robot
special_project = {
	key = "DESIGN_ROBOT_PROJECT"
	cost = 1
	tech_department = engineering_technology
	icon = "gfx/interface/icons/situation_log/situation_log_main_quest.dds"
	picture = GFX_evt_engineering_research
	location = no
	
	event_scope = planet_event
	
	requirements = {
	}
	
	# Spawn 1 Bioservant Pop (in a future, choose a name, and probably also clean up flags)
	on_success = {
		event_target:tec_first_robot_candidate = {
			country_event = {
				id = tec_bioservant.999 
			}
		}
	}
	
	on_fail = {
	}

	abort_trigger = {
		owner = {
			has_country_flag = done_first_robot
		}
	}
}

#Design a Robot - Machine cult
special_project = {
	key = "DESIGN_ROBOT_CULT_PROJECT"
	cost = 1
	tech_department = engineering_technology
	icon = "gfx/interface/icons/situation_log/situation_log_main_quest.dds"
	picture = GFX_evt_engineering_research
	location = no
	
	event_scope = planet_event
	
	requirements = {
	}
	
	# Spawn 1 Robot Pop (in a future, choose a name, and probably also clean up flags)
	on_success = {
		owner = {
			country_event = { id = tec_bioservant.999 }
		}
	}
	
	on_fail = {
	}

	abort_trigger = {
		owner = {
			has_country_flag = done_first_robot
		}
	}
}





# Fix the damn ringworld Shinji
special_project = {
	key = "TEC_REMOVE_INTERLOPER"
	cost = 25000
	tech_department = engineering_technology
	icon = "gfx/interface/icons/situation_log/situation_log_main_quest.dds"
	picture = GFX_evt_shattered_planet
	location = yes
	
	event_scope = planet_event
	
	requirements = {
		shipclass_constructor = 1
	}
	
	on_success = {
		solar_system = {
			random_system_planet = {
				limit = {
					is_planet_class = pc_ringworld_habitable
					has_deposit = d_arcane_generator
				}
				planet_event = { id = tec_rebalance.10120 }
			}
		}
	}
	

}
