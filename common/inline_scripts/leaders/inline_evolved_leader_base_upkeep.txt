# leaders\inline_evolved_leader_base_upkeep.txt

# Default upkeep if owner doesn't exist (E.g. event hire window)
	upkeep = {
		trigger = {
			NOR = {
				has_leader_flag = marauder_merc_leader
				has_leader_flag = hired_admiral_merc_leader
			}
			NOT = {
				exists = owner
			}
			tec_is_aiauth_node = no
		}
		unity = 2
		mult = trigger:has_skill
		#mult = value:tec_aiauth_node_upkeep_scale
	}
# /
# Default Unity upkeep
	upkeep = {
		trigger = {
			NOR = {
				has_leader_flag = marauder_merc_leader
				has_leader_flag = hired_admiral_merc_leader
			}
			exists = owner
			tec_is_aiauth_node = no
			OR = {
				is_idle = yes
				AND = {
					owner = { tec_removes_unity_upkeep_from_all_leaders = no }
					switch = {
						trigger = leader_class
						governor = {
							owner = {
								tec_removes_unity_upkeep_from_governors = no
							}
						}
						scientist = {
							owner = {
								tec_removes_unity_upkeep_from_scientists = no
							}
						}
						admiral = {
							owner = {
								tec_removes_unity_upkeep_from_admirals = no
							}
						}
						general = {
							owner = {
								tec_removes_unity_upkeep_from_generals = no
							}
						}
						default = {
							always = no
						}
					}
				}
			}
			tec_should_pay_for_leader_upkeep = yes
			is_gestalt_node = no
		}
		unity = 2
		mult = trigger:has_skill
		#mult = value:tec_aiauth_node_upkeep_scale
	}
# /
# Ai Auth
	upkeep = { # base upkeep
		trigger = {
			tec_is_aiauth_node = yes
		}
		sr_tec_ai_power = 10
	}
	upkeep = {  # working upkeep
		trigger = {
			tec_is_aiauth_node = yes
			OR = {
				tec_leader_is_true_idle = no
				NOT = { exists = owner }
			}
		}
		sr_tec_ai_power = 2
		mult = value:tec_aiauth_node_upkeep_scale
	}
# /
# Reduced Unity upkeep for Galactic Paragons gestalt civics.
	#upkeep = {	# No unity upkeep for those civics
	#	trigger = {
	#		exists = owner
	#		owner = {
	#			OR = {
	#				has_valid_civic = civic_machine_upkeep_twister
	#				has_valid_civic = civic_hive_upkeep_twister
	#			}
	#		}
	#	}
	#	unity = 1
	#	mult = trigger:has_skill
	#}
# Food upkeep for Autonomous Drones
	upkeep = {
		trigger = {
			exists = owner
			owner = {
				has_valid_civic = civic_hive_upkeep_twister
			}
			species = {
				is_lithoid = no
			}
			OR = {	# Well if they have a civic removing upkeeps ...
				tec_leader_is_true_idle = yes
				switch = {	# Is employed but has not upkeep
					trigger = leader_class
					governor = {
						owner = {
							tec_removes_unity_upkeep_from_governors = no
						}
					}
					scientist = {
						owner = {
							tec_removes_unity_upkeep_from_scientists = no
						}
					}
					admiral = {
						owner = {
							tec_removes_unity_upkeep_from_admirals = no
						}
					}
					general = {
						owner = {
							tec_removes_unity_upkeep_from_generals = no
						}
					}
					default = {
						always = no
					}
				}
			}
			tec_should_pay_for_leader_upkeep = yes
			is_gestalt_node = no
		}
		food = 2
		mult = trigger:has_skill
	}
# /
# Mineral upkeep for Autonomous Drones
	upkeep = {
		trigger = {
			exists = owner
			owner = {
				has_valid_civic = civic_hive_upkeep_twister
			}
			species = {
				is_lithoid = yes
			}
			OR = {	# Well if they have a civic removing upkeeps ...
				tec_leader_is_true_idle = yes
				switch = {	# Is employed but has not upkeep
					trigger = leader_class
					governor = {
						owner = {
							tec_removes_unity_upkeep_from_governors = no
						}
					}
					scientist = {
						owner = {
							tec_removes_unity_upkeep_from_scientists = no
						}
					}
					admiral = {
						owner = {
							tec_removes_unity_upkeep_from_admirals = no
						}
					}
					general = {
						owner = {
							tec_removes_unity_upkeep_from_generals = no
						}
					}
					default = {
						always = no
					}
				}
			}
			tec_should_pay_for_leader_upkeep = yes
			is_gestalt_node = no
		}
		minerals = 2
		mult = trigger:has_skill
	}
# /
# Energy upkeep for Sovereign Circuits
	upkeep = {
		trigger = {
			exists = owner
			owner = {
				has_valid_civic = civic_machine_upkeep_twister
			}
			OR = {	# Well if they have a civic removing upkeeps ...
				is_idle = yes
				switch = {	# Is employed but has not upkeep
					trigger = leader_class
					governor = {
						owner = {
							tec_removes_unity_upkeep_from_governors = no
						}
					}
					scientist = {
						owner = {
							tec_removes_unity_upkeep_from_scientists = no
						}
					}
					admiral = {
						owner = {
							tec_removes_unity_upkeep_from_admirals = no
						}
					}
					general = {
						owner = {
							tec_removes_unity_upkeep_from_generals = no
						}
					}
					default = {
						always = no
					}
				}
			}
			tec_should_pay_for_leader_upkeep = yes
			is_gestalt_node = no
		}
		energy = 2
		mult = trigger:has_skill
	}
# /
