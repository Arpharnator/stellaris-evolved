# Mandatory OverWrites
# --------------------------------------------------------------------------------------
# Paradox please replace:
# [has_authority = auth_hive_mind] with [is_hive_empire = yes]
# [has_authority = auth_machine_intelligence] with [is_machine_empire = yes]
# !!

# Scientist
# Example: Our science unit/science drone/scientist has found a...
defined_text = {
	name = GetScientist
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = getscientist_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = getscientist_hive
	}
	text = {
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = getscientist_normal
	}
}

# Scientists
# Example: Our science units/science drones/scientists have reported that...
defined_text = {
	name = GetScientistPlural
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = getscientistplural_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = getscientistplural_hive
	}
	text = {
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = getscientistplural_normal
	}
}


# Engineer
# Example: Our engineering unit/engineering drone/engineer has found a...
defined_text = {
	name = GetEngineer
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = getengineer_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = getengineer_hive
	}
	text = {
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = getengineer_normal
	}
}

# Engineers
# Example: Our engineering units/engineering drones/engineers have reported that...
defined_text = {
	name = GetEngineerPlural
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = getengineerplural_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = getengineerplural_hive
	}
	text = {
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = getengineerplural_normal
	}
}

# Envoy
# Example: Our diplomatic unit/diplomatic drone/envoy has found a...
defined_text = {
	name = GetEnvoy
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = getenvoy_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = getenvoy_hive
	}
	text = {
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = getenvoy_normal
	}
}

# Envoy
# Example: Our diplomatic unit/diplomatic drone/envoy has found a...
defined_text = {
	name = GetEnvoyCap
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = getenvoycap_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = getenvoycap_hive
	}
	text = {
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = getenvoycap_normal
	}
}

# Envoys
# Example: Our diplomatic units/diplomatic drones/envoys have reported that...
defined_text = {
	name = GetEnvoyPlural
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = getenvoyplural_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = getenvoyplural_hive
	}
	text = {
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = getenvoyplural_normal
	}
}

# Example: Our linguists/language drones/linguistic algoriths...
defined_text = {
	name = GetLinguists
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = getlinguists_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = getlinguists_hive
	}
	text = {
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = getlinguists_normal
	}
}

# Example: Our researchers/research drones/research subroutines...
defined_text = {
	name = GetResearchers
	text = {
		trigger = {
			OR = {
				AND = {
					is_scope_type = agreement
					exists = owner
					owner = { is_machine_empire = yes }
				}
				AND = {
					is_scope_type = country
					is_machine_empire = yes
				}
			}
		}
		localization_key = getresearchers_machine
	}
	text = {
		trigger = {
			OR = {
				AND = {
					is_scope_type = agreement
					exists = owner
					owner = { is_hive_empire = yes }
				}
				AND = {
					is_scope_type = country
					is_hive_empire = yes
				}
			}
		}
		localization_key = getresearchers_hive
	}
	text = {
		trigger = {
			OR = {
				AND = {
					is_scope_type = agreement
					exists = owner
					owner = { NOT = { has_ethic = ethic_gestalt_consciousness } }
				}
				AND = {
					is_scope_type = country
					NOT = { has_ethic = ethic_gestalt_consciousness }
				}
			}
		}
		localization_key = getresearchers_normal
	}
}

# Example: A team member/drone/unit...
defined_text = {
	name = GetTeamMember
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = unit_key
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = drone_key
	}
	text = {
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = team_member_key
	}
}


defined_text = {
	name = GetTeamMemberPlural
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = units_key
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = drones_key
	}
	text = {
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = team_members_key
	}
}

defined_text = { # Country scope
	name = GetUnitDrone
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = getunitdrone_unit
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = getunitdrone_drone
	}
	text = {	# fallback if not Gestalt Consciousness
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = getunitdrone_leader
	}
}

defined_text = { # Country scope
	name = GetUnitDronePlural
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = getunitdrone_unit_plural
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = getunitdrone_drone_plural
	}
	text = {	# fallback if not Gestalt Consciousness
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = getunitdrone_leader_plural
	}
}
defined_text = {
	name = GetTerraformer
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = getterraformer_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = getterraformer_hive
	}
	text = {
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = getterraformer_normal
	}
}

defined_text = {
	name = GetTerraformerPlural
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = getterraformer_machine_plural
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = getterraformer_hive_plural
	}
	text = {
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = getterraformer_normal_plural
	}
}

defined_text = { # Country scope
	name = GetBrainName
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = getbrainname_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = getbrainname_hive
	}
	text = {	# fallback if not Gestalt Consciousness
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		localization_key = getbrainname_error
	}
}

defined_text = {
	name = GetDiplomacyTraditionName
	text = {
		trigger = {
			owner = {
				OR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_inwards_perfection
					is_hive_empire = yes
					has_origin = origin_necrophage
				}
			}
		}
		localization_key = tradition_adaptability
	}
	text = {
		trigger = {
			owner = {
				NOR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_inwards_perfection
					is_hive_empire = yes
					is_machine_empire = yes
					has_origin = origin_necrophage
				}
			}
		}
		localization_key = tradition_diplomacy
	}
	text = {
		trigger = {
			owner = {
				is_machine_empire = yes
			}
		}
		localization_key = tradition_versatility
	}
}

#Used to generate the title of the Leviathan Slaying Parade
defined_text = {
	random = no
	name = GetLeviathanParadeName
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_xenophobe }
		}
		localization_key = xenophobe_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_xenophile }
			is_situation_leviathan_biological = yes
		}
		localization_key = xenophile_biological_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_xenophile }
			is_situation_leviathan_biological = no
		}
		localization_key = xenophile_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_fanatic_materialist
				has_country_flag = materialist_science
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = materialist_biological_parade_science
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_fanatic_materialist
				has_country_flag = materialist_trophy
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = materialist_biological_parade_trophy
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_fanatic_materialist
			}
			is_situation_leviathan_biological = no
		}
		localization_key = materialist_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_fanatic_spiritualist
				has_country_flag = spiritualist_reject
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = spiritualist_biological_parade_reject
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_fanatic_spiritualist
				has_country_flag = spiritualist_accept
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = spiritualist_biological_parade_accept
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_spiritualist }
			is_situation_leviathan_biological = no
		}
		localization_key = spiritualist_mechanical_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_authoritarian }
		}
		localization_key = authoritarian_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_egalitarian }
			is_situation_leviathan_biological = yes
		}
		localization_key = egalitarian_biological_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_egalitarian }
			is_situation_leviathan_biological = no
		}
		localization_key = egalitarian_mechanical_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_militarist }
		}
		localization_key = militarist_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_pacifist }
			is_situation_leviathan_biological = yes
		}
		localization_key = pacifist_biological_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_pacifist }
			is_situation_leviathan_biological = no
		}
		localization_key = pacifist_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_xenophobe
				is_fanatical = no
			}
		}
		localization_key = xenophobe_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_xenophile				
				is_fanatical = no
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = xenophile_biological_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_xenophile
				is_fanatical = no
			}
			is_situation_leviathan_biological = no
		}
		localization_key = xenophile_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_materialist
				is_fanatical = no
				has_country_flag = materialist_science
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = materialist_biological_parade_science
	}
		text = {
		trigger = {
			owner = {
				has_ethic = ethic_materialist
				is_fanatical = no
				has_country_flag = materialist_trophy
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = materialist_biological_parade_trophy
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_materialist
				is_fanatical = no
			}
			is_situation_leviathan_biological = no
		}
		localization_key = materialist_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_spiritualist
				is_fanatical = no
				has_country_flag = spiritualist_reject
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = spiritualist_biological_parade_reject
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_spiritualist
				is_fanatical = no
				has_country_flag = spiritualist_accept
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = spiritualist_biological_parade_accept
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_spiritualist
				is_fanatical = no
			}
			is_situation_leviathan_biological = no
		}
		localization_key = spiritualist_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_authoritarian
				is_fanatical = no
			}
		}
		localization_key = authoritarian_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_egalitarian
				is_fanatical = no
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = egalitarian_biological_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_egalitarian
				is_fanatical = no
			}
			is_situation_leviathan_biological = no
		}
		localization_key = egalitarian_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_militarist
				is_fanatical = no
			}
		}
		localization_key = militarist_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_pacifist
				is_fanatical = no
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = pacifist_biological_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_pacifist
				is_fanatical = no
			}
			is_situation_leviathan_biological = no
		}
		localization_key = pacifist_mechanical_parade
	}
	text = {
		trigger = {
			owner = { is_hive_empire = yes }
			is_situation_leviathan_biological = yes
		}
		localization_key = hive_biological_parade
	}
	text = {
		trigger = {
			owner = { is_hive_empire = yes }
			is_situation_leviathan_biological = no
		}
		localization_key = hive_mechanical_parade
	}
	text = {
		trigger = {
			owner = { is_machine_empire = yes }
			is_situation_leviathan_biological = yes
		}
		localization_key = machine_biological_parade
	}
	text = {
		trigger = {
			owner = { is_machine_empire = yes }
			is_situation_leviathan_biological = no
		}
		localization_key = machine_mechanical_parade
	}
}


define_text = {
	name = GetSensoryWorkers
	text = {
		trigger = { is_gestalt = no }
		localization_key = sensor_operatior
	}
	text = {
		trigger = { is_hive_empire = yes }
		localization_key = sensory_drones
	}
	text = {
		trigger = { is_machine_empire = yes }
		localization_key = observation_subroutines
	}
}


# Admins

# Priest / Death Priest
defined_text = {
	name = GetPriest
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_spiritualist_main_cult = no
		}
		localization_key = job_priest
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_death_cult = yes
		}
		localization_key = job_death_priest
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_machine_cult = yes
		}
		localization_key = job_tec_mecha_priest
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_paperwork_cult = yes
		}
		localization_key = job_tec_paperwork_priest
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_atom_cult = yes
		}
		localization_key = job_tec_atom_priest
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_paranormal_cult = yes
		}
		localization_key = job_tec_paranormal_priest
	}
	default = job_priest
}

# Priests / Death Priests
defined_text = {
	name = GetPriestPlural
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_spiritualist_main_cult = no
		}
		localization_key = job_priest_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_death_cult = yes
		}
		localization_key = job_death_priest_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_machine_cult = yes
		}
		localization_key = job_tec_mecha_priest_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_paperwork_cult = yes
		}
		localization_key = job_tec_paperwork_priest_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_atom_cult = yes
		}
		localization_key = job_tec_atom_priest_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_paranormal_cult = yes
		}
		localization_key = job_tec_paranormal_priest_plural
	}
	default = job_priest_plural
}

# Priest / Death Priest (also used for the key in £job_priest£)
defined_text = {
	name = GetPriestIcon
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_spiritualist_main_cult = no
		}
		localization_key = job_priest_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_death_cult = yes
		}
		localization_key = job_death_priest_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_machine_cult = yes
		}
		localization_key = job_tec_mecha_priest_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_paperwork_cult = yes
		}
		localization_key = job_tec_paperwork_priest_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_atom_cult = yes
		}
		localization_key = job_tec_atom_priest_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_paranormal_cult = yes
		}
		localization_key = job_tec_paranormal_priest_icon
	}
	default = job_priest_icon
}

defined_text = {
	name = GetAdministratorNoPriest
	text = {
		trigger = {
			is_scope_valid = yes
			is_megacorp = yes
			tec_is_aiauth_empire = no
		}
		localization_key = job_manager
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = no
			is_megacorp = no
			tec_is_aiauth_empire = no
		}
		localization_key = job_bureaucrat
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_aiauth_empire = yes
			is_spiritualist = no
		}
		localization_key = job_tec_ai_operator
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_aiauth_empire = yes
			is_spiritualist = yes
		}
		localization_key = job_tec_ai_ordinator
	}
	default = job_bureaucrat
}

defined_text = {
	name = GetAdministratorNoPriestPlural
	text = {
		trigger = {
			is_scope_valid = yes
			is_megacorp = yes
			tec_is_aiauth_empire = no
		}
		localization_key = job_manager_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = no
			is_megacorp = no
			tec_is_aiauth_empire = no
		}
		localization_key = job_bureaucrat_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_aiauth_empire = yes
			is_spiritualist = no
		}
		localization_key = job_tec_ai_operator_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_aiauth_empire = yes
			is_spiritualist = yes
		}
		localization_key = job_tec_ai_ordinator_plural
	}
	default = job_bureaucrat_plural
}

defined_text = {
	name = GetAdministratorNoPriestIcon
	text = {
		trigger = {
			is_scope_valid = yes
			is_megacorp = yes
			tec_is_aiauth_empire = no
		}
		localization_key = job_manager_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = no
			is_megacorp = no
			tec_is_aiauth_empire = no
		}
		localization_key = job_bureaucrat_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_aiauth_empire = yes
			is_spiritualist = no
		}
		localization_key = job_tec_ai_operator_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_aiauth_empire = yes
			is_spiritualist = yes
		}
		localization_key = job_tec_ai_ordinator_icon
	}
	default = job_bureaucrat_icon
}


# Priest / Death Priest / Bureaucrat etc
defined_text = {
	name = GetAdministratorWithIcon
	text = {
		trigger = {
			is_scope_valid = yes
			is_spiritualist = yes
			is_regular_empire = yes
		}
		localization_key = tec_job_priest_and_admin_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_spiritualist = no
			is_regular_empire = yes
		}
		localization_key = tec_job_admin_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
		}
		localization_key = tec_job_synapse_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
		}
		localization_key = job_coordinator_with_icon
	}
	default = tec_job_admin_with_icon
}

# Priests / Death Priests / Bureaucrats etc
defined_text = {
	name = GetAdministratorPluralWithIcon
	text = {
		trigger = {
			is_scope_valid = yes
			is_spiritualist = yes
			is_regular_empire = yes
		}
		localization_key = tec_job_priest_and_admin_plural_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_spiritualist = no
			is_regular_empire = yes
		}
		localization_key = tec_job_admin_plural_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
		}
		localization_key = tec_job_synapse_plural_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
		}
		localization_key = job_coordinator_plural_with_icon
	}
	default = tec_job_admin_plural_with_icon
}


define_text = {
	name = GetSynapse
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_cyberhive = no
			tec_is_biohive = no
		}
		localization_key = job_tec_resonance_drone
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_biohive = yes
		}
		localization_key = job_synapse_drone
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_cyberhive = yes
		}
		localization_key = job_tec_network_drone
	}
	default = job_tec_resonance_drone
}

define_text = {
	name = GetSynapsePlural
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_cyberhive = no
			tec_is_biohive = no
		}
		localization_key = job_tec_resonance_drone_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_biohive = yes
		}
		localization_key = job_synapse_drone_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_cyberhive = yes
		}
		localization_key = job_tec_network_drone_plural
	}
	default = job_tec_resonance_drone_plural
}

define_text = {
	name = GetSynapseIcon
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_cyberhive = no
			tec_is_biohive = no
		}
		localization_key = job_tec_resonance_drone_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_biohive = yes
		}
		localization_key = job_synapse_drone_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			tec_is_cyberhive = yes
		}
		localization_key = job_tec_network_drone_icon
	}
	default = job_tec_resonance_drone_icon
}