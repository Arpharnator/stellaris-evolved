
# ----------------------------------------
	#A S S E M B L Y	B U I L D I N G S
# ----------------------------------------

# -------------- Rules
# Conversion
	# T1
		# robotics
		#building_robot_assembly_plant
		#building_mecha_monastery_1
		#building_hive_robot_assembly_plant

		# machine
		#building_machine_assembly_plant

		# Bioservant
		#building_tec_bioservant_plant_1
		#building_tec_hive_bioservant_plant_1

		# Cloning
		#building_clone_vats
		#building_tec_clone_vats_biohive_1
		#building_tec_gene_clinic_1

		#Extreme pop growth
		#building_tec_gene_clinic_1
		#building_spawning_pool
		#building_tec_biohive_spawning_pool_1

		# Other
		#building_tec_mechadendrite_assembler_1

	# T2
		# robotics
		#building_robot_assembly_complex
		#building_mecha_monastery_2
		#building_hive_robot_assembly_plant_2

		# machine
		#building_machine_assembly_complex

		# Bioservant
		#building_tec_bioservant_plant_2
		#building_tec_hive_bioservant_plant_2

		# Cloning
		#building_clone_vats_2
		##building_tec_clone_vats_biohive_2
		#building_tec_gene_clinic_2

		#Extreme pop growth
		#building_tec_gene_clinic_2
		#building_spawning_pool_2
		#building_tec_biohive_spawning_pool_2

		# Other
		#building_tec_mechadendrite_assembler_2

	# T3
		# robotics
		#building_robot_assembly_plant_3
		#building_mecha_monastery_3
		##building_hive_robot_assembly_plant_3

		# machine
		#building_machine_assembly_plant_3

		# Bioservant
		#building_tec_bioservant_plant_3
		#building_tec_hive_bioservant_plant_3
		#building_tec_gene_clinic_3

		# Cloning
		#building_clone_vats_3
		##building_tec_clone_vats_biohive_2

		#Extreme pop growth
		#building_tec_gene_clinic_3
		#building_spawning_pool_3
		#building_tec_biohive_spawning_pool_3

		# Other
		#building_tec_mechadendrite_assembler_3
# /

# Future ones
	# building_ancient_machine_assembly_1
	# building_ancient_machine_assembly_2
# /

# ----------------------------------------------------------------------------------
# Assembly
# ----------------------------------------------------------------------------------

# ------------------------------------------------- Synthetics
# --------------- Regular
building_robot_assembly_plant = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1
	
	category = pop_assembly
	
	prerequisites = { "tech_robotic_workers" }
		
	show_tech_unlock_if = {
		is_regular_empire = yes 
		tec_is_machine_cult = no
	}

	upgrades = {
		"building_robot_assembly_complex"
	}
	
	potential = {
		exists = owner
		owner = {
			is_regular_empire = yes 
			tec_is_machine_cult = no
			NOR = {
				has_policy_flag = robots_outlawed 
				has_policy_flag = tec_purity_assembly
				has_country_flag = tec_unlock_mechadendrite_assemblers
				has_country_flag = tec_unlock_nanite_assemblers
			}
		}
		NOT = {
			has_modifier = slave_colony 
		}
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}

	allow = {
		tec_only_one_assembly_building = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no 
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			has_modifier = slave_colony
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
		}
	}

	convert_to = {
		# T1
		# robotics
			#building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
		# Other
			building_tec_mechadendrite_assembler_1
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_robot_assembly_plant
		}
	}

	inline_script = {
		script = jobs/inline_evolved_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = yes"
	}
	
	inline_script = {
		script = buildings/effects/inline_evolved_corporate_robocorp
		tier = 1
	}

	inline_script = buildings/effects/inline_evolved_tec_mechanists_cyborg

}

building_robot_assembly_complex = {
	base_buildtime = @b2_time
	icon = building_machine_assembly_complex
	position_priority = 20		# Assembly/growth
	category = pop_assembly
	can_build = no

	prerequisites = { "tech_droid_workers" }

	show_tech_unlock_if = {
		is_regular_empire = yes 
		tec_is_machine_cult = no
	}

	upgrades = {
		"building_robot_assembly_plant_3"
	}

	potential = {
		exists = owner
		owner = {
			is_regular_empire = yes 
			tec_is_machine_cult = no
			NOR = {
				has_policy_flag = robots_outlawed
				has_policy_flag = tec_purity_assembly
				has_country_flag = tec_unlock_mechadendrite_assemblers
				has_country_flag = tec_unlock_nanite_assemblers
			}
		}
		NOT = { has_modifier = slave_colony }
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no 
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			has_modifier = slave_colony
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
		}
	}


	convert_to = {
	# T2
		# robotics
			#building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
		#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
		# Other
			building_tec_mechadendrite_assembler_2
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}
		

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = rare_crystals
		}


		inline_script = {
			script = jobs/resources/inline_evolved_robotic_assembly_upkeep
			base = 1
			mult = value:tec_assembly_cost_scaling_building
			trigger = "tec_has_master_roboticist = no"
		}
		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_robot_assembly_complex
		}
	}

	inline_script = {
		script = jobs/inline_evolved_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = yes"
	}	
	
	inline_script = {
		script = buildings/effects/inline_evolved_corporate_robocorp
		tier = 2
	}

	inline_script = {
		script = modifiers/inline_evolved_assembly_robotic
		mult = 1
		trigger = "tec_has_master_roboticist = no"
	}

	inline_script = buildings/effects/inline_evolved_tec_mechanists_cyborg

	triggered_desc = {
		trigger = {
			exists = owner
			tec_has_master_roboticist = yes
			tec_has_t2_robotic_assembly_buildings = no
		}
		text = job_tec_master_roboticist_effect_t2_desc
	}
}

building_robot_assembly_plant_3 = {
	base_buildtime = @b3_time
	icon = building_tec_robot_assembly_plant_3
 	position_priority = 20		# Assembly/growth
	category = pop_assembly
	can_build = no

	prerequisites = {
		tech_synthetic_workers
	}

	show_tech_unlock_if = {
		is_regular_empire = yes 
		tec_is_machine_cult = no
	}

	potential = {
		exists = owner
		owner = {
			is_regular_empire = yes 
			tec_is_machine_cult = no
			NOR = {
				has_policy_flag = robots_outlawed 
				has_policy_flag = tec_purity_assembly
				has_country_flag = tec_unlock_mechadendrite_assemblers
				has_country_flag = tec_unlock_nanite_assemblers
			}
		}
		NOT = { has_modifier = slave_colony }
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no 
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			has_modifier = slave_colony
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
		}
	}


	convert_to = {
	# T3
		# robotics
			#building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
		# Other
			building_tec_mechadendrite_assembler_3
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 3
		}
		

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 3
			rare = rare_crystals
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_robot_assembly_plant_3
		}
	}
	
	inline_script = {
		script = jobs/inline_evolved_roboticist
		count = 2
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = yes"
	}
	
	
	inline_script = {
		script = buildings/effects/inline_evolved_corporate_robocorp
		tier = 3
	}

	inline_script = buildings/effects/inline_evolved_tec_mechanists_cyborg

	triggered_desc = {
		trigger = {
			exists = owner
			tec_has_master_roboticist = yes
			tec_has_t3_robotic_assembly_buildings = no
		}
		text = job_tec_master_roboticist_effect_t3_desc
	}
}

# --------------- Hive
building_hive_robot_assembly_plant = {
	base_buildtime = @b1_time
	icon = building_robot_assembly_plant
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1
	
	prerequisites = {
		"tech_robotic_workers"
	}
		
	show_tech_unlock_if = {
		is_hive_empire = yes
		tec_is_biohive = no
	}

	upgrades = {
		"building_hive_robot_assembly_plant_2"
	}

	category = pop_assembly
	
	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
			tec_is_biohive = no
			NOR = {
				has_country_flag = tec_unlock_mechadendrite_assemblers
				has_country_flag = tec_unlock_nanite_assemblers
				has_policy_flag = robots_outlawed
				has_policy_flag = tec_purity_assembly
			}
		}
		NOT = {
			has_modifier = slave_colony
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}

	allow = {
		tec_only_one_assembly_building = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_hive_empire = no 
					tec_is_biohive = yes
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			has_modifier = slave_colony
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			#building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
		# Other
			building_tec_mechadendrite_assembler_1
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_hive_robot_assembly_plant
		}
	}

	inline_script = {
		script = jobs/inline_evolved_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = yes"
	}

	inline_script = buildings/effects/inline_evolved_tec_mechanists_cyborg

}

building_hive_robot_assembly_plant_2 = {
	base_buildtime = @b2_time
	icon = building_machine_assembly_complex
	position_priority = 20		# Assembly/growth
	category = pop_assembly
	can_build = no

	prerequisites = { "tech_droid_workers" }

	show_tech_unlock_if = {
		is_hive_empire = yes
		tec_is_biohive = no
	}

	upgrades = {
		"building_hive_robot_assembly_plant_3"
	}

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			free_building_slots > 0
		}
		owner = {
			is_hive_empire = yes
			tec_is_biohive = no
			NOR = {
				has_country_flag = tec_unlock_mechadendrite_assemblers
				has_country_flag = tec_unlock_nanite_assemblers
			}
		}
		NOT = {
			has_modifier = slave_colony 
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_hive_empire = no 
					tec_is_biohive = yes
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			has_modifier = slave_colony
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
		}
	}

	convert_to = {
	# T2
		# robotics
			#building_robot_assembly_complex
			building_mecha_monastery_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
		# Other
			building_tec_mechadendrite_assembler_2
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}
		

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = rare_crystals
		}

		# passive assembly cost
		inline_script = {
			script = jobs/resources/inline_evolved_robotic_assembly_upkeep
			base = 1
			mult = value:tec_assembly_cost_scaling_building
			trigger = "tec_has_master_roboticist = no"
		}
		
		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_hive_robot_assembly_plant_2
		}
	}

	inline_script = {
		script = jobs/inline_evolved_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = yes"
	}
	
	inline_script = {
		script = modifiers/inline_evolved_assembly_robotic
		mult = 1
		trigger = "tec_has_master_roboticist = no"
	}

	inline_script = buildings/effects/inline_evolved_tec_mechanists_cyborg

	triggered_desc = {
		trigger = {
			exists = owner
			tec_has_master_roboticist = yes
			tec_has_t2_robotic_assembly_buildings = no
		}
		text = job_tec_master_roboticist_effect_t2_desc
	}
}

building_hive_robot_assembly_plant_3 = {
	base_buildtime = @b3_time
 	icon = building_tec_robot_assembly_plant_3
 	position_priority = 20		# Assembly/growth
	category = pop_assembly
	can_build = no

	prerequisites = {
		tech_synthetic_workers_hive
	}

	show_tech_unlock_if = {
		is_hive_empire = yes
		tec_is_biohive = no
	}

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			free_building_slots > 0
		}
		owner = {
			is_hive_empire = yes
			tec_is_biohive = no
			NOR = {
				has_country_flag = tec_unlock_mechadendrite_assemblers
				has_country_flag = tec_unlock_nanite_assemblers				
			}
		}
		NOT = {
			has_modifier = slave_colony 
		}
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
		
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_hive_empire = no 
					tec_is_biohive = yes
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			has_modifier = slave_colony
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
		}
	}

	convert_to = {
	# T3
		# robotics
			#building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
		# Other
			building_tec_mechadendrite_assembler_3
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 3
		}
		

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 3
			rare = rare_crystals
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_hive_robot_assembly_plant_3
		}
	}
	
	inline_script = {
		script = jobs/inline_evolved_roboticist
		count = 2
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = yes"
	}

	triggered_desc = {
		trigger = {
			exists = owner
			tec_has_master_roboticist = yes
			tec_has_t3_robotic_assembly_buildings = no
		}
		text = job_tec_master_roboticist_effect_t3_desc
	}

	inline_script = buildings/effects/inline_evolved_tec_mechanists_cyborg

}

# --------------- Mechanicus
building_mecha_monastery_1 = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1

	category = pop_assembly

	prerequisites = {
		"tech_robotic_workers"
	}

	upgrades = {
		building_mecha_monastery_2
	}

	show_tech_unlock_if = {
		tec_is_machine_cult = yes
	}

	potential = {
		exists = owner
		owner = {
			tec_is_machine_cult = yes
			NOR = {
				has_country_flag = tec_unlock_mechadendrite_assemblers
				has_country_flag = tec_unlock_nanite_assemblers				
			}
		}
		NOT = {
			has_modifier = slave_colony 
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}

	allow = {
		tec_only_one_assembly_building = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no 
					has_policy_flag = robots_outlawed
					tec_is_machine_cult = no
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			has_modifier = slave_colony
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			#building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
		# Other
			building_tec_mechadendrite_assembler_1
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_mecha_monastery_1
		}
	}
	
	planet_modifier = {
		pop_ethic_spiritualist_attraction_mult = 0.05
		pop_ethic_industrial_attraction_mult = 0.05	
	}

	inline_script = {
		script = jobs/inline_evolved_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = yes"
	}
	
	inline_script = {
		script = buildings/effects/inline_evolved_corporate_robocorp
		tier = 1
	}

	inline_script = buildings/effects/inline_evolved_tec_mechanists_cyborg

}

building_mecha_monastery_2 = {
	base_buildtime = @b2_time
	position_priority = 20		# Assembly/growth
	category = pop_assembly
	can_build = no

	prerequisites = { "tech_droid_workers" }

	show_tech_unlock_if = {
		tec_is_machine_cult = yes
	}

	upgrades = {
		"building_mecha_monastery_3"
	}

	potential = {
		exists = owner
		owner = {
			is_regular_empire = yes 
			tec_is_machine_cult = yes
			NOR = {
				has_country_flag = tec_unlock_mechadendrite_assemblers
				has_country_flag = tec_unlock_nanite_assemblers
			}
		}
		NOT = { has_modifier = slave_colony }
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no 
					has_policy_flag = robots_outlawed
					tec_is_machine_cult = no
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			has_modifier = slave_colony
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
		}
	}

	convert_to = {
	# T2
		# robotics
			building_robot_assembly_complex
			#building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
		# Other
			building_tec_mechadendrite_assembler_2
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}
		
		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = rare_crystals
		}

		# passive assembly cost
		inline_script = {
			script = jobs/resources/inline_evolved_robotic_assembly_upkeep
			base = 1
			mult = value:tec_assembly_cost_scaling_building
			trigger = "tec_has_master_roboticist = no"
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_mecha_monastery_2
		}
	}

	planet_modifier = {
		pop_ethic_spiritualist_attraction_mult = 0.10
		pop_ethic_industrial_attraction_mult = 0.10
	}

	inline_script = {
		script = jobs/inline_evolved_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = yes"
	}

	inline_script = {
		script = buildings/effects/inline_evolved_corporate_robocorp
		tier = 2
	}

	inline_script = {
		script = modifiers/inline_evolved_assembly_robotic
		mult = 1
		trigger = "tec_has_master_roboticist = no"
	}

	inline_script = buildings/effects/inline_evolved_tec_mechanists_cyborg

	triggered_desc = {
		trigger = {
			exists = owner
			tec_has_master_roboticist = yes
			tec_has_t2_robotic_assembly_buildings = no
		}
		text = job_tec_master_roboticist_effect_t2_desc
	}
}

building_mecha_monastery_3 = {
	base_buildtime = @b3_time
	category = pop_assembly
	can_build = no
		
	prerequisites = {
		tech_synthetic_workers
	}

	show_tech_unlock_if = {
		tec_is_machine_cult = yes
	}

	potential = {
		exists = owner
		owner = {
			is_regular_empire = yes 
			tec_is_machine_cult = yes
			NOR = {
				has_country_flag = tec_unlock_mechadendrite_assemblers
				has_country_flag = tec_unlock_nanite_assemblers
			}
		}
		NOT = { has_modifier = slave_colony }
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no 
					has_policy_flag = robots_outlawed
					tec_is_machine_cult = no
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			has_modifier = slave_colony
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
		}
	}

	convert_to = {
		# T3
		# robotics
			building_robot_assembly_plant_3
			#building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
		# Other
			building_tec_mechadendrite_assembler_3
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 3
		}
		

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 3
			rare = rare_crystals
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_mecha_monastery_3
		}
	}

	planet_modifier = {
		pop_ethic_spiritualist_attraction_mult = 0.15
		pop_ethic_industrial_attraction_mult = 0.15
	}

	inline_script = {
		script = jobs/inline_evolved_roboticist
		count = 2
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = yes"
	}
	
	inline_script = {
		script = buildings/effects/inline_evolved_corporate_robocorp
		tier = 3
	}

	inline_script = buildings/effects/inline_evolved_tec_mechanists_cyborg

	triggered_desc = {
		trigger = {
			exists = owner
			tec_has_master_roboticist = yes
			tec_has_t3_robotic_assembly_buildings = no
		}
		text = job_tec_master_roboticist_effect_t3_desc
	}
}

# --------------- Machines
building_machine_assembly_plant = {
	base_buildtime = @b1_time
	icon = building_robot_assembly_plant
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1

	category = pop_assembly

	upgrades = {
		building_machine_assembly_complex
	}

	show_tech_unlock_if = {
		is_machine_empire = yes
	}
	
	potential = {
		exists = owner
		owner = {
			is_machine_empire = yes
			NOR = {
				has_country_flag = tec_unlock_mechadendrite_assemblers
				has_country_flag = tec_unlock_nanite_assemblers
			}
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}
		
	allow = {
		tec_only_one_assembly_building = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_machine_empire = no
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			#building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
		# Other
			building_tec_mechadendrite_assembler_1
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}

		# passive assembly cost
		inline_script = {
			script = jobs/resources/inline_evolved_robotic_assembly_upkeep
			base = 1
			mult = value:tec_assembly_cost_scaling_building
			trigger = ""
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_machine_assembly_plant
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = replicator
		count = 1
		mult = 1
		display = with_desc
		trigger = ""
	}

	inline_script = {
		script = modifiers/inline_evolved_assembly_robotic
		mult = 1
		trigger = ""
	}
}

building_machine_assembly_complex = {
	base_buildtime = @b2_time
	position_priority = 20		# Assembly/growth
	can_build = no

	category = pop_assembly

	upgrades = {
		building_machine_assembly_plant_3
	}

	show_tech_unlock_if = {
		is_machine_empire = yes
	}

	prerequisites = {
		tech_mega_assembly
	}
	
	potential = {
		exists = owner
		owner = {
			is_machine_empire = yes
			NOR = {
				has_country_flag = tec_unlock_mechadendrite_assemblers
				has_country_flag = tec_unlock_nanite_assemblers
			}
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}
		
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_machine_empire = no
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
		}
	}

	convert_to = {
	# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			#building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
		# Other
			building_tec_mechadendrite_assembler_2
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}
		

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = rare_crystals
		}

		# passive assembly cost
		inline_script = {
			script = jobs/resources/inline_evolved_robotic_assembly_upkeep
			base = 2
			mult = value:tec_assembly_cost_scaling_building
			trigger = ""
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_machine_assembly_complex
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = replicator
		count = 1
		mult = 1
		display = with_desc
		trigger = ""
	}

	inline_script = {
		script = modifiers/inline_evolved_assembly_robotic
		mult = 2
		trigger = ""
	}
}

building_machine_assembly_plant_3 = {
	icon = building_tec_robot_assembly_plant_3
	base_buildtime = @b3_time
	can_build = no

	category = pop_assembly

	prerequisites = {
		tech_tec_giga_assembly
	}

	show_tech_unlock_if = {
		is_machine_empire = yes
	}
	
	potential = {
		exists = owner
		owner = {
			is_machine_empire = yes
			NOR = {
				has_country_flag = tec_unlock_mechadendrite_assemblers
				has_country_flag = tec_unlock_nanite_assemblers
			}
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}
		
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_machine_empire = no
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			#AND = {
			#	owner = { is_ai = yes }
			#	free_jobs < 1
			#	OR = {
			#		num_buildings = { type = any value = 18 }
			#		uses_habitat_capitals = yes
			#	}
			#}
			
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
		}
	}

	convert_to = {
		# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			#building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
		# Other
			building_tec_mechadendrite_assembler_3
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = rare_crystals
		}

		# passive assembly cost
		inline_script = {
			script = jobs/resources/inline_evolved_robotic_assembly_upkeep
			base = 2
			mult = value:tec_assembly_cost_scaling_building
			trigger = ""
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_machine_assembly_plant_3
		}
	}
	
	inline_script = {
		script = jobs/inline_evolved_job
		job = replicator
		count = 2
		mult = 1
		display = with_desc
		trigger = ""
	}

	inline_script = {
		script = modifiers/inline_evolved_assembly_robotic
		mult = 2
		trigger = ""
	}
}

# --------------- Nanite Machines
building_tec_nanite_assembler_1 = {
	base_buildtime = @b1_time
	icon = building_robot_assembly_plant
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1

	category = pop_assembly

	upgrades = {
		building_machine_assembly_complex
	}

	show_tech_unlock_if = {
		is_machine_empire = yes
	}
	
	potential = {
		always = no
		exists = owner
		owner = {
			is_machine_empire = yes 
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}
		
	allow = {
		tec_only_one_assembly_building = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				is_robot_empire = no
			}
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			#building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
		# Other
			building_tec_mechadendrite_assembler_1
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}

		# passive assembly cost
		inline_script = {
			script = jobs/resources/inline_evolved_robotic_assembly_upkeep
			base = 1
			mult = value:tec_assembly_cost_scaling_building
			trigger = ""
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_machine_nanite_assembler_1
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = replicator
		count = 1
		mult = 1
		display = with_desc
		trigger = ""
	}

	inline_script = {
		script = modifiers/inline_evolved_assembly_robotic
		mult = 1
		trigger = ""
	}
}

building_tec_nanite_assembler_2 = {
	base_buildtime = @b2_time
	position_priority = 20		# Assembly/growth
	can_build = no

	category = pop_assembly

	upgrades = {
		building_machine_assembly_plant_3
	}

	show_tech_unlock_if = {
		is_machine_empire = yes
	}

	prerequisites = {
		tech_mega_assembly
	}
	
	potential = {
		exists = owner
		owner = {
			is_machine_empire = yes
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}
		
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				is_robot_empire = no
			}
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
		}
	}

	convert_to = {
	# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			#building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
		# Other
			building_tec_mechadendrite_assembler_2
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}
		

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = rare_crystals
		}

		# passive assembly cost
		inline_script = {
			script = jobs/resources/inline_evolved_robotic_assembly_upkeep
			base = 2
			mult = value:tec_assembly_cost_scaling_building
			trigger = ""
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_machine_nanite_assembler_2
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = replicator
		count = 1
		mult = 1
		display = with_desc
		trigger = ""
	}

	inline_script = {
		script = modifiers/inline_evolved_assembly_robotic
		mult = 2
		trigger = ""
	}
}

building_tec_nanite_assembler_3 = {
	icon = building_tec_robot_assembly_plant_3
	base_buildtime = @b3_time
	can_build = no

	category = pop_assembly

	prerequisites = {
		tech_tec_giga_assembly
	}

	show_tech_unlock_if = {
		is_machine_empire = yes
	}
	
	potential = {
		exists = owner
		owner = {
			is_machine_empire = yes 
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}
		
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				is_robot_empire = no
			}
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
		}
	}

	convert_to = {
		# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			#building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
		# Other
			building_tec_mechadendrite_assembler_3
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = rare_crystals
		}

		# passive assembly cost
		inline_script = {
			script = jobs/resources/inline_evolved_robotic_assembly_upkeep
			base = 2
			mult = value:tec_assembly_cost_scaling_building
			trigger = ""
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_machine_nanite_assembler_3
		}
	}
	
	inline_script = {
		script = jobs/inline_evolved_job
		job = replicator
		count = 2
		mult = 1
		display = with_desc
		trigger = ""
	}

	inline_script = {
		script = modifiers/inline_evolved_assembly_robotic
		mult = 2
		trigger = ""
	}
}

# ------------------------------------------------- Bioservants

# --------------- Regular
building_tec_bioservant_plant_1 = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1
	category = pop_assembly

	prerequisites = { "tech_tec_bioservant" }
	
	upgrades = {
		"building_tec_bioservant_plant_2"
	}

	potential = {
		exists = owner
		owner = {
			is_gestalt = no
			NOR = {
				has_policy_flag = bioservants_outlawed
				is_machine_empire = yes
				is_mechanical_empire = yes
				has_policy_flag = tec_purity_assembly
			}
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { BIO = yes }
		tec_destroy_assembly_buildings = no
	}

	allow = {
		tec_only_one_assembly_building = no
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_machine_empire = yes
					is_mechanical_empire = yes
					has_policy_flag = tec_purity_assembly
				}
			}
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { BIO = yes } }
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			#building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
		# Other
			building_tec_mechadendrite_assembler_1
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_bioservant_plant_1
		}
	}

	inline_script = {
		script = jobs/inline_evolved_bioengineer
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_bioengineer = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_bioengineer
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_bioengineer = yes"
	}
}

building_tec_bioservant_plant_2 = {
	base_buildtime = @b2_time
	position_priority = 20		# Assembly/growth
	can_build = no

	category = pop_assembly

	prerequisites = { "tech_tec_bioservant_2" }
	
	upgrades = {
		"building_tec_bioservant_plant_3"
	}
	
	potential = {
		owner = {
			is_gestalt = no
			NOR = {
				has_policy_flag = bioservants_outlawed
				is_machine_empire = yes
				is_mechanical_empire = yes
				has_policy_flag = tec_purity_assembly
			}
		}
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { BIO = yes }
		tec_destroy_assembly_buildings = no
		
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_machine_empire = yes
					is_mechanical_empire = yes
					has_policy_flag = tec_purity_assembly
				}
			}
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { BIO = yes } }
		}
	}


	convert_to = {
		# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			#building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
		# Other
			building_tec_mechadendrite_assembler_2
	}

	resources = {
		category = planet_buildings

		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = exotic_gases
		}

		# passive assembly cost
		inline_script = {
			script = jobs/resources/inline_evolved_bio_assembly_upkeep
			base = 1
			mult = value:tec_assembly_cost_scaling_building
			trigger = "tec_has_master_bioengineer = no"
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_bioservant_plant_2
		}
	}

	inline_script = {
		script = jobs/inline_evolved_bioengineer
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_bioengineer = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_bioengineer
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_bioengineer = yes"
	}

	inline_script = {
		script = modifiers/inline_evolved_assembly_bioservant
		mult = 1
		trigger = "tec_has_master_bioengineer = no"
	}

	triggered_desc = {
		trigger = {
			exists = owner
			tec_has_master_bioengineer = yes
			tec_has_t2_bioservant_assembly_buildings = no
		}
		text = job_tec_master_bioengineer_effect_t2_desc
	}
}

building_tec_bioservant_plant_3 = {
	base_buildtime = @b3_time
	position_priority = 20		# Assembly/growth
	can_build = no

	category = pop_assembly

	prerequisites = { "tech_tec_bioservant_3" }

	potential = {
		exists = owner
		owner = {
			is_gestalt = no
			NOR = {
				has_policy_flag = bioservants_outlawed
				is_machine_empire = yes
				is_mechanical_empire = yes
				has_policy_flag = tec_purity_assembly
			}
		}
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { BIO = yes }
		tec_destroy_assembly_buildings = no
		
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_machine_empire = yes
					is_mechanical_empire = yes
					has_policy_flag = tec_purity_assembly
				}
			}
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { BIO = yes } }
		}
	}


	convert_to = {
		# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			#building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
		# Other
			building_tec_mechadendrite_assembler_3
	}
	
	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 3
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 3
			rare = exotic_gases
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_bioservant_plant_3
		}
	}
	
	inline_script = {
		script = jobs/inline_evolved_bioengineer
		count = 2
		mult = 1
		display = with_desc
		trigger = "tec_has_master_bioengineer = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_bioengineer
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_bioengineer = yes"
	}	

	triggered_desc = {
		trigger = {
			exists = owner
			tec_has_master_bioengineer = yes
			tec_has_t3_bioservant_assembly_buildings = no
		}
		text = job_tec_master_bioengineer_effect_t3_desc
	}
}

# --------------- Hive
building_tec_hive_bioservant_plant_1 = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1
	icon = building_spawning_pool

	category = pop_assembly

	upgrades = {
		"building_tec_hive_bioservant_plant_2"
	}

	show_tech_unlock_if = {
		has_country_flag = is_hive_bioservant_empire 	
	}

	potential = {
		owner = {
			has_country_flag = is_hive_bioservant_empire 
		}
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { BIO = yes }
		tec_destroy_assembly_buildings = no
	}

	allow = {
		tec_only_one_assembly_building = no
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOT = { has_country_flag = is_hive_bioservant_empire  }
			}
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { BIO = yes } }
		}
	}

	
	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			#building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
		# Other
			building_tec_mechadendrite_assembler_1
	}
	
	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_hive_bioservant_plant_1
		}
	}

	inline_script = {
		script = jobs/inline_evolved_bioengineer
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_bioengineer = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_bioengineer
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_bioengineer = yes"
	}
}

building_tec_hive_bioservant_plant_2 = {
	base_buildtime = @b2_time
	can_build = no
	icon = building_spawning_pool_2

	category = pop_assembly

	prerequisites = {
		"tech_colonial_centralization"
	}

	show_tech_unlock_if = {
		has_country_flag = is_hive_bioservant_empire 	
	}
	
	upgrades = {
		"building_tec_hive_bioservant_plant_3"
	}

	potential = {
		owner = {
			has_country_flag = is_hive_bioservant_empire 
		}
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { BIO = yes }
		tec_destroy_assembly_buildings = no
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOT = { has_country_flag = is_hive_bioservant_empire  }
			}
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { BIO = yes } }
		}
	}

	convert_to = {
	# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			#building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
		# Other
			building_tec_mechadendrite_assembler_2
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = exotic_gases
		}

		# passive assembly cost
		inline_script = {
			script = jobs/resources/inline_evolved_bio_assembly_upkeep
			base = 1
			mult = value:tec_assembly_cost_scaling_building
			trigger = "tec_has_master_bioengineer = no"
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_hive_bioservant_plant_2
		}
	}
	
	inline_script = {
		script = jobs/inline_evolved_bioengineer
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_bioengineer = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_bioengineer
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_bioengineer = yes"
	}

	inline_script = {
		script = modifiers/inline_evolved_assembly_bioservant
		mult = 1
		trigger = "tec_has_master_bioengineer = no"
	}

	triggered_desc = {
		trigger = {
			exists = owner
			tec_has_master_bioengineer = yes
			tec_has_t2_bioservant_assembly_buildings = no
		}
		text = job_tec_master_bioengineer_effect_t2_desc
	}
}

building_tec_hive_bioservant_plant_3 = {
	base_buildtime = @b3_time
	can_build = no
	icon = building_spawning_pool_3

	category = pop_assembly

	prerequisites = {
		"tech_galactic_administration"
	}

	show_tech_unlock_if = {
		has_country_flag = is_hive_bioservant_empire 	
	}

	potential = {
		owner = {
			has_country_flag = is_hive_bioservant_empire 
		}
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { BIO = yes }
		tec_destroy_assembly_buildings = no
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOT = { has_country_flag = is_hive_bioservant_empire  }
			}
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { BIO = yes } }
		}
	}

	
	convert_to = {
	# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			#building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
		# Other
			building_tec_mechadendrite_assembler_3
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 3
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 3
			rare = exotic_gases
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_hive_bioservant_plant_3
		}
	}
	
	inline_script = {
		script = jobs/inline_evolved_bioengineer
		count = 2
		mult = 1
		display = with_desc
		trigger = "tec_has_master_bioengineer = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_bioengineer
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_bioengineer = yes"
	}	
	
	triggered_desc = {
		trigger = {
			exists = owner
			tec_has_master_bioengineer = yes
			tec_has_t3_bioservant_assembly_buildings = no
		}
		text = job_tec_master_bioengineer_effect_t3_desc
	}
}

# --------------- Xenogenesis
#building_tec_xenospawn_1
#building_tec_xenospawn_2
#building_tec_xenospawn_3

# ------------------------------------------------- Cloning/Organic
# --------------- Cloning
building_clone_vats = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	category = pop_assembly
	base_cap_amount = 1

	prerequisites = {
		tech_cloning
	}

	show_tech_unlock_if = {
		OR = {
			is_regular_empire = yes
			AND = {
				is_gestalt = yes
				OR = {
					AND = {
						is_hive_empire = yes
						tec_is_biohive = no
					}
					AND = {
						is_machine_empire = yes
						has_valid_civic = civic_machine_assimilator
					}
				}
			}
		}
	}

	upgrades = {
		"building_clone_vats_2"
	}

	potential = {
		exists = owner
		owner = {
			NOT = {
				has_policy_flag = tec_purity_assembly
			}
		}

		NOT = { has_modifier = resort_colony }
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { CLONES = yes }
		tec_destroy_assembly_buildings = no
	}

	allow = {
		tec_only_one_assembly_building = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				has_policy_flag = tec_purity_assembly
			}
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { CLONES = yes } }
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			#building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
		# Other
			building_tec_mechadendrite_assembler_1
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_clone_vats
		}
	}

	inline_script = {
		script = jobs/inline_evolved_cloner
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_cloner = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_cloner
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_cloner = yes"
	}
}

building_clone_vats_2 = {
	icon = building_tec_clone_vats_2
	base_buildtime = @b2_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		tech_tec_cloning_2
	}

	show_tech_unlock_if = {
		OR = {
			is_regular_empire = yes
			AND = {
				has_ethic = ethic_gestalt_consciousness
				OR = {
					AND = {
						is_hive_empire = yes
						tec_is_biohive = no
					}
					AND = {
						is_machine_empire = yes
						has_valid_civic = civic_machine_assimilator
					}
				}
			}
		}
	}

	upgrades = {
		"building_clone_vats_3"
	}

	potential = {
		exists = owner
		owner = {
			NOT = {
				has_policy_flag = tec_purity_assembly
			}
		}
		NOT = { has_modifier = resort_colony }
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { CLONES = yes }
		tec_destroy_assembly_buildings = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				has_policy_flag = tec_purity_assembly
			}
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { CLONES = yes } }
		}
	}

	convert_to = {
		# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			#building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
		# Other
			building_tec_mechadendrite_assembler_2
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = exotic_gases
		}

		# passive assembly cost
		inline_script = {
			script = jobs/resources/inline_evolved_bio_assembly_upkeep
			base = 1
			mult = value:tec_assembly_cost_scaling_building
			trigger = "tec_has_master_cloner = no"
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_clone_vats_2
		}
	}

	inline_script = {
		script = jobs/inline_evolved_cloner
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_cloner = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_cloner
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_cloner = yes"
	}

	inline_script = {
		script = modifiers/inline_evolved_assembly_organic
		mult = 1
		trigger = "tec_has_master_cloner = no"
	}

	triggered_desc = {
		trigger = {
			exists = owner
			tec_has_master_cloner = yes
			tec_has_t2_cloning_assembly_buildings = no
		}
		text = job_tec_master_cloner_effect_t2_desc
	}
}

building_clone_vats_3 = {
	icon = building_tec_clone_vats_3
	base_buildtime = @b3_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		tech_tec_cloning_3
	}

	show_tech_unlock_if = {
		OR = {
			is_regular_empire = yes
			AND = {
				has_ethic = ethic_gestalt_consciousness
				OR = {
					AND = {
						is_hive_empire = yes
						tec_is_biohive = no
					}
					AND = {
						is_machine_empire = yes
						has_valid_civic = civic_machine_assimilator
					}
				}
			}
		}
	}

	potential = {
		exists = owner
		owner = {
			NOT = {
				has_policy_flag = tec_purity_assembly
			}
		}
		NOT = { has_modifier = resort_colony }
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { CLONES = yes }
		tec_destroy_assembly_buildings = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				has_policy_flag = tec_purity_assembly
			}
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { CLONES = yes } }
		}
	}

	convert_to = {
		# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			#building_clone_vats_3
			##building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
		# Other
			building_tec_mechadendrite_assembler_3
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 3
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 3
			rare = exotic_gases
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_clone_vats_3
		}
	}

	inline_script = {
		script = jobs/inline_evolved_cloner
		count = 2
		mult = 1
		display = with_desc
		trigger = "tec_has_master_cloner = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_cloner
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_cloner = yes"
	}

	triggered_desc = {
		trigger = {
			exists = owner
			tec_has_master_cloner = yes
			tec_has_t3_cloning_assembly_buildings = no
		}
		text = job_tec_master_cloner_effect_t3_desc
	}
}

# --------------- Cloning but less offensive for spiritualists and purist empires
building_tec_gene_clinic_1 = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	category = pop_assembly
	base_cap_amount = 1

	prerequisites = {
		tech_tec_gene_1
	}

	upgrades = {
		"building_tec_gene_clinic_2"
	}

	potential = {
		exists = owner
		owner = {
			has_policy_flag = tec_purity_assembly
		}
		NOT = {
			has_modifier = resort_colony 
		}
		tec_invalidates_assembly_buildings = no
		tec_destroy_assembly_buildings = no
	}

	allow = {
		tec_only_one_assembly_building = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOT = { has_policy_flag = tec_purity_assembly }
			}
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			#building_tec_gene_clinic_1
		#Extreme pop growth
			#building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
		# Other
			building_tec_mechadendrite_assembler_1
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_gene_clinic_1
		}
	}

	inline_script = {
		script = jobs/inline_evolved_cloner
		count = 1
		mult = 1
		display = with_desc
		trigger = ""
	}
}

building_tec_gene_clinic_2 = {
	base_buildtime = @b2_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		tech_tec_gene_2
	}

	show_tech_unlock_if = {
		has_policy_flag = tec_purity_assembly
	}

	upgrades = {
		"building_tec_gene_clinic_3"
	}

	potential = {
		exists = owner
		owner = {
			has_policy_flag = tec_purity_assembly
		}
		NOT = { has_modifier = resort_colony }
		tec_invalidates_assembly_buildings = no
		tec_destroy_assembly_buildings = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOT = { has_policy_flag = tec_purity_assembly }
			}
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
		}
	}

	convert_to = {
		# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			#building_tec_gene_clinic_2
		#Extreme pop growth
			#building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
		# Other
			building_tec_mechadendrite_assembler_2
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = exotic_gases
		}

		# passive assembly cost
		inline_script = {
			script = jobs/resources/inline_evolved_bio_assembly_upkeep
			base = 1
			mult = value:tec_assembly_cost_scaling_building
			trigger = ""
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_gene_clinic_2
		}
	}

	inline_script = {
		script = jobs/inline_evolved_cloner
		count = 1
		mult = 1
		display = with_desc
		trigger = ""
	}


	inline_script = {
		script = modifiers/inline_evolved_assembly_organic
		mult = 1
		trigger = ""
	}

	#Free resources for ais, competitive ai
	ai_resource_production = {
		trigger = { always = yes}
		exotic_gases = @b2_rare_upkeep
	}
}

building_tec_gene_clinic_3 = {
	base_buildtime = @b3_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		tech_tec_gene_3
	}

	show_tech_unlock_if = {
		has_policy_flag = tec_purity_assembly
	}

	potential = {
		exists = owner
		owner = {
			has_policy_flag = tec_purity_assembly
		}
		NOT = { has_modifier = resort_colony }
		tec_invalidates_assembly_buildings = no
		tec_destroy_assembly_buildings = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOT = { has_policy_flag = tec_purity_assembly }
			}
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
		}
	}

	convert_to = {
		# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			#building_tec_gene_clinic_3
		#Extreme pop growth
			#building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
		# Other
			building_tec_mechadendrite_assembler_3
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 3
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 3
			rare = exotic_gases
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_gene_clinic_3
		}
	}

	inline_script = {
		script = jobs/inline_evolved_cloner
		count = 2
		mult = 1
		display = with_desc
		trigger = ""
	}

	#Free resources for ais, competitive ai
	ai_resource_production = {
		trigger = { always = yes}
		exotic_gases = @tec_b4_rare_upkeep
	}
}

# --------------- Hiveminds
building_spawning_pool = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1

	category = pop_assembly
	
	upgrades = {
		"building_spawning_pool_2"
	}
	
	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes 
			tec_hive_can_have_spawningpools = yes
		}
		tec_invalidates_assembly_buildings = no
		tec_destroy_assembly_buildings = no
	}
	
	allow = {
		tec_only_one_assembly_building = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_hive_empire = no 
					tec_is_biohive = yes
					tec_hive_can_have_spawningpools = no
				}
			}
			tec_invalidates_assembly_buildings = yes
			tec_ai_allow_assembly_building = no
			tec_destroy_assembly_buildings = yes
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			#building_spawning_pool
			building_tec_biohive_spawning_pool_1
		# Other
			building_tec_mechadendrite_assembler_1
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_spawning_pool
		}
	}

	triggered_desc = {
		text = spawning_pool_tooltip
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = spawning_drone
		count = 1
		mult = 1
		display = with_desc
		trigger = ""
	}
}

building_spawning_pool_2 = {
	base_buildtime = @b2_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		"tech_colonial_centralization"
	}

	show_tech_unlock_if = {
		tec_hive_can_have_spawningpools = yes
	}

	upgrades = {
		"building_spawning_pool_3"
	}

	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
			tec_hive_can_have_spawningpools = yes
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = yes
		tec_destroy_assembly_buildings = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_hive_empire = no 
					tec_is_biohive = yes
					tec_hive_can_have_spawningpools = no
				}
			}
			tec_invalidates_assembly_buildings = yes
			tec_ai_allow_assembly_building = no
			tec_destroy_assembly_buildings = yes
		}
	}

	convert_to = {
		# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			#building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
		# Other
			building_tec_mechadendrite_assembler_2
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = exotic_gases
		}

		# passive assembly cost
		inline_script = {
			script = jobs/resources/inline_evolved_bio_assembly_upkeep
			base = 1
			mult = value:tec_assembly_cost_scaling_building
			trigger = ""
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_spawning_pool_2
		}
	}

	triggered_desc = {
		text = spawning_pool_tooltip
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = spawning_drone
		count = 1
		mult = 1
		display = with_desc
		trigger = ""
	}


	inline_script = {
		script = modifiers/inline_evolved_assembly_organic
		mult = 1
		trigger = ""
	}
}

building_spawning_pool_3 = {
	base_buildtime = @b3_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		"tech_galactic_administration"
	}

	show_tech_unlock_if = {
		tec_hive_can_have_spawningpools = yes
	}

	allow = {
		has_major_upgraded_capital = yes
	}

	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
			tec_hive_can_have_spawningpools = yes
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = yes
		tec_destroy_assembly_buildings = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_hive_empire = no 
					tec_is_biohive = yes
					tec_hive_can_have_spawningpools = no
				}
			}
			tec_invalidates_assembly_buildings = yes
			tec_ai_allow_assembly_building = no
			tec_destroy_assembly_buildings = yes
		}
	}

	convert_to = {
		# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			##building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			#building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
		# Other
			building_tec_mechadendrite_assembler_3
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 3
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 3
			rare = exotic_gases
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_spawning_pool_3
		}
	}
	triggered_desc = {
		text = spawning_pool_tooltip
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = spawning_drone
		count = 2
		mult = 1
		display = with_desc
		trigger = ""
	}
}

# --------------- Biohives
building_tec_biohive_spawning_pool_1 = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1

	category = pop_assembly
	
	upgrades = {
		"building_tec_biohive_spawning_pool_2"
	}
	
	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
			tec_is_biohive = yes
			tec_hive_can_have_spawningpools = yes
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = yes
		tec_destroy_assembly_buildings = no
	}
	
	allow = {
		tec_only_one_assembly_building = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_hive_empire = no
					tec_is_biohive = no
					tec_hive_can_have_spawningpools = no
				}
			}
			tec_invalidates_assembly_buildings = yes
			tec_ai_allow_assembly_building = no
			tec_destroy_assembly_buildings = yes
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			#building_tec_biohive_spawning_pool_1
		# Other
			building_tec_mechadendrite_assembler_1
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_biohive_spawning_pool_1
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = spawning_drone
		count = 1
		mult = 1
		display = with_desc
		trigger = ""
	}
}

building_tec_biohive_spawning_pool_2 = {
	base_buildtime = @b2_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		"tech_colonial_centralization"
	}

	show_tech_unlock_if = {
		tec_hive_can_have_spawningpools = yes
		tec_is_biohive = yes
	}

	upgrades = {
		"building_tec_biohive_spawning_pool_3"
	}

	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
			tec_is_biohive = yes
			tec_hive_can_have_spawningpools = yes
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = yes
		tec_destroy_assembly_buildings = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_hive_empire = no
					tec_is_biohive = no
					tec_hive_can_have_spawningpools = no
				}
			}
			tec_invalidates_assembly_buildings = yes
			tec_ai_allow_assembly_building = no
			tec_destroy_assembly_buildings = yes
		}
	}

	convert_to = {
	# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			#building_tec_biohive_spawning_pool_2
		# Other
			building_tec_mechadendrite_assembler_2
	}
		
	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = exotic_gases
		}

		# passive assembly cost
		inline_script = {
			script = jobs/resources/inline_evolved_bio_assembly_upkeep
			base = 1
			mult = value:tec_assembly_cost_scaling_building
			trigger = ""
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_biohive_spawning_pool_2
		}
	}

	triggered_desc = {
		text = spawning_pool_tooltip
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = spawning_drone
		count = 1
		mult = 1
		display = with_desc
		trigger = ""
	}


	inline_script = {
		script = modifiers/inline_evolved_assembly_organic
		mult = 1
		trigger = ""
	}
}

building_tec_biohive_spawning_pool_3 = {
	base_buildtime = @b3_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		"tech_galactic_administration"
	}

	show_tech_unlock_if = {
		tec_hive_can_have_spawningpools = yes
		tec_is_biohive = yes
	}

	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
			tec_is_biohive = yes
			tec_hive_can_have_spawningpools = yes
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = yes
		tec_destroy_assembly_buildings = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_hive_empire = no
					tec_is_biohive = no
					tec_hive_can_have_spawningpools = no
				}
			}
			tec_invalidates_assembly_buildings = yes
			tec_ai_allow_assembly_building = no
			tec_destroy_assembly_buildings = yes
		}
	}

	convert_to = {
	# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			##building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			#building_tec_biohive_spawning_pool_3
		# Other
			building_tec_mechadendrite_assembler_3
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 3
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 3
			rare = exotic_gases
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_biohive_spawning_pool_3
		}
	}

	triggered_desc = {
		text = spawning_pool_tooltip
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = spawning_drone
		count = 2
		mult = 1
		display = with_desc
		trigger = ""
	}
}

# ------------------------------------------------- Mixed
# --------------- Mechadendrite
building_tec_mechadendrite_assembler_1 = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1
	
	category = pop_assembly

	upgrades = {
		"building_tec_mechadendrite_assembler_2"
	}
	
	potential = {
		always = no
		exists = owner
		owner = {
			OR = {	# One of the two unlocks it
				has_technology = tech_robotic_workers
				has_technology = tech_cloning
			}
			has_country_flag = tec_unlock_mechadendrite_assemblers
		}
		
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}

	allow = {
		always = no
		tec_only_one_assembly_building = no
		tec_invalidates_assembly_buildings = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOT = {
					has_country_flag = tec_unlock_mechadendrite_assemblers
				}
			}
			# Note: This building is enforced for cybernetic ascended empires so the commented rule below is not necessary
			# NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
		# Other
			#building_tec_mechadendrite_assembler_1
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}

		inline_script = {
			script = jobs/resources/inline_evolved_robotic_assembly_upkeep
			base = 1
			mult = value:tec_assembly_cost_scaling_building
			trigger = ""
		}
		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			building = building_tec_mechadendrite_assembler_1
			trigger = ""
		}
	}

	triggered_desc = {
		text = building_tec_mechadendrite_assembler_effect
	}

	planet_modifier = {
		planet_pop_assembly_add = 2
		planet_pop_assembly_organic_add = 2
	}
	
	inline_script = {	# Megacorp civic
		script = buildings/effects/inline_evolved_corporate_robocorp
		tier = 1
	}

	# Extra assembly due to mechanist origin
	inline_script = buildings/effects/inline_evolved_tec_mechanists_cyborg

}

building_tec_mechadendrite_assembler_2 = {
	base_buildtime = @b2_time
	icon = building_machine_assembly_complex
	position_priority = 20		# Assembly/growth
	category = pop_assembly
	can_build = no

	upgrades = {
		"building_tec_mechadendrite_assembler_3"
	}

	potential = {
		exists = owner
		owner = {
			OR = {	# One of the two unlocks it
				has_technology = tech_droid_workers
				has_technology = tech_tec_cloning_2
			}
			has_country_flag = tec_unlock_mechadendrite_assemblers
		}
		# Available at slave colonies
		tec_invalidates_assembly_buildings = no
		tec_ai_allow_assembly_building = { ROBOTS = yes }
		tec_destroy_assembly_buildings = no
	}

	allow = {
		tec_only_one_assembly_building = no
		tec_invalidates_assembly_buildings = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOT = {
					has_country_flag = tec_unlock_mechadendrite_assemblers
				}
			}
			has_modifier = slave_colony 
			tec_invalidates_assembly_buildings = yes
			NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
			tec_destroy_assembly_buildings = yes
		}
	}

	convert_to = {
	# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
		#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
		# Other
			#building_tec_mechadendrite_assembler_2
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = exotic_gases
		}

		inline_script = {
			script = jobs/resources/inline_evolved_robotic_assembly_upkeep
			base = 2
			mult = value:tec_assembly_cost_scaling_building
			trigger = ""
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_mechadendrite_assembler_2
		}
	}

	triggered_desc = {
		text = building_tec_mechadendrite_assembler_effect
	}

	planet_modifier = {
		planet_pop_assembly_add = 4
		planet_pop_assembly_organic_add = 4
	}

	inline_script = {	# Megacorp civic
		script = buildings/effects/inline_evolved_corporate_robocorp
		tier = 2
	}

	inline_script = { # REVIEW 3.7
		script = modifiers/inline_evolved_assembly_robotic
		mult = 1
		trigger = "tec_has_master_roboticist = no"
	}

	# Extra assembly due to mechanist origin
	inline_script = buildings/effects/inline_evolved_tec_mechanists_cyborg

}

building_tec_mechadendrite_assembler_3 = {
	base_buildtime = @b3_time
	icon = building_tec_robot_assembly_plant_3
 	position_priority = 20		# Assembly/growth
	category = pop_assembly
	can_build = no

	potential = {
		exists = owner
		owner = {
			OR = {	# One of the two unlocks it
				has_technology = tech_synthetic_workers
				has_technology = tech_tec_cloning_3
			}
			has_country_flag = tec_unlock_mechadendrite_assemblers
		}
		tec_invalidates_assembly_buildings = no
	}

	allow = {
		tec_only_one_assembly_building = no
		tec_invalidates_assembly_buildings = no
	}

	destroy_trigger = {
		exists = owner
		owner = {
			NOT = {
				has_country_flag = tec_unlock_mechadendrite_assemblers
			}
			# Note: This building is enforced for cybernetic ascended empires so the commented rule below is not necessary
			# NOT = { tec_ai_allow_assembly_building = { ROBOTS = yes } }
			tec_invalidates_assembly_buildings = yes
			tec_destroy_assembly_buildings = yes
		}
	}

	convert_to = {
	# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
		# Other
			#building_tec_mechadendrite_assembler_3
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 3
		}
		
		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 3
			rare = exotic_gases
		}

		inline_script = {
			script = jobs/resources/inline_evolved_robotic_assembly_upkeep
			base = 3
			mult = value:tec_assembly_cost_scaling_building
			trigger = ""
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_tec_mechadendrite_assembler_3
		}
	}

	# REVIEW 3.7
	inline_script = {
		script = jobs/inline_evolved_roboticist
		count = 2
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = no"
	}

	inline_script = {
		script = jobs/inline_evolved_master_roboticist
		count = 1
		mult = 1
		display = with_desc
		trigger = "tec_has_master_roboticist = yes"
	}

	triggered_desc = {
		text = building_tec_mechadendrite_assembler_effect
	}

	planet_modifier = {
		planet_pop_assembly_add = 6
		planet_pop_assembly_organic_add = 6
	}

	inline_script = {	# Megacorp civic
		script = buildings/effects/inline_evolved_corporate_robocorp
		tier = 2
	}

	# Extra assembly due to mechanist origin
	inline_script = jobs/effects/inline_evolved_tec_mechanists_cyborg
}

# --------------- Replicant Printer
#building_tec_replicant_printer_1
#building_tec_replicant_printer_2

# ----------------------------------------------------------------------------------
# TRANSFORMATIONS
# ----------------------------------------------------------------------------------

# --------------- Splicers
building_tec_splicechamber = {
	icon = building_tec_splicechamber
	base_buildtime = @b1_time
	base_cap_amount = 1
	position_priority = 30		# Unique

	category = pop_assembly
	
	potential = {
		always = no
		exists = owner
		owner = {
			has_country_flag = tec_can_genesplice
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_tec_hive_splicers
				has_valid_civic = civic_tec_hive_splicers_cyborg
				is_machine_empire = yes
			}
		}
	}
	
	allow = {
		custom_tooltip = {
			fail_text = NO_CULTURE_SHOCK
			NOT = { has_modifier = planet_culture_shock }
		}
		NOR = {
			is_planet_class = pc_hive
			is_planet_class = pc_machine
		}
		OR = {
			owner = { is_ai = no }
			any_owned_species = {
				species_can_be_necrophaged = yes
			}
		}
		owner = {
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_tec_hive_splicers
				has_valid_civic = civic_tec_hive_splicers_cyborg
				is_machine_empire = yes
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = {
						has_country_flag = tec_can_genesplice
					}
				}
			}
			AND = {
				owner = { is_ai = yes }
				NOT = {
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
			owner = {
				OR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_tec_hive_splicers
					has_valid_civic = civic_tec_hive_splicers_cyborg
					is_machine_empire = yes
				}
			}
		}
	}
	
	planet_modifier = {
		planet_stability_add = 5
		job_tec_spliced_add = 3
	}
	
	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}
	}
	
	upgrades = {
		building_tec_splicechamber_2
	}
	
	prerequisites = {
	}
	
	triggered_desc = {
		text = job_tec_spliced_effect_desc
		trigger = {
			exists = owner
			owner = { is_lithoid_empire = no }
		}
	}
	triggered_desc = {
		text = job_tec_spliced_effect_lithoid_desc
		trigger = {
			exists = owner
			owner = { is_lithoid_empire = yes }
		}
	}
}

building_tec_splicechamber_2 = {
	icon = building_tec_splicechamber_2
	base_buildtime = @b3_time
	can_build = no
	position_priority = 30		# Unique

	category = pop_assembly
	
	potential = {
		always = no
		exists = owner
		owner = {
			has_country_flag = tec_can_genesplice
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_tec_hive_splicers
				has_valid_civic = civic_tec_hive_splicers_cyborg
				is_machine_empire = yes
			}
		}
	}
	
	allow = {
		custom_tooltip = {
			fail_text = NO_CULTURE_SHOCK
			NOT = { has_modifier = planet_culture_shock }
		}
		NOR = {
			is_planet_class = pc_hive
			is_planet_class = pc_machine
		}
		OR = {
			owner = { is_ai = no }
			any_owned_species = {
				species_can_be_necrophaged = yes
			}
		}
		owner = {
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_tec_hive_splicers
				has_valid_civic = civic_tec_hive_splicers_cyborg
				is_machine_empire = yes
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = {
						has_country_flag = tec_can_genesplice
					}
				}
			}
			AND = {
				owner = { is_ai = yes }
				NOT = {
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
			owner = {
				OR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_tec_hive_splicers
					has_valid_civic = civic_tec_hive_splicers_cyborg
					is_machine_empire = yes
				}
			}
		}
	}
	
	planet_modifier = {
		planet_stability_add = 10
		job_tec_spliced_add = 6
		job_tec_spliced_per_pop = 0.02 # 1 per 50 REVISAR
	}
	
	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = exotic_gases
		}
	}

	prerequisites = {
		tech_glandular_acclimation
	}
	
	show_tech_unlock_if = {
		always = no
	}
	
	triggered_desc = {
		text = job_tec_spliced_effect_desc
		trigger = {
			exists = owner
			owner = { is_lithoid_empire = no }
		}
	}
	triggered_desc = {
		text = job_tec_spliced_effect_lithoid_desc
		trigger = {
			exists = owner
			owner = { is_lithoid_empire = yes }
		}
	}

}

# --------------- Necrophages
building_necrophage_elevation_chamber = {
	icon = building_chamber_of_elevation_1
	base_buildtime = @b1_time
	base_cap_amount = 1
	position_priority = 30		# Unique
	skip_automation_upgrading = yes #colony automation will not try to upgrade this

	category = pop_assembly
	
	upgrades = {
		building_necrophage_house_of_apotheosis
	}
	
	prerequisites = {
	}
	
	potential = {
		exists = owner
		owner = {
			has_origin = origin_necrophage
			has_trait = trait_necrophage
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
			}
		}
	}
	
	allow = {
		custom_tooltip = {
			fail_text = NO_CULTURE_SHOCK
			NOT = { has_modifier = planet_culture_shock }
		}
		if = {
			limit = {
				exists = owner
				owner = {
					is_hive_empire = no 
				}
			}
			NOT = { is_planet_class = pc_hive }
		}
		NOT = {
			is_planet_class = pc_machine
		}
		hidden_trigger = {
			if = {
				limit = {
					exists = owner
					owner = { is_ai = yes }
				}
				any_owned_species = {
					species_can_be_necrophaged = yes
				}
				num_pops > 5
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_necrophage }
					NOT = { has_trait = trait_necrophage }
				}
			}
			AND = {
				owner = { is_ai = yes }
				NOT = {
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
		}
	}
	
	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_necrophage_elevation_chamber
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = necro_apprentice
		display = with_desc
		count = 1
		mult = 1
		trigger = ""
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = necro_apprentice
		display = no_desc
		count = 1
		mult = 1
		trigger = "num_organic_pops_per_year >= 0.2"
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = necro_apprentice
		display = no_desc
		count = 1
		mult = 1
		trigger = "num_organic_pops_per_year >= 0.3"
	}
		
	desc = {
		trigger = {
			OR = {
				NOT = { exists = owner }
				owner = { is_hive_empire = no }
			}
		}
		text = building_necrophage_elevation_chamber_desc
	}
	desc = {
		trigger = {
			exists = owner
			owner = { is_hive_empire = yes }
		}
		text = building_necrophage_elevation_chamber_desc_hive
	}
	

	triggered_desc = {
		text = necrophage_elevation_timer_tooltip
		trigger = {
			has_planet_flag = necrophage_elevation_timer
		}
	}

	triggered_desc = {
		text = building_necrophage_elevation_chamber_scaling_tooltip
	}
	
	is_essential = yes
}

building_necrophage_house_of_apotheosis = {
	icon = building_chamber_of_elevation_2
	base_buildtime = @b3_time
	can_build = no
	position_priority = 30		# Unique

	category = pop_assembly
	
	prerequisites = {
		tech_glandular_acclimation
	}
	
	show_tech_unlock_if = {
		has_origin = origin_necrophage
		has_trait = trait_necrophage
	}

	potential = {
		exists = owner
		owner = {
			has_origin = origin_necrophage
			has_trait = trait_necrophage
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
			}
			is_ai = no #the AI will just kill all its necrophytes
		}
	}
	
	allow = {
		hidden_trigger = {
			if = {
				limit = {
					owner = { is_ai = yes }
				}
				any_owned_species = {
					species_can_be_necrophaged = yes
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_necrophage }
					NOT = { has_trait = trait_necrophage }
				}
			}
			AND = {
				owner = { is_ai = yes }
				NOT = {
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
		}
	}
	
	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = exotic_gases
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_necrophage_house_of_apotheosis
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = necro_apprentice
		display = with_desc
		count = 6
		mult = 1
		trigger = ""
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = necro_apprentice
		display = no_desc
		count = 4
		mult = 1
		trigger = "
			exists = owner
			owner = { is_hive_empire = yes }
			tec_is_hive_world = yes
		"
	}

	desc = {
		trigger = {
			OR = {
				NOT = { exists = owner }
				owner = { is_hive_empire = no }
			}
		}
		text = building_necrophage_house_of_apotheosis_desc
	}
	desc = {
		trigger = {
			exists = owner
			owner = { is_hive_empire = yes }
		}
		text = building_necrophage_house_of_apotheosis_desc_hive
	}

	triggered_desc = {
		text = necrophage_elevation_timer_tooltip
		trigger = {
			has_planet_flag = necrophage_elevation_timer
		}
	}

}

# ----------------------------------------------------------------------------------
# ZOMBIES
# ----------------------------------------------------------------------------------
# --------------- Zombies regular

# --------------- Zombies megacorp
building_posthumous_employment_center = {
	base_buildtime = @b1_time
	base_cap_amount = 1

	category = pop_assembly

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_organic_species = yes }
		}
		owner = {
			is_regular_empire = yes
			tec_is_zombie_empire = yes
		}
		tec_destroy_assembly_buildings = no
	}

	allow = {
		has_upgraded_capital = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOT = {
					tec_is_zombie_empire = yes 
					is_regular_empire = yes
				}
			}
			
			tec_destroy_assembly_buildings = yes
		}
	}

	planet_modifier = {
		job_reassigner_add = 1
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = ""
			building = building_posthumous_employment_center
		}
	}

	triggered_desc = {
		text = job_reassigner_effect_desc
	}
	triggered_desc = {
		trigger = {
			has_building = building_robot_assembly_plant
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}
}

# --------------- Z hives

# --------------- Z machines

# --------------- Z biohives

# ----------------------------------------------------------------------------------
# BOOSTERS
# Conversion
	# T1
		## Hospital
		#building_clinic
		## Cyborgs
		#building_tec_cybernetic_hospital_1
		## Cyborg gestalt
		#building_tec_cybernetic_hospital_gestalt_1
	# T2
		## Hospital
		#building_hospital
		## Cyborgs
		#building_tec_cybernetic_hospital_2
		## Cyborg gestalt
		#building_tec_cybernetic_hospital_gestalt_2
	# T3
		## Hospital
		#building_hospital_3
		## Cyborgs
		#building_tec_cybernetic_hospital_3
		## Cyborg gestalt
		#building_tec_cybernetic_hospital_gestalt_3

# /
# --------------- Clinics
building_clinic = {
	base_buildtime = @b1_time
	position_priority = 30		# Unique
	base_cap_amount = 1

	category = amenity

	prerequisites = {
		"tech_frontier_health"
	}

	upgrades = {
		"building_hospital"
	}

	show_tech_unlock_if = {
		is_regular_empire = yes
		NOT = {
			has_country_flag = tec_unlock_cyborg_hospitals
		}
	}

	potential = {
		owner = {
			OR = {
				is_regular_empire = yes
				AND = {
					has_origin = origin_fear_of_the_dark
					is_country_type = primitive
				}
			}
			NOT = {
				has_country_flag = tec_unlock_cyborg_hospitals
			}
		}
		NOT = {
			has_modifier = slave_colony
		}
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOR = {
						is_regular_empire = yes
						AND = {
							has_origin = origin_fear_of_the_dark
							is_country_type = primitive
						}
					}
					has_country_flag = tec_unlock_cyborg_hospitals
				}
			}
			has_modifier = slave_colony
		}
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}

		inline_script = buildings/resources/inline_evolved_public_healthcare_upkeep

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = "
				OR = {
					tec_has_genetic_assembly_buildings = yes
					tec_has_cloning_assembly_buildings = yes
					tec_has_bioservant_assembly_buildings = yes
					AND = {
						tec_has_robotic_assembly_buildings = yes
						tec_allows_machine_assembly_for_cyborg = yes
					}
				}
			"
			building = building_clinic
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = healthcare
		display = with_desc
		count = @b1_jobs
		mult = 1
		trigger = ""
	}

	inline_script = buildings/effects/inline_evolved_public_healthcare


	on_destroy = {
		owner = {
			if = {
				limit = {
					has_event_chain = payback_out_of_warranty_chain
				}
				end_event_chain = payback_out_of_warranty_chain
			}
		}
	}

	on_repaired = {
		if = {
			limit = {
				planet.owner = {
					has_event_chain = payback_out_of_warranty_chain
				}
			}
			random_list = {
				50 = { # still broken
					planet.owner = {
						country_event = { id = origin.4302 }
					}
					modifier = {
						factor = 0
						planet.owner = { has_technology = tech_frontier_health }
					}
				}
				20 = { # repaired
					planet.owner = {
						country_event = { id = origin.4301 }
					}
					modifier = {
						factor = 2
						planet.owner = { num_research_agreements = 1 }
					}
					modifier = {
						factor = 3
						planet.owner = { num_research_agreements = 2 }
					}
					modifier = {
						factor = 4
						planet.owner = { num_research_agreements >= 3 }
					}
				}
				10 = { # broken beyond repair
					planet = {
						planet_event = { id = origin.4303 }
					}
				}
			}
		}
	}
}

building_hospital = {
	base_buildtime = @b2_time
	position_priority = 30		# Unique
	can_build = no

	category = amenity

	prerequisites = {
		"tech_frontier_hospital"
	}

	upgrades = {
		building_hospital_3
	}

	show_tech_unlock_if = {
		is_regular_empire = yes
		NOT = {
			has_country_flag = tec_unlock_cyborg_hospitals
		}
	}

	potential = {
		owner = {
			is_regular_empire = yes
			NOT = {
				has_country_flag = tec_unlock_cyborg_hospitals
			}
		}
		NOT = {
			has_modifier = slave_colony
		}
	}
	
	allow = {
		has_upgraded_capital = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no
					has_country_flag = tec_unlock_cyborg_hospitals
				}
			}
			has_modifier = slave_colony
		}
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = exotic_gases
		}

		inline_script = buildings/resources/inline_evolved_public_healthcare_upkeep

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = "
				OR = {
					tec_has_genetic_assembly_buildings = yes
					tec_has_cloning_assembly_buildings = yes
					tec_has_bioservant_assembly_buildings = yes
					AND = {
						tec_has_robotic_assembly_buildings = yes
						tec_allows_machine_assembly_for_cyborg = yes
					}
				}
			"
			building = building_hospital
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = healthcare
		display = with_desc
		count = @b2_jobs
		mult = 1
		trigger = ""
	}

	inline_script = buildings/effects/inline_evolved_public_healthcare

	triggered_desc = {
		text = job_healthcare_effect_desc
	}
}

building_hospital_3 = {
	base_buildtime = @b2_time
	can_build = no
	position_priority = 30		# Unique

	category = amenity

	prerequisites = {
		"tech_tec_frontier_hospital_2"
	}
	
	show_tech_unlock_if = {
		is_regular_empire = yes
		NOT = {
			has_country_flag = tec_unlock_cyborg_hospitals
		}
	}

	potential = {
		owner = {
			is_regular_empire = yes
			NOT = {
				has_country_flag = tec_unlock_cyborg_hospitals
			}
		}
		NOT = {
			has_modifier = slave_colony
		}
	}

	allow = {
		has_upgraded_capital = yes
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no
					has_country_flag = tec_unlock_cyborg_hospitals
				}
			}
			has_modifier = slave_colony
		}
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 3
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 3
			rare = exotic_gases
		}

		inline_script = buildings/resources/inline_evolved_public_healthcare_upkeep

		inline_script = {
			script = buildings/resources/inline_evolved_aibait
			trigger = "
				OR = {
					tec_has_genetic_assembly_buildings = yes
					tec_has_cloning_assembly_buildings = yes
					tec_has_bioservant_assembly_buildings = yes
					AND = {
						tec_has_robotic_assembly_buildings = yes
						tec_allows_machine_assembly_for_cyborg = yes
					}
				}
			"
			building = building_hospital_3
		}
	}

	
	inline_script = {
		script = jobs/inline_evolved_job
		job = healthcare
		display = with_desc
		count = @b3_jobs
		mult = 1
		trigger = ""
	}

	inline_script = buildings/effects/inline_evolved_public_healthcare

}

# --------------- Cyberclinics
building_tec_cybernetic_hospital_1 = {
	base_buildtime = @b1_time
	position_priority = 30		# Unique
	base_cap_amount = 1

	category = amenity

	prerequisites = {
		"tech_frontier_health"
	}

	upgrades = {
		building_tec_cybernetic_hospital_2
	}

	show_tech_unlock_if = {
		is_regular_empire = yes
		has_country_flag = tec_unlock_cyborg_hospitals
	}

	potential = {
		owner = {
			is_regular_empire = yes
			has_country_flag = tec_unlock_cyborg_hospitals
		}
		NOT = {
			has_modifier = slave_colony
		}
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {				
					is_regular_empire = no
					NOT = {
						has_country_flag = tec_unlock_cyborg_hospitals
					}
				}
			}
			has_modifier = slave_colony
			AND = {
				buildings_stop_pop = yes
				owner = {
					is_ai = yes
				}
			}
		}
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = tec_cyborg_ripperdoc
		display = with_desc
		count = @b1_jobs
		mult = 1
		trigger = ""
	}
}

building_tec_cybernetic_hospital_2 = {
	base_buildtime = @b2_time
	position_priority = 30		# Unique
	can_build = no

	category = amenity

	prerequisites = {
		"tech_frontier_hospital"
	}

	show_tech_unlock_if = {
		is_regular_empire = yes
		has_country_flag = tec_unlock_cyborg_hospitals
	}

	upgrades = {
		building_tec_cybernetic_hospital_3
	}

	potential = {
		owner = {
			is_regular_empire = yes
			has_country_flag = tec_unlock_cyborg_hospitals
		}
		NOT = {
			has_modifier = slave_colony
		}
	}

	allow = {
		has_upgraded_capital = yes
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {				
					is_regular_empire = no
					NOT = {
						has_country_flag = tec_unlock_cyborg_hospitals
					}
				}
			}
			has_modifier = slave_colony
			AND = {
				buildings_stop_pop = yes
				owner = {
					is_ai = yes
				}
			}
		}
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = exotic_gases
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = tec_cyborg_ripperdoc
		display = with_desc
		count = @b2_jobs
		mult = 1
		trigger = ""
	}
}

building_tec_cybernetic_hospital_3 = {
	base_buildtime = @b2_time
	can_build = no
	position_priority = 30		# Unique

	category = amenity
	
	prerequisites = {
		"tech_tec_frontier_hospital_2"
	}
	
	show_tech_unlock_if = {
		is_regular_empire = yes
		has_country_flag = tec_unlock_cyborg_hospitals
	}

	potential = {
		owner = {
			is_regular_empire = yes
			has_country_flag = tec_unlock_cyborg_hospitals
		}
		NOT = {
			has_modifier = slave_colony
		}
	}
	
	allow = {
		has_upgraded_capital = yes
	}
	
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {				
					is_regular_empire = no
					NOT = {
						has_country_flag = tec_unlock_cyborg_hospitals
					}
				}
			}
			has_modifier = slave_colony
			AND = {
				buildings_stop_pop = yes
				owner = {
					is_ai = yes
				}
			}
		}
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 3
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 3
			rare = exotic_gases
		}
	}

	
	inline_script = {
		script = jobs/inline_evolved_job
		job = tec_cyborg_ripperdoc
		display = with_desc
		count = @b3_jobs
		mult = 1
		trigger = ""
	}
}

# --------------- Cyberclinics (gestalt)
building_tec_cybernetic_hospital_gestalt_1 = {
	base_buildtime = @b1_time
	position_priority = 30		# Unique
	base_cap_amount = 1

	category = amenity

	prerequisites = {
		"tech_planetary_government"
	}

	upgrades = {
		"building_tec_cybernetic_hospital_gestalt_2"
	}

	show_tech_unlock_if = {
		is_regular_empire = no
		has_country_flag = tec_unlock_cyborg_hospitals
	}

	potential = {
		owner = {
			is_regular_empire = no
			has_country_flag = tec_unlock_cyborg_hospitals
		}
		NOT = {
			has_modifier = slave_colony
		}
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {				
					is_regular_empire = yes
					NOT = {
						has_country_flag = tec_unlock_cyborg_hospitals
					}
				}
			}
			has_modifier = slave_colony
			AND = {
				buildings_stop_pop = yes
				owner = {
					is_ai = yes
				}
			}
		}
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = tec_cyborg_ripperdoc_drone
		display = with_desc
		count = @b1_jobs
		mult = 1
		trigger = ""
	}
}

building_tec_cybernetic_hospital_gestalt_2 = {
	base_buildtime = @b2_time
	position_priority = 30		# Unique
	can_build = no

	category = amenity

	prerequisites = {
		"tech_colonial_centralization"
	}

	show_tech_unlock_if = {
		is_regular_empire = no
		has_country_flag = tec_unlock_cyborg_hospitals
	}

	upgrades = {
		building_tec_cybernetic_hospital_gestalt_3
	}

	potential = {
		owner = {
			is_regular_empire = no
			has_country_flag = tec_unlock_cyborg_hospitals
		}
		NOT = {
			has_modifier = slave_colony
		}
	}

	allow = {
		has_upgraded_capital = yes
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {				
					is_regular_empire = yes
					NOT = {
						has_country_flag = tec_unlock_cyborg_hospitals
					}
				}
			}
			has_modifier = slave_colony
			AND = {
				buildings_stop_pop = yes
				owner = {
					is_ai = yes
				}
			}
		}
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 2
			rare = exotic_gases
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = tec_cyborg_ripperdoc_drone
		display = with_desc
		count = @b2_jobs
		mult = 1
		trigger = ""
	}
}

building_tec_cybernetic_hospital_gestalt_3 = {
	base_buildtime = @b2_time
	can_build = no
	position_priority = 30		# Unique

	category = amenity
	
	prerequisites = {
		"tech_galactic_administration"
	}
	
	show_tech_unlock_if = {
		is_regular_empire = no
		has_country_flag = tec_unlock_cyborg_hospitals
	}

	potential = {
		owner = {
			is_regular_empire = no
			has_country_flag = tec_unlock_cyborg_hospitals
		}
		NOT = {
			has_modifier = slave_colony
		}
	}
	
	allow = {
		has_upgraded_capital = yes
	}
	
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {				
					is_regular_empire = yes
					NOT = {
						has_country_flag = tec_unlock_cyborg_hospitals
					}
				}
			}
			has_modifier = slave_colony
			AND = {
				buildings_stop_pop = yes
				owner = {
					is_ai = yes
				}
			}
		}
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 3
		}

		inline_script = {
			script = buildings/resources/inline_evolved_rare_resource_cost
			tier = 3
			rare = exotic_gases
		}
	}

	
	inline_script = {
		script = jobs/inline_evolved_job
		job = tec_cyborg_ripperdoc_drone
		display = with_desc
		count = @b3_jobs
		mult = 1
		trigger = ""
	}
}

# --------------- Toxoids (not mutual)
building_toxic_bath = {
	base_buildtime = @b1_time
	position_priority = 30		# Unique
	base_cap_amount = 1

	category = amenity
	icon = building_toxic_bath

	potential = {
		NOT = { has_modifier = slave_colony }
		owner = {
			is_regular_empire = yes
			tec_has_toxic_baths = yes
		}
	}
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no			
					is_regular_empire = no
				}
			}
			has_modifier = slave_colony
		}
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = bath_attendant
		count = @b1_jobs
		mult = 1
		display = with_desc
		trigger = ""
	}
}

building_toxic_bath_hive = {
	base_buildtime = @b1_time
	position_priority = 30		# Unique
	base_cap_amount = 1

	category = amenity
	icon = building_toxic_bath_hive

	potential = {
		owner = {
			is_hive_empire = yes
			has_valid_civic = civic_hive_toxic_baths
			NAND = {
				is_ai = yes
				prev = { has_any_industry_district = no }
			}
		}
	}
	allow = {
		owner = {
			OR = {
				is_ai = no
				prev = { has_any_industry_district = yes }
			}
		}
	}
	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				NOT = { has_valid_civic = civic_hive_toxic_baths }
				AND = {
					is_ai = yes
					prev = { has_any_industry_district = no }
				}
			}
		}
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = bath_attendant_hive
		count = @b1_jobs
		mult = 1
		display = with_desc
		trigger = ""
	}
}

building_toxic_bath_machine = {
	base_buildtime = @b1_time
	position_priority = 30		# Unique
	base_cap_amount = 1

	category = amenity
	icon = building_toxic_bath_machine

	potential = {
		owner = {
			is_machine_empire = yes
			has_valid_civic = civic_machine_toxic_baths
		}
	}
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_machine_empire = no }
			owner = {
				NOT = { has_valid_civic = civic_machine_toxic_baths }
			}
		}
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}
	}

	inline_script = {
		script = jobs/inline_evolved_job
		job = bath_attendant_machine
		count = @b1_jobs
		mult = 1
		display = with_desc
		trigger = ""
	}
}

# OTHERS
# -----------------------------------------
# Progenitor - NO LONGER ASSEMBLY BASED
building_offspring_nest = {
	base_buildtime = @b1_time
	base_cap_amount = 1
	position_priority = 10		# Important

	category = amenity

	potential = {
		owner = { has_origin = origin_progenitor_hive }
		or = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}

	destroy_trigger = {
		exists = owner
		owner = { NOT = { has_origin = origin_progenitor_hive } }
	}


	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 1
		}
	}
	
	inline_script = {
		script = jobs/inline_evolved_job
		job = offspring_drone
		count = 1
		mult = 1
		display = with_desc
		trigger = ""
	}

	triggered_desc = {
		text = offspring_nest_tooltip
	}
}

# Clone Army
building_clone_army_clone_vat = {
	icon = building_ancient_relics
	base_buildtime = 90
	position_priority = 40		# Playstyle

	empire_limit = {
		base = 5
	}

	category = pop_assembly

	potential = {
		exists = owner
		owner = {
			has_origin = origin_clone_army
			NOT = {
				has_country_flag = clone_army_fertility_unlocked
			}
		}
		if = {
			limit = {
				owner = { is_ai = yes }
			}
			NOR = {
				has_building = building_clone_army_clone_vat
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic_species = yes }
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_clone_army }
					is_synthetic_empire = yes
					has_country_flag = clone_army_fertility_unlocked
				}
			}
		}
	}

	resources = {
		category = planet_buildings
		inline_script = {
			script = buildings/resources/inline_evolved_resource_cost
			tier = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_ai = yes }
		}
		planet_pop_assembly_organic_add = 2
	}

	# Add growth from 0 to 25 depending on 'clone_pops_missing_per_vat'.
	triggered_planet_modifier = {
		potential = { check_variable = { which = clone_pops_missing_per_vat value > 0 } }
		modifier = { planet_pop_assembly_organic_add = 2 }
	}
	triggered_planet_modifier = {
		potential = { check_variable = { which = clone_pops_missing_per_vat value > 1 } }
		modifier = { planet_pop_assembly_organic_add = 3 }
	}
	triggered_planet_modifier = {
		potential = { check_variable = { which = clone_pops_missing_per_vat value > 4 } }
		modifier = { planet_pop_assembly_organic_add = 2 }
	}
	triggered_planet_modifier = {
		potential = { check_variable = { which = clone_pops_missing_per_vat value > 8 } }
		modifier = { planet_pop_assembly_organic_add = 3 }
	}
	triggered_planet_modifier = {
		potential = {
			years_passed > 10
			check_variable = { which = clone_pops_missing_per_vat value > 12 }
		}
		modifier = { planet_pop_assembly_organic_add = 5 }
	}

	upgrades = {
	}

	prerequisites = {
	}

	triggered_desc = {
		text = building_clone_army_clone_vat_effect_desc
	}

	is_essential = yes
}

#building_tec_repeatable_clone_army_vat