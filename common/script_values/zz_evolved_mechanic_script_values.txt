
# Federation comm pacts
# ------------------------------------------------------------
tec_num_commercial_pacts_incl_fed = {
	base = 0
	modifier = {
		add = trigger:num_commercial_pacts
	}
	modifier = {
		add = trigger:count_federation_ally
	}
}

# multiplier = value:tec_diplomatic_networking_calc|BASE|3|
tec_diplomatic_networking_calc = {
	[[!BASE_VALUE] 
		add = $BASE$
	]
	modifier = {
		diplomacy_weight >= 100
		add = 1
	}
	modifier = {
		diplomacy_weight >= 500
		add = 1
	}
	modifier = {
		diplomacy_weight >= 1000
		add = 1
	}
	modifier = {
		diplomacy_weight >= 5000
		add = 2
	}
	modifier = {
		diplomacy_weight >= 10000
		add = 2
	}
}

# Planed scaled trade value generated
# ------------------------------------------------------------
tec_planet_trade_value = {
	base = 0
	add = modifier:trade_value_add
	mult = modifier:trade_value_mult
}

# Protoworld scaling cost
# ------------------------------------------------------------
tec_protoworld_cost = {
	base = 0
	modifier = {
		exists = space_owner
		space_owner = {
			is_variable_set = tec_protoworlds_created
			check_variable = { # avoid 0 costs
				which = tec_protoworlds_created
				value > 0
			}
		}
		add = space_owner.tec_protoworlds_created
	}
	add = owner.tec_protoworlds_created
	#add = var:tec_protoworlds_created
	#add = tec_protoworlds_created
	mult = 0.5
	add = 1
	max = 5
}

# Leader production
# ------------------------------------------------------------
# Base
tec_leader_scripted_production = {
	base = 0
	[[!BASE_VALUE] 
		add = $BASE$
	]
	[[BASE_VALUE]
		add = value:$BASE_VALUE$|BASE|$BASE$|
	]

	modifier = { # Gestalts and oligarchics add 1 resource more
		mult = 1.25
		exists = owner
		owner = {
			is_oligarchy = yes
		}
	}

	modifier = { # Leader skill multiplier
		mult = trigger:has_skill
	}
}

tec_leader_level_count = {
	base = 0.1
	modifier = {
		exists = owner
		mult = trigger:has_skill
	}
	add = 1
	# Level 6 leaders adds a mult of 1.6
}

tec_leader_scripted_upkeep = {
	base = 1
	[[!BASE_VALUE] 
		add = $BASE$
	]
	[[BASE_VALUE]
		add = value:$BASE_VALUE$|BASE|$BASE$|
	]

	modifier = { # Double production, double upkeep
		mult = 2
		exists = owner
		owner = {
			has_valid_civic = civic_tec_hive_anaxiomatic
		}
	}

	modifier = { # Leader skill multiplier
		mult = trigger:has_skill
	}
}

tec_leader_add_per_tech_researched = {
	base = 1
	mult = $MULT$
	# Old script
		#modifier = {
		#	exists = owner
		#	add = owner.trigger:num_researched_techs
		#}
		#complex_trigger_modifier = {
		#	trigger_scope = owner
		#	trigger = num_researched_techs_of_tier
		#	parameters = { tier = 0 }
		#	mode = subtract
		#}
	# /
	complex_trigger_modifier = {
		trigger_scope = owner
		trigger = num_researched_techs_of_tier
		parameters = { tier = 1 }
		mode = add
		mult = 0.25
	}
	complex_trigger_modifier = {
		trigger_scope = owner
		trigger = num_researched_techs_of_tier
		parameters = { tier = 2 }
		mode = add
		mult = 0.25
	}
	complex_trigger_modifier = {
		trigger_scope = owner
		trigger = num_researched_techs_of_tier
		parameters = { tier = 3 }
		mode = add
		mult = 0.25
	}
	complex_trigger_modifier = {
		trigger_scope = owner
		trigger = num_researched_techs_of_tier
		parameters = { tier = 4 }
		mode = add
		mult = 0.25
	}
	complex_trigger_modifier = {
		trigger_scope = owner
		trigger = num_researched_techs_of_tier
		parameters = { tier >= 5 }
		mode = add
		mult = 0.25
	}
	# Each tech above level 0 adds $mult$
}

tec_leader_add_per_planet_ascension = {
	base = 1
	mult = $MULT$
		#complex_trigger_modifier = {
		#	trigger_scope = sector.sector_capital
		#	trigger = has_planetary_ascension_tier
		#	mode = add
		#	mult = 0.1
		#}
	# There is no num_planetary_ascension_tier so
		modifier = {
			exists = sector.sector_capital
			sector.sector_capital = {
				has_planetary_ascension_tier = 1
			}
			add = 0.1
		}
		modifier = {
			exists = sector.sector_capital
			sector.sector_capital = {
				has_planetary_ascension_tier = 2
			}
			add = 0.2
		}
		modifier = {
			exists = sector.sector_capital
			sector.sector_capital = {
				has_planetary_ascension_tier = 3
			}
			add = 0.3
		}
		modifier = {
			exists = sector.sector_capital
			sector.sector_capital = {
				has_planetary_ascension_tier = 4
			}
			add = 0.4
		}
		modifier = {
			exists = sector.sector_capital
			sector.sector_capital = {
				has_planetary_ascension_tier = 5
			}
			add = 0.5
		}
		modifier = {
			exists = sector.sector_capital
			sector.sector_capital = {
				has_planetary_ascension_tier = 6
			}
			add = 0.6
		}
		modifier = {
			exists = sector.sector_capital
			sector.sector_capital = {
				has_planetary_ascension_tier = 7
			}
			add = 0.7
		}
		modifier = {
			exists = sector.sector_capital
			sector.sector_capital = {
				has_planetary_ascension_tier = 8
			}
			add = 0.8
		}
		modifier = {
			exists = sector.sector_capital
			sector.sector_capital = {
				has_planetary_ascension_tier = 9
			}
			add = 0.9
		}
		modifier = {
			exists = sector.sector_capital
			sector.sector_capital = {
				has_planetary_ascension_tier = 10
			}
			add = 1
		}
	# /
}

# Specific leaders
tec_leader_governor_production = {
	base = 1
	mult = $MULT$
	mult = value:tec_leader_add_per_planet_ascension|MULT|1|
	mult = trigger:has_level
	modifier = { # Gestalts and oligarchics add more
		mult = 1.25
		exists = owner
		owner = {
			is_oligarchy = yes
		}
	}
	# multiplier = value:tec_leader_governor_production|MULT|0.01|
}

tec_leader_scientist_production = {
	base = 1
	mult = $MULT$
	mult = value:tec_leader_add_per_tech_researched|MULT|1|
	mult = value:tec_leader_level_count
	modifier = { # Gestalts and oligarchics add more
		mult = 1.25
		exists = owner
		owner = {
			is_oligarchy = yes
		}
	}
	modifier = { # Anaxiomatic Splits
		mult = 1.25
		exists = owner
		owner = {
			has_valid_civic = civic_tec_hive_anaxiomatic
		}
	}
	# multiplier = value:tec_leader_scientist_production|MULT|1|
	# lvl 3 with 2 techs = 1x1x1x1.3 = 1.3
	# Lvl 5 with 100 techs = 1x1x50x1.5 = 75
	# Lvl 10 with 300 techs = 1x1x150x2 = 300
}

tec_leader_admiral_production = {
	base = 1
	mult = $MULT$
	modifier = {
		exists = fleet
		add = fleet.trigger:fleet_size
	}
	mult = 0.5
	mult = value:tec_leader_level_count
	modifier = { # Gestalts and oligarchics add more
		mult = 1.25
		exists = owner
		owner = {
			is_oligarchy = yes
		}
	}
	# multiplier = value:tec_leader_admiral_production|MULT|1|
	# lvl 1 with 10 size fleet = 1x1x10x1.1 = 11
	# lvl 3 with 30 size fleet = 1x1x30x1.3 = 33
	# Lvl 5 with 50 size fleet = 1x1x50x1.5 = 75
	# Lvl 10 with 250 s. fleet = 1x1x250x2 = 500
}

# Industrial count
# ------------------------------------------------------------
tec_industrial_district_count = {
	base = 0
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_industrial
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_hab_industrial
		}
		mode = add
	}
	# PD
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_pdhab_industrial
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_archive_industrial
		}
		mode = add
	}

	# GIGA
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_giga_frameworld_industrial
		}
		mode = add
	} 
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_giga_frameworld_industrial_advanced
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_giga_gas_giant_habitat_industrial
		}
		mode = add
	}
	# below are arcology ones, with split production so your choice
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_interstellar_industrial
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_penrose_industrial
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_penrose_industrial
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_virtual_alloys
		}
		mode = add
	}
}


# Assembly Values
# ------------------------------------------------------------

tec_capital_tier = {
	base = 1
	modifier = {
		tec_has_t2_capital = yes
		base = 1
	}
	modifier = {
		tec_has_t3_capital = yes
		base = 2
	}
	modifier = {
		tec_has_t4_capital = yes
		base = 3
	}
	modifier = {
		tec_has_t5_capital = yes
		base = 4
	}
	modifier = {
		tec_has_imperial_capital = yes
		base = 5
	}
}

tec_building_upkeep_modifiers = {
	base = 1
	add = modifier:planet_buildings_upkeep_mult
	add = modifier:planet_structures_upkeep_mult
}

tec_assembly_cost_scaling_building = {
	base = 1
	divide = value:tec_building_upkeep_modifiers
	mult = value:scripted_modifier_mult|MODIFIER|planet_pop_assemblers_upkeep_mult|
	min = 0
}

tec_assembly_building_tier = {
	base = 3
	modifier = { # T2 assembly
		add = 1.5
		exists = planet
		planet = {
			tec_has_t2_assembly_building = yes
		}
	}
	modifier = { # T3 assembly
		add = 3
		exists = planet
		planet = {
			tec_has_t3_assembly_building = yes
		}
	}
	
}

tec_master_assembler_research_output = {
	base = 1
	# 3 to 6
	mult = value:tec_assembly_building_tier
	# Research bonuses
	mult = value:job_total_research_output_modifier|JOB|researcher|
}

tec_master_assembler_tech_priest_output = {
	base = 1
	# 3 to 6
	mult = value:tec_assembly_building_tier
	# Unity bonuses
	mult = value:job_total_output_modifier|JOB|priest|RESOURCE|unity|
}

tec_reimaginator_assembly = {
	base = 0
	add = value:tec_capital_tier
	divide = 2
	add = 2.5
}


# Job Values
# ------------------------------------------------------------
tec_hired_job_trade_value = {
	base = 1
	mult = modifier:tec_hired_job_trade_add
	mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
}

tec_hired_job_ammenities_mult = {
	base = 1
	mult = value:scripted_modifier_mult|MODIFIER|tec_hired_job_base_production_mult|
	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
}

# Living Standard Values
# ------------------------------------------------------------
tec_pop_lifestyle_trade_value = {
	base = 0
	add = modifier:tec_pop_lifestyle_trade_value_add
	[[CATEGORY]add = modifier:tec_$CATEGORY$_lifestyle_trade_value_add]
	mult = value:scripted_modifier_mult|MODIFIER|pop_lifestyle_trade_mult|
}


# Broodqueen
# ------------------------------------------------------------
tec_broodlord_count = {
	base = 0
	complex_trigger_modifier = {
		trigger = num_assigned_jobs
		parameters = {
			job = tec_broodlord_drone
		}
		mode = add
	}
}