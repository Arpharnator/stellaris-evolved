tec_start_scale_payback_value = {
	add = $BASE$
	modifier = {
		owner = { has_origin = origin_payback }
		add = @\[ -1 * $BASE$ / |$BASE$| ]
	}
}

tec_start_city_district_count = {
	# Starter
	add = value:tec_start_scale_payback_value|BASE|3|
	modifier = {
		owner = { tec_is_agrarian_idyll_empire = yes }
		add = value:tec_start_scale_payback_value|BASE|-2|
	}
	
	# Megacorp
	modifier = {
		owner = { is_megacorp = yes }
		add = 1
	}

	modifier = {
		owner = { has_civic = civic_machine_servitor }
		add = 1
	}
}

tec_start_mining_to_farming_district_swap = {
	modifier = {
		owner = {
			is_lithoid_empire = yes
			has_country_flag = non_lithoid_subspecies
			is_catalytic_empire = yes
		}
		add = 1
	}
	modifier = {
		owner = {
			NOT = { has_country_flag = non_lithoid_subspecies }
			is_machine_empire = no
			is_catalytic_empire = yes
		}
		add = 2
	}
	modifier = {
		owner = {
			is_machine_empire = yes
			is_catalytic_empire = yes
		}
		add = 1
	}
	modifier = {
		owner = { has_origin = origin_tree_of_life }
		add = 1
	}
}

tec_start_generator_to_farming_district_swap = {
	modifier = {
		owner = {
			is_machine_empire = yes
			is_catalytic_empire = yes
		}
		add = 1
	}

	modifier = {
		owner = {
			tec_is_aquatic_empire = yes
			is_lithoid_empire = no
			is_machine_empire = no
		}
		has_climate = wet
		add = 1
	}
	modifier = {
		owner = {
			OR = {
				has_civic = civic_machine_servitor
				has_civic = civic_machine_assimilator
			}
			NOT = { has_country_flag = lithoid_subspecies }
		}
		add = 1
	}
}

tec_start_mining_to_generator_district_swap = {
	modifier = {
		owner = {
			tec_is_quantum_alloys_empire = yes
		}
		add = 1
	}
}

tec_start_generator_to_mining_district_swap = {
	modifier = {
		owner = {
			tec_is_aquatic_empire = yes
			is_lithoid_empire = yes
			is_machine_empire = no
		}
		has_climate = wet
		add = 1
	}
	modifier = {
		owner = {
			OR = {
				has_civic = civic_machine_servitor
				has_civic = civic_machine_assimilator
			}
			has_country_flag = lithoid_subspecies
		}
		add = 1
	}
}

tec_start_farming_to_mining_district_swap = {
	add = 0
}

tec_start_farming_to_generator_district_swap = {
	add = 0
}

tec_start_species_specific_district_count = {
	add = value:tec_start_scale_payback_value|BASE|2|
		
	modifier = {
		owner = {
			has_origin = origin_default
			is_eager_explorer_empire = no
		}
		add = 1
	}

	modifier = {
		owner = {
			tec_is_agrarian_idyll_empire = yes
		}
		add = value:tec_start_scale_payback_value|BASE|2|
	}
}

# TODO: fix `has_country_flag = non_lithoid_subspecies` checks, cause no food districts

tec_start_farming_district_count = {
	# Starter
	modifier = {
		owner = {
			is_machine_empire = no
			is_lithoid_empire = no
		}
		add = value:tec_start_species_specific_district_count
	}
	# Civics
	modifier = {
		owner = {
			tec_is_agrarian_idyll_empire = no
			tec_is_aquatic_empire = yes
			is_catalytic_empire = yes
		}
		add = 1
	}

	modifier = {
		owner = {
			any_owned_species = {
				OR = {
					has_trait = trait_tec_machine_biobrain
					has_trait = trait_tec_machine_biomass	
				}
			}
		}
		add = 1
	}

	add = value:tec_start_mining_to_farming_district_swap
	add = value:tec_start_generator_to_farming_district_swap
	subtract = value:tec_start_farming_to_mining_district_swap
	subtract = value:tec_start_farming_to_generator_district_swap
	min = 0
}

tec_start_mining_district_count = {
	add = value:tec_start_scale_payback_value|BASE|2|
	
	modifier = {
		owner = {
			is_machine_empire = no
			is_lithoid_empire = yes
		}
		add = value:tec_start_species_specific_district_count
	}

	modifier = {
		owner = {
			has_origin = origin_necrophage
			has_valid_civic = civic_hive_devouring_swarm
			is_lithoid_empire = yes
		}
		add = 1
	}

	modifier = {
		owner = {
			has_valid_civic = civic_tec_machine_reimaginator_cluster
		}
		add = 1
	}

	add = value:tec_start_farming_to_mining_district_swap
	add = value:tec_start_generator_to_mining_district_swap
	subtract = value:tec_start_mining_to_farming_district_swap
	subtract = value:tec_start_mining_to_generator_district_swap
	min = 0
}


tec_start_generator_district_count = {
	add = value:tec_start_scale_payback_value|BASE|2|

	modifier = {
		owner = { is_machine_empire = yes }
		add = value:tec_start_species_specific_district_count
	}

	modifier = {
		owner = { is_megacorp = yes }
		add = -1
	}


	modifier = {
		owner = {
			has_origin = origin_mechanists
		}
		add = 1
	}

	add = value:tec_start_farming_to_generator_district_swap
	add = value:tec_start_mining_to_generator_district_swap
	subtract = value:tec_start_generator_to_farming_district_swap
	subtract = value:tec_start_generator_to_mining_district_swap

	min = 0
}


tec_start_industrial_district_count = {
	add = value:tec_start_scale_payback_value|BASE|2|
	modifier = {
		owner = {
			tec_is_agrarian_idyll_empire = no
			is_regular_empire = yes
		}
		add = 1
	}
}


tec_start_pops_count = {
	base = 28
	modifier = {
		set = 33
		is_hive_empire = yes
	}
	modifier = {
		set = 29
		is_machine_empire = yes
	}
	modifier = {
		set = 6
		has_origin = origin_broken_shackles
	}
	modifier = {
		set = 18
		has_origin = origin_payback
	}
	
	modifier = {
		subtract = 10
		is_eager_explorer_empire = yes
	}
	modifier = {
		add = 4
		has_civic = civic_machine_servitor
	}
	modifier = {
		add = 4
		has_origin = origin_default
	}
	modifier = {
		add = 2
		is_necrophage_empire = yes
		is_homicidal = yes
	}
	modifier = {
		add = modifier:starting_pops_add
		has_mod_scripted_trigger_undercoat = yes
	}
	# TODO add evolved scripted_modifier
}

tec_start_pops_secondary_count = {
	base = 0
	modifier = {
		set = 12
		OR = {
			has_origin = origin_syncretic_evolution
			has_origin = origin_necrophage
		}
	}
	modifier = {
		set = 5
		has_civic = civic_machine_servitor
	}
	modifier = {
		set = 10
		has_valid_civic = civic_machine_assimilator
	}
	modifier = {
		set = 6
		has_origin = origin_necrophage
		OR = {
			has_valid_civic = civic_fanatic_purifiers
			has_valid_civic = civic_hive_devouring_swarm
			is_gestalt = yes
		}
	}
	modifier = { # elders are quite stronger, so less elders to balance
		add = 8
		has_valid_civic = civic_tec_se_elders
	}
	# modifier = {
	# 	set = 22  
	# 	has_origin = origin_tec_slavetothesystem 
	# }
	modifier = {
		add = modifier:secondary_species_starting_pops
		has_mod_scripted_trigger_undercoat = yes
	}
	# TODO add evolved scripted_modifier
}