

# NOTE: Core means basic and solid ones - like ethic/auth/etc scripted values

# Ethic scripted values
# ------------------------------------------------------------
tec_cooperative_ethics_from_relations = {
	base = 1
	complex_trigger_modifier = {
		trigger = count_relation
		parameters = {
			limit = {
				OR = {
					is_in_federation_with = root
					has_defensive_pact = root
					has_commercial_pact = root
				}
				is_cooperative = yes
			}
		}
		mode = add
		mult = 0.3
	}
	complex_trigger_modifier = {
		trigger = count_relation
		parameters = {
			limit = {
				is_subject = no
				has_migration_access = root
				is_cooperative = yes
			}
		}
		mode = add
		mult = 0.5
	}
}

tec_competitive_ethics_from_relations = {
	base = 1
	complex_trigger_modifier = {
		trigger = count_relation
		parameters = {
			limit = {
				OR = {
					is_in_federation_with = root
					has_defensive_pact = root
					has_commercial_pact = root
				}
				is_competitive = yes
			}
		}
		mode = add
		mult = 0.3
	}
	complex_trigger_modifier = {
		trigger = count_relation
		parameters = {
			limit = {
				is_subject = no
				has_migration_access = root
				is_competitive = yes
			}
		}
		mode = add
		mult = 0.5
	}
}

tec_pluralist_ethics_from_relations = {
	base = 1
	complex_trigger_modifier = {
		trigger = count_relation
		parameters = {
			limit = {
				OR = {
					is_in_federation_with = root
					has_defensive_pact = root
					has_commercial_pact = root
				}
				is_pluralist = yes
			}
		}
		mode = add
		mult = 0.3
	}
	complex_trigger_modifier = {
		trigger = count_relation
		parameters = {
			limit = {
				is_subject = no
				has_migration_access = root
				is_pluralist = yes
			}
		}
		mode = add
		mult = 0.5
	}
}

tec_elitist_ethics_from_relations = {
	base = 1
	complex_trigger_modifier = {
		trigger = count_relation
		parameters = {
			limit = {
				OR = {
					is_in_federation_with = root
					has_defensive_pact = root
					has_commercial_pact = root
				}
				is_elitist = yes
			}
		}
		mode = add
		mult = 0.3
	}
	complex_trigger_modifier = {
		trigger = count_relation
		parameters = {
			limit = {
				is_subject = no
				has_migration_access = root
				is_elitist = yes
			}
		}
		mode = add
		mult = 0.5
	}
}

tec_industrial_ethics_from_relations = {
	base = 1
	complex_trigger_modifier = {
		trigger = count_relation
		parameters = {
			limit = {
				root = { has_research_agreement = prev }
				is_industrialist = yes
			}
		}
		mode = add
		mult = 0.25
	}
	complex_trigger_modifier = {
		trigger = count_relation
		parameters = {
			limit = {
				OR = {
					is_in_federation_with = root
					has_defensive_pact = root
					has_commercial_pact = root
					AND = {
						is_subject = no
						has_migration_access = root
					}
				}
				is_industrialist = yes
			}
		}
		mode = add
		mult = 0.3
	}
}

tec_ecologist_ethics_from_relations = {
	base = 1
	complex_trigger_modifier = {
		trigger = count_relation
		parameters = {
			limit = {
				root = { has_research_agreement = prev }
				is_ecologist = yes
			}
		}
		mode = add
		mult = 0.25
	}
	complex_trigger_modifier = {
		trigger = count_relation
		parameters = {
			limit = {
				OR = {
					is_in_federation_with = root
					has_defensive_pact = root
					has_commercial_pact = root
					AND = {
						is_subject = no
						has_migration_access = root
					}
				}
				is_ecologist = yes
			}
		}
		mode = add
		mult = 0.3
	}
}

# Capital scripted values
# ------------------------------------------------------------
tec_capital_production_mult = {
	base = 0
	modifier = {
		exists = owner
		owner = {
			has_technology = tech_capital_productivity_1
		}
		add = 1
	}
	modifier = {
		exists = owner
		owner = {
			has_technology = tech_capital_productivity_2
		}
		add = 1
	}
	modifier = {
		exists = owner
		owner = {
			has_technology = tech_capital_productivity_3
		}
		add = 1
	}
	modifier = {
		exists = owner
		owner = {
			has_technology = tech_tec_capital_productivity_4
		}
		add = 1
	}
	min = 0
	max = $max$
}

tec_machine_capital_assembly_scaling = {
	base = $base$
	modifier = {
		num_pops >= @pops_t3
		add = 1
	}
	modifier = {
		num_pops >= @pops_t4
		add = 1
	}
	modifier = {
		num_pops >= @pops_t5
		add = 1
	}
	modifier = {
		exists = owner
		owner = { has_civic = civic_machine_assimilator }
		add = -1
	}
	modifier = {
		has_designation = col_crucible
		add = -1
	}
	min = 0
	max = $max$
}