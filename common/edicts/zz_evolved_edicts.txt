# - - - - - - - - - - - - - - - - - - - - -
# Empire edicts
# - - - - - - - - - - - - - - - - - - - - -

@Edict1Cost = 10
@Edict2Cost = 20
@Edict3Cost = 30

@EdictPerpetual = -1

@EdictDuration = 3600
@ambitionDuration = 3600

@tec_convergence_duration = 1800

# -------------------------- AIAUTH
# tec_aiauth_menu = {	# Biopsionic
# 	icon = "GFX_edict_type_time"
# 	length = 1
# 	# Note: seems = 0 crashes the game somehow
# 	resources = {
# 		category = country	# To avoid scaling
# 		cost = {
# 			energy = 0
# 		}
# 	}
# 	potential = {
# 		tec_is_aiauth_empire = yes
# 	}
# 	effect = {
# 		country_event = {
# 			id = tec_aiauth.100
# 			days = 0 
# 		}
# 	}
# 	allow = {
# 		NOT = {
# 			has_country_flag = tec_active_aiauth_window
# 		}
# 	}
# 	ai_weight = {
# 		weight = 0
# 	}
# }

# Ethic Edicts


tec_equal_opportunities = {
	length = @EdictPerpetual
	icon = "GFX_edict_type_policy"

	resources = {
		category = edicts
		cost = {
			unity = @Edict1Cost
			multiplier = value:edict_size_effect
		}
		upkeep = {
			unity = @Edict1Cost
			multiplier = value:edict_size_effect
		}
	}

	modifier = {
		planet_resettlement_unemployed_mult = 2.00
		pop_demotion_time_mult = -0.25
	}

	potential = {
		is_pluralist = yes
	}

	ai_weight = {
		weight = @EdictLowPrio
	}
}

tec_social_benefits = { # TODO - renamed to match concept name, adjust loc and effects
	length = @EdictPerpetual
	icon = "GFX_edict_type_policy"

	resources = {
		category = edicts
		cost = {
			unity = @Edict1Cost
			multiplier = value:edict_size_effect
		}
		upkeep = {
			unity = @Edict1Cost
			multiplier = value:edict_size_effect
		}
	}

	modifier = {
		pop_citizen_happiness = 0.05
		planet_clerks_unity_produces_add = 1
		planet_pops_consumer_goods_upkeep_mult = 0.1
	}

	potential = {
		is_cooperative = yes
	}

	ai_weight = {
		weight = @EdictHighPrio
	}
}

tec_doing_your_part = {
	inline_script = edicts/inline_evolved_disabled
}

tec_technological_funding = {
	inline_script = edicts/inline_evolved_disabled
}

tec_market_funding = {
	inline_script = edicts/inline_evolved_disabled
}

tec_nature_bond = {
	inline_script = edicts/inline_evolved_disabled
}

tec_industrial_overproduction = {
	inline_script = edicts/inline_evolved_disabled
}

tec_elite_boosting = {
	inline_script = edicts/inline_evolved_disabled
}


# -------------------------- Cultural overhaul edicts

#Patriotic Call
patriotic_call = {
	icon = "GFX_edict_type_time"
	length = @EdictDuration
	resources = {
		category = edicts
		cost = {
			influence = @Edict2Cost
		}
	}

	potential = {
		always = no # deprecated
		has_valid_civic = civic_citizen_service
	}

	modifier = {

		country_naval_cap_mult = 0.1
		country_war_exhaustion_mult = -0.15
		army_morale = 0.2

	}


	ai_weight = {
		weight = 1
	}
}


#Divine Crusade
div_crusade = {
	icon = "GFX_edict_type_time"
	length = @ambitionDuration

	resources = {
		category = edicts
	}
	potential = {
		always = no # deprecated
		has_valid_civic = civic_tec_regular_crusaders
	}

	allow = {
		has_technology = tech_ascension_theory
	}

	modifier = {
		max_rivalries = 1
		country_war_exhaustion_mult = -1
		ship_fire_rate_mult = 0.10
	}


	ai_weight = {
		weight = 1
	}
}

# -------------------------- Evolved edicts
# Perpetual edicts
tec_arcane_dwelvers = {
	length = @EdictPerpetual
	icon = "GFX_edict_type_policy"

	resources = {
		category = country    # To avoid scaling
		#edicts
		cost = { #Activation Cost
			trigger = {
				NOT = { has_edict = tec_arcane_dwelvers }
			}
			minor_artifacts = 50    #@Edict1Cost
		}
		cost = { #Deactivation Cost
			trigger = {
				has_edict = tec_arcane_dwelvers
			}
			minor_artifacts = 50    #@Edict1Cost
		}
	}

	modifier = {
		country_base_minor_artifacts_produces_add = 0.5
		planet_researchers_produces_mult = 0.05
		country_unity_produces_mult = 0.05
	}

	potential = {
		is_galactic_community_member = yes
		OR = {
			has_global_flag = resolution_arcane_tech_allow
		}
	}

	ai_weight = {
		weight = @EdictHighPrio
	}
}

tec_mortgage_edict = {
	length = @EdictPerpetual
	icon = "GFX_edict_type_policy"

	resources = {
		category = edicts
		cost = {
			unity = @Edict2Cost
			multiplier = value:edict_size_effect
		}
		upkeep = {
			unity = @Edict2Cost
			multiplier = value:edict_size_effect
		}
	}

	potential = {
		has_valid_civic = civic_tec_corporate_reanimators
	}

	ai_weight = {
		weight = 0
	}
}

# Campaigns
tec_biopsionic_convergence_edict = { # Biopsionic
	length = @tec_convergence_duration
	icon = "GFX_edict_type_time"
	resources = {
		category = country    # To avoid scaling
		cost = {
			sr_zro = 100
		}
	}
	potential = {
		has_country_flag = tec_biopsionic_path_finished
	}
	effect = {
		country_event = {
			id = tec_biopsionic_path.350
			days = 0
		}
		hidden_effect = {
			if = {
				limit = {
					NOR = {
						has_country_flag = tec_biopsionic_converged_gate
						has_country_flag = tec_biopsionic_converged_traits
					}
				}
				set_timed_country_flag = {
					flag = tec_biopsionic_converged_gate
					months = 2
				}
				country_event = {
					id = tec_biopsionic_path.360
					days = 30
					random = 30
				}
			}
		}
	}
	ai_weight = {
		weight = @EdictHighPrio
	}
}

# Balance

# Debug

tec_fix_my_game_edict = { # Debug wrong things
	length = 1
	icon = "GFX_edict_type_time"
	resources = {
		category = country    # To avoid scaling
	}
	potential = {
		# R6AH3
		# Note: all existing gestalts have issues with the nodes
		# This gives a way to reroll them once
		is_gestalt = yes
		#/
		NOT = { has_country_flag = tec_fix_my_game_edict_R6AH3B }
	}
	effect = {
		set_country_flag = tec_fix_my_game_edict_R6AH3B
		#tec_cache_everything = yes
		hidden_effect = {
			if = { # Gestalt node fix
				limit = {
					is_gestalt = yes
				}
				# Marks existing nodes for termination
				every_owned_leader = {
					limit = {
						is_gestalt_node = yes
					}
					set_leader_flag = tec_kill_this
				}
				# Redos all nodes
				country_create_gestalt_councilor = {
					CLASS = governor
					COUNCIL_POS = councilor_gestalt_governor
					DESC = councilor_gestalt_governor_desc
				}
				last_created_leader = {
					add_skill_without_trait_selection = owner.ruler.trigger:has_skill
				}
				country_create_gestalt_councilor = {
					CLASS = scientist
					COUNCIL_POS = councilor_gestalt_scientist
					DESC = councilor_gestalt_scientist_desc
				}
				last_created_leader = {
					add_skill_without_trait_selection = owner.ruler.trigger:has_skill
				}
				country_create_gestalt_councilor = {
					CLASS = admiral
					COUNCIL_POS = councilor_gestalt_admiral
					DESC = councilor_gestalt_admiral_desc
				}
				last_created_leader = {
					add_skill_without_trait_selection = owner.ruler.trigger:has_skill
				}
				country_create_gestalt_councilor = {
					CLASS = general
					COUNCIL_POS = councilor_gestalt_general
					DESC = councilor_gestalt_general_desc
				}
				last_created_leader = {
					add_skill_without_trait_selection = owner.ruler.trigger:has_skill
				}
				every_owned_leader = {
					limit = {
						has_leader_flag = tec_kill_this
					}
					kill_leader = {
						show_notification = no
					}
				}
			}
			if = {
				limit = {
					any_owned_leader = {
						is_idle = yes
					}
				}
				every_owned_leader = {
					limit = {
						is_idle = yes
					}
					kill_leader = {
						show_notification = no
					}
				}
			}
		}
	}
	ai_weight = {
		weight = 99999
	}
}

tec_fix_species_edict = { # Debug wrong things
	length = 1
	icon = "GFX_edict_type_time"
	resources = {
		category = country    # To avoid scaling
	}
	potential = {
		owner_species = {
			has_trait = trait_aquatic
			tec_has_changed_habitatbility_trait = yes
		}
	}
	effect = {
		#tec_cache_everything = yes
		owner_species = {
			change_species_characteristics = {
				remove_trait = trait_aquatic
				add_trait = trait_tec_advanced_aquatic
			}
		}
	}
	ai_weight = {
		weight = 99999
	}
}

# if needed to recalculate on hotfixes, bump this
@tec_cache_global_flag = tec_fix_cached_R6AH3C

tec_fix_cache_edict = {
	length = 1
	icon = "GFX_edict_type_time"
	resources = {
		category = country    # To avoid scaling
	}

	potential = {
		NOT = { has_global_flag = @tec_cache_global_flag  }
	}

	effect = {
		set_global_flag = @tec_cache_global_flag
		tec_cache_everything = yes
	}
	ai_weight = {
		weight = 99999
	}
}