# - - - - - - - - - - - - - - - - - - - - - # - - - - - - - - - - - - - - - - - - - - - 
# Elitist Conservatives Faction
# - - - - - - - - - - - - - - - - - - - - - # - - - - - - - - - - - - - - - - - - - - - 

conservatives = {
	election_header = "GFX_faction_header_yellow"
	guiding_ethic = ethic_elitist
	
	unique = yes
	support_multiplier = 1

	resources = {
		category = pop_factions
		produces = {
			unity = @tec_fac_infl_produce
		}
		produces = {	# Political virtue
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_tec_political_virtue
				}
				faction_approval >= 0.5
			}
			energy = 0.5
		}
		produces = {	# Political virtue
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_tec_political_virtue
					is_elitist = yes
				}
				faction_approval >= 0.5
			}
			energy = 0.1
		}
		produces = {	# Idealistic foundation
			trigger = {
				owner = {
					has_valid_civic = civic_idealistic_foundation
				}
			}
			influence = 0.005
		}
	}

	#Note: number of potential or actual members is checked by POP_FACTION_MIN_POTENTIAL_MEMBERS define
	is_potential = {
		is_faction_allowed = yes
	}

	parameters = {
		empire = {
			type = country
			valid_objects = {
				is_same_value = root
			}
		}
	}

	can_join_pre_triggers = {
		is_enslaved = no
		is_being_purged = no
	}

	can_join_faction = {
		is_shackled_robot = no
		is_shackled_bioservant = no
		tec_has_stapled_trait = no
	}
	
	attraction = {
		base = 150
		
		modifier = {
			factor = 1.25
			exists = from
			from = {
				exists = leader
				leader = { leader_class = ruler }
			}
		}
		
		modifier = {
			factor = 0.75
			exists = from
			from = {
				NOT = { exists = leader }
			}
		}

		
		# Should really check for citizenship instead
		modifier = {
			factor = 1.25
			NOT = { is_same_species = owner_species }
		}
	}
	
	leader = {
		base = 100

		modifier = {
			factor = 0
			leader_class = ruler
			owner = { has_authority = auth_imperial }
		}

		modifier = {
			factor = 0.0
			is_event_leader = yes
		}
	}
	
	# DEMAND: Faction Outraged (by a GalCom Resolution)
	inline_script = {
		script = pop_faction_types/demand_faction_outraged
		FLAG = galcom_resolution_passed_anti_elitist
	}

	# DEMAND: Faction Pleased (by a GalCom Resolution)
	inline_script = {
		script = pop_faction_types/demand_faction_pleased
		FLAG = galcom_resolution_passed_pro_elitist
	}	

	# Evolved: List of demands
		# Elitists should prio rulers and performance over workers and plebs
		# Positives (only pos)
			# Aristocracy
		# Neutral (pos and negs)
			# Priv edu
			# Oligarchy
			# Stratification
			# Leader enhacement
		# Negatives (only negs)
			# No pub edu
	# /
	
	# ----------------------- D E M A N D S -----------------------
		# Pos scaling
			# Trained elite (Num leaders above X level)
			demand = {	# POS - LEADER LEVELS
				title = "TEC_FAC_ELI_TRAINED_LEADERS_1"
				unfulfilled_title = "TEC_FAC_ELI_NO_TRAINED_LEADERS_1"
				desc = "TEC_FAC_ELI_TRAINED_LEADERS_1_DESC"
				fulfilled_effect = 5
				unfulfilled_effect = 0
				potential = {
					exists = owner
					owner = {
						count_owned_leader = {
							limit = {
								NOT = {
									has_level >= 6
								}
							}
							count >= 1
						}
					}
				}
				trigger = {
					owner = {
						count_owned_leader = {
							limit = {
								has_level >= 4
							}
							count >= 1
						}
					}
				}
			}
			demand = {	# POS - LEADER LEVELS
				title = "TEC_FAC_ELI_TRAINED_LEADERS_2"
				unfulfilled_title = "TEC_FAC_ELI_NO_TRAINED_LEADERS_2"
				desc = "TEC_FAC_ELI_TRAINED_LEADERS_2_DESC"
				fulfilled_effect = 10
				unfulfilled_effect = 0
				potential = {
					exists = owner
					owner = {
						count_owned_leader = {
							limit = {
								has_level < 8
								has_level > 3
							}
							count >= 1
						}
					}
				}
				trigger = {
					owner = {
						count_owned_leader = {
							limit = {
								has_level >= 6
							}
							count >= 1
						}
					}
				}
			}
			demand = {	# POS - LEADER LEVELS
				title = "TEC_FAC_ELI_TRAINED_LEADERS_3"
				unfulfilled_title = "TEC_FAC_ELI_NO_TRAINED_LEADERS_3"
				desc = "TEC_FAC_ELI_TRAINED_LEADERS_3_DESC"
				fulfilled_effect = 15
				unfulfilled_effect = 0
				potential = {
					exists = owner
					owner = {
						count_owned_leader = {
							limit = {
								has_level >= 6
							}
							count >= 1
						}
					}
				}
				trigger = {
					owner = {
						count_owned_leader = {
							limit = {
								has_level >= 8
							}
							count >= 1
						}
					}
				}
			}
		# /
		# Pos
			# Oligarchy
			demand = {	# POS - OLIGARCHY
				title = "TEC_FAC_ELI_OLIGARCHY"
				unfulfilled_title = "TEC_FAC_ELI_NO_OLIGARCHY"
				desc = "TEC_FAC_ELI_OLIGARCHY_DESC"
				fulfilled_effect = 5
				unfulfilled_effect = 0
				potential = {
					exists = owner
				}
				trigger = {
					owner = {
						OR = {
							has_authority = auth_oligarchic
							has_authority = auth_corporate
						}
					}
				}
			}
			# Balance traditions
			demand = {	# POS - BALANCE TRADS
				title = "TEC_FAC_ELI_BALANCE_TRADS"
				unfulfilled_title = "TEC_FAC_ELI_NO_BALANCE_TRADS"
				desc = "TEC_FAC_ELI_BALANCE_TRADS_DESC"
				fulfilled_effect = 5
				unfulfilled_effect = 0
				potential = {
					exists = owner
				}
				trigger = {
					owner = {
						tec_has_balance_traditions_finished = yes
					}
				}
			}
			# Aristocratic elite civic (or exclusive membership)
			demand = {	# POS - BALANCE TRADS
				title = "TEC_FAC_ELI_ARISTOCIVICS"
				unfulfilled_title = "TEC_FAC_ELI_NO_ARISTOCIVICS"
				desc = "TEC_FAC_ELI_ARISTOCIVICS_DESC"
				fulfilled_effect = 5
				unfulfilled_effect = 0
				potential = {
					exists = owner
				}
				trigger = {
					owner = {
						OR = {
							has_valid_civic = civic_aristocratic_elite
							has_valid_civic = civic_tec_corporate_membercorp
						}
					}
				}
			}
			# Leader enhacement
			demand = {	# POS - lEADER
				title = "TEC_FAC_ELI_LEADER_BOOST"
				unfulfilled_title = "TEC_FAC_ELI_NO_LEADER_BOOST"
				desc = "TEC_FAC_ELI_LEADER_BOOST_DESC"
				fulfilled_effect = 10
				unfulfilled_effect = 0
				potential = {
					exists = owner
					owner = {
						OR = {
							can_set_policy = {
								policy = leader_enhancement
								option = leader_enhancement_capacity_boosters
							}
							can_set_policy = {
								policy = leader_enhancement
								option = leader_enhancement_selected_lineages
							}
						}
					}
				}

				trigger = {
					owner = {
						OR = {
							has_policy_flag = leader_enhancement_capacity_boosters
							has_policy_flag = leader_enhancement_selected_lineages
						}
					}
				}
			}
		# /
		# Neut
			# Academic privilege
			demand = {	# POS - ACADEMIC PRIVILEGE
				title = "TEC_FAC_ELI_ACADEMIC_PRIVILEGE"
				unfulfilled_title = "TEC_FAC_ELI_NO_ACADEMIC_PRIVILEGE"
				desc = "TEC_FAC_ELI_ACADEMIC_PRIVILEGE_DESC"
				unfulfilled_effect = -10
				fulfilled_effect = 10
				potential = {
					exists = owner
				}
				trigger = {
					owner = {
						OR = {
							NOT = {	# There are no species with academic or pleasure seekers
								any_owned_species = {
									NOR = {
										has_living_standard = { type = living_standard_academic_privilege country = prev }
										AND = {	# Decadence is also allowed
											prevprev = {
												is_pleasure_seeker = yes
											}
											has_living_standard = { type = living_standard_decadent country = prev }
										}
									}
								}
							}
							owner_main_species = {
								OR = {
									has_living_standard = { type = living_standard_academic_privilege country = prev }
									AND = {	# Decadence is also allowed
										prev = {
											is_pleasure_seeker = yes
										}
										has_living_standard = { type = living_standard_decadent country = prev }
									}
								}
							}
						}
					}
				}
			}
		# /
		# Bad
			# Public education
			demand = {	# NEG - PUBLIC EDUC
				title = "TEC_FAC_ELI_NO_PUBLIC_EDU"
				unfulfilled_title = "TEC_FAC_ELI_PUBLIC_EDU_IS_BAD"
				desc = "TEC_FAC_ELI_NO_PUBLIC_EDU_DESC"
				fulfilled_effect = 0
				unfulfilled_effect = -10
				potential = {
					exists = owner
					owner = {
						can_set_policy = {
							policy = education
							option = private_education
						}
					}
				}
				trigger = {
					owner = {
						NOT = {
							has_policy_flag = public_education
						}
					}
				}
			}
			# No drugs
			demand = {	# NEG - NO DRUGS
				title = "TEC_FAC_ELI_NO_DRUGS"
				unfulfilled_title = "TEC_FAC_ELI_DRUGS_BAD"
				desc = "TEC_FAC_ELI_NO_DRUGS_DESC"
				fulfilled_effect = 0
				unfulfilled_effect = -10
				potential = {
					exists = owner
					owner = {
						can_set_policy = {
							policy = drug_rights
							option = drug_rights_allowed
						}
					}
				}
				trigger = {
					owner = {
						NOT = {
							has_policy_flag = drug_rights_allowed
						}
					}
				}
			}
			# Chemical bliss
			demand = {	# NEG - PUBLIC EDUC
				title = "TEC_FAC_ELI_NO_CHEMICAL_BLISS"
				unfulfilled_title = "TEC_FAC_ELI_CHEMICAL_BLISS_BAD"
				desc = "TEC_FAC_ELI_NO_CHEMICAL_BLISS_DESC"
				fulfilled_effect = 0
				unfulfilled_effect = -20
				potential = {
					exists = owner
					owner = {
						has_technology = tech_subdermal_stimulation
					}
				}
				trigger = {
					owner = {
						NOT = {
							any_owned_species = {
								has_living_standard = {
									type = living_standard_chemical_bliss 
									country = prev
								}
							}
						}
					}
				}
			}
		# /
		demand = {	# NEG - FACTION NEGATIVE ECONOMY
			title = "TEC_FACTION_NO_NEGATIVE_ECONOMY"
			unfulfilled_title = "TEC_FACTION_BAD_ECONOMY"
			desc = "TEC_FACTION_NO_NEGATIVE_ECONOMY_DESC"
			fulfilled_effect = 0
			unfulfilled_effect = -10
			potential = {
				exists = owner
			}
			trigger = {
				owner = {
					NOR = {
						has_modifier = energy_deficit
						has_modifier = minerals_deficit
						has_modifier = food_deficit
						has_modifier = alloys_deficit
						has_modifier = minerals_deficit
						#has_modifier = unity_deficit
						has_modifier = consumer_goods_deficit
						has_modifier = volatile_motes_deficit
						has_modifier = exotic_gases_deficit
						has_modifier = rare_crystals_deficit
						has_modifier = nanites_deficit
						#has_modifier = living_metal_deficit
						#has_modifier = sr_zro_deficit
					}
				}
			}
		}
	# /

	on_create = {
		pop_faction_event = { id = factions.1 }
	}

	on_destroy = {
		if = {
			limit = {
				has_modifier = promoted_elitist
			}
			remove_modifier = promoted_elitist
		}
		if = {
			limit = {
				has_modifier = suppressed_elitist
			}
			remove_modifier = suppressed_elitist
		}
	}
	
	actions = {
		embrace_faction = {
			title = "EMBRACE_FACTION"
			description = "EMBRACE_FACTION_DESC"
			
			cost = {
				influence = @tec_fac_embrace_cost
			}
			
			potential = {
				exists = owner
				owner = {
					OR = {
						is_subject = no
						NOT = { any_agreement = { agreement_preset = preset_dominion } }
					}
				}
			}
			
			valid = {
				custom_tooltip = {
					fail_text = EMBRACE_FACTION_COOLDOWN
					parameter:empire = {
						NOT = { has_modifier = embraced_faction_timer }
					}
				}
				support > @tec_fac_embrace_min_support
				parameter:empire = {
					NOT = { has_ethic = "ethic_fanatic_elitist" }
				}
			}

			effect = {
				add_modifier = { modifier = embraced_faction days = @tec_fac_embrace_cd}
				parameter:empire = {
					shift_ethic = ethic_elitist
					hidden_effect = {
						add_modifier = { modifier = embraced_faction_timer days = @tec_fac_embrace_cd}
						every_pop_faction = {
							limit = { NOT = { is_same_value = root } }
							add_modifier = { modifier = embraced_another_faction days = @tec_fac_embrace_cd}
						}
					}
				}
				hidden_effect = {
					save_event_target_as = TargetFaction
					parameter:empire = {
						every_relation = {
							limit = {
								is_ai = no
								tec_is_default_country = yes
								has_communications = prev
								has_intel_level = {
									who = prev
									category = government
									level >= 1
								}
							}
							country_event = { id = factions.2000 }
						}
					}
				}
			}
			
			ai_weight = {
				base = 1
				modifier = {
					factor = 0
					support < 0.50
					owner = {
						has_ethic = ethic_elitist
					}
				}
					modifier = {
					factor = 0
					owner = { has_valid_civic = civic_fanatic_purifiers }
				}
				modifier = {
					factor = 0
					NOT = {
						owner = {
							exists = ruler
							ruler = {
								leader_of_faction = conservatives
							}
						}
					}
				}
				modifier = {
					factor = 0
					owner = {
						count_pop_faction = {
							count < 4
						}
					}
				}
			}
		}
		promote_faction = {
			title = "PROMOTE_FACTION"
			description = "PROMOTE_FACTION_DESC"
			
			potential = {
				exists = owner
				parameter:empire = {
					NOR = {
						has_modifier = suppressed_elitist
						has_modifier = promoted_elitist 
					}
				}
			}

			effect = {
				parameter:empire = {
					add_modifier = { modifier = promoted_elitist days = -1 }
				}
			}
			
			ai_weight = {
				base = 0
			}
		}
		cancel_promote_faction = {
			title = "CANCEL_PROMOTE_FACTION"
			description = "CANCEL_PROMOTE_FACTION_DESC"
			
			potential = {
				exists = owner
				parameter:empire = {
					has_modifier = promoted_elitist
				}
			}

			effect = {
				parameter:empire = {
					remove_modifier = promoted_elitist
				}
			}
			
			ai_weight = {
				base = 0
			}
		}
		suppress_faction = {
			title = "SUPPRESS_FACTION"
			description = "SUPPRESS_FACTION_DESC"
			
			potential = {
				exists = owner
				parameter:empire = {
					NOR = {
						has_modifier = suppressed_elitist
						has_modifier = promoted_elitist 
					}
				}
			}

			effect = {
				add_modifier = { modifier = suppressed_faction days = -1 }
				parameter:empire = {
					add_modifier = { modifier = suppressed_elitist days = -1 }
				}
			}
			
			ai_weight = {
				base = 0
			}
		}
		cancel_suppress_faction = {
			title = "CANCEL_SUPPRESS_FACTION"
			description = "CANCEL_SUPPRESS_FACTION_DESC"
			
			potential = {
				exists = owner
				parameter:empire = {
					has_modifier = suppressed_elitist
				}
			}

			effect = {
				remove_modifier = suppressed_faction
				parameter:empire = {
					remove_modifier = suppressed_elitist
				}
			}
			
			ai_weight = {
				base = 0
			}
		}
	}
}