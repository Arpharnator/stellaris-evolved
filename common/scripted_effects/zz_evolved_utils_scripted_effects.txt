tec_cache = {
	[[when] 
	if = {
		limit = {
			$when$
		}
	]
		if = {
			limit = { $trigger$ = yes }
			set_$scope$_flag = $trigger$
		} else = {
			remove_$scope$_flag = $trigger$
		}
	[[when]
	}
	]
}

tec_cache_planet_triggers = {
	tec_cache = {
		scope = planet
		trigger = tec_is_arcology
	}
	tec_cache = {
		scope = planet
		trigger = tec_is_space_arcology
	}
	tec_cache = {
		scope = planet
		trigger = tec_is_habitat
	}
	tec_cache = {
		scope = planet
		trigger = tec_is_ringworld
	}
	tec_cache = {
		scope = planet
		trigger = tec_is_elysium
	}
	tec_cache = {
		scope = planet
		trigger = tec_is_city_world
	}
	tec_cache = {
		scope = planet
		trigger = tec_is_perfect_planet
	}
	tec_cache = {
		scope = planet
		trigger = tec_is_neutral_planet
	}

	tec_cache = {
		scope = planet
		trigger = tec_has_all_slots_unlocked
	}
}

tec_cache_capital_triggers = {
	tec_cache = {
		scope = planet
		trigger = tec_has_t1_capital
	}
	tec_cache = {
		scope = planet
		trigger = tec_has_t2_capital
	}
	tec_cache = {
		scope = planet
		trigger = tec_has_t3_capital
	}
	tec_cache = {
		scope = planet
		trigger = tec_has_t4_capital
	}
	tec_cache = {
		scope = planet
		trigger = tec_has_t5_capital
	}
	tec_cache = {
		scope = planet
		trigger = tec_has_imperial_capital
	}
}

tec_cache_shackled_triggers = {
	tec_cache = {
		scope = pop
		trigger = tec_is_shackled_robot
		when = "has_trait = trait_mechanical"
		
	}
	tec_cache = {
		scope = pop
		trigger = tec_is_shackled_bioservant
		when = "has_trait = @trait_tec_bioservant"
	}
	
	tec_cache = {
		scope = pop
		trigger = tec_is_non_sapient_bioservant
		when = "has_trait = @trait_tec_bioservant"
	}
}


tec_hoarders_recover_resource = {
	if = {
		limit = {
			is_variable_set = tec_$RESOURCE$_stockpile
		}
		set_variable = {
			which = tec_$RESOURCE$_recovered
			value = tec_$RESOURCE$_stockpile
		}
		divide_variable = {
			which = tec_$RESOURCE$_recovered
			value = 2
		}
		owner = {
			add_resource = {
				$RESOURCE$ = 1
				mult = prev.tec_$RESOURCE$_recovered
			}
		}
		clear_variable = tec_$RESOURCE$_stockpile
	} else = {
		set_variable = {
			which = tec_$RESOURCE$_recovered
			value = 0
		}
	}
}

tec_hoarders_withdraw_resource = {
	if = {
		limit = {
			is_variable_set = tec_$RESOURCE$_stockpile
		}
		owner = {
			add_resource = {
				$RESOURCE$ = 1
				mult = prev.tec_$RESOURCE$_stockpile
			}
		}
		clear_variable = tec_$RESOURCE$_stockpile
	}
	
}

tec_hoarders_manage_resource = {
	if = {
		limit = {
			has_planet_flag = tec_vault_manage_$RESOURCE$
		}
		event_target:tec_hoarders_managed_planet = {
			change_variable = {
				which = tec_$RESOURCE$_stockpile
				value = tec_stockpile_change
			}
			owner = {
				add_resource = {
					$RESOURCE$ = -1
					mult = prev.tec_stockpile_change
				}
			}
		}
	}
}