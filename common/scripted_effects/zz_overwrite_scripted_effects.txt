
# O V E R W R I T E 
#00_scripted_effects

wipe_pop_ethos = {
	if = {
		limit = { pop_has_ethic = ethic_fanatic_egalitarian }
		pop_remove_ethic = ethic_fanatic_egalitarian
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_authoritarian }
		pop_remove_ethic = ethic_fanatic_authoritarian
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_pacifist }
		pop_remove_ethic = ethic_fanatic_pacifist
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_militarist }
		pop_remove_ethic = ethic_fanatic_militarist
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_xenophobe }
		pop_remove_ethic = ethic_fanatic_xenophobe
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_xenophile }
		pop_remove_ethic = ethic_fanatic_xenophile
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_materialist }
		pop_remove_ethic = ethic_fanatic_materialist
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_spiritualist }
		pop_remove_ethic = ethic_fanatic_spiritualist
	}
	if = {
		limit = { pop_has_ethic = ethic_egalitarian }
		pop_remove_ethic = ethic_egalitarian
	}
	if = {
		limit = { pop_has_ethic = ethic_authoritarian }
		pop_remove_ethic = ethic_authoritarian
	}
	if = {
		limit = { pop_has_ethic = ethic_pacifist }
		pop_remove_ethic = ethic_pacifist
	}
	if = {
		limit = { pop_has_ethic = ethic_militarist }
		pop_remove_ethic = ethic_militarist
	}
	if = {
		limit = { pop_has_ethic = ethic_xenophobe }
		pop_remove_ethic = ethic_xenophobe
	}
	if = {
		limit = { pop_has_ethic = ethic_xenophile }
		pop_remove_ethic = ethic_xenophile
	}
	if = {
		limit = { pop_has_ethic = ethic_materialist }
		pop_remove_ethic = ethic_materialist
	}
	if = {
		limit = { pop_has_ethic = ethic_spiritualist }
		pop_remove_ethic = ethic_spiritualist
	}
 #new
	if = {
		limit = { pop_has_ethic = ethic_green }
		pop_remove_ethic = ethic_green
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_green }
		pop_remove_ethic = ethic_fanatic_green
	}
	if = {
		limit = { pop_has_ethic = ethic_industrial }
		pop_remove_ethic = ethic_industrial
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_industrial }
		pop_remove_ethic = ethic_fanatic_industrial
	}
	if = {
		limit = { pop_has_ethic = ethic_capitalism }
		pop_remove_ethic = ethic_capitalism
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_capitalism }
		pop_remove_ethic = ethic_fanatic_capitalism
	}
	if = {
		limit = { pop_has_ethic = ethic_socialism }
		pop_remove_ethic = ethic_socialism
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_socialism }
		pop_remove_ethic = ethic_fanatic_socialism
	}
	if = {
		limit = { pop_has_ethic = ethic_pluralist }
		pop_remove_ethic = ethic_pluralist
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_pluralist }
		pop_remove_ethic = ethic_fanatic_pluralist
	}
	if = {
		limit = { pop_has_ethic = ethic_elitist }
		pop_remove_ethic = ethic_elitist
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_elitist }
		pop_remove_ethic = ethic_fanatic_elitist
	}
}

pop_diverge_ethic = {
	if = {
		limit = {
			has_ethic = ethic_militarist
			has_pop_flag = ethic_diverge_from_militarist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_militarist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_militarist
			}
			has_pop_flag = ethic_diverge_from_militarist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_pacifist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_pacifist
			has_pop_flag = ethic_diverge_from_pacifist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_pacifist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_pacifist
			}
			has_pop_flag = ethic_diverge_from_pacifist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_militarist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_materialist
			has_pop_flag = ethic_diverge_from_materialist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_materialist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_materialist
			}
			has_pop_flag = ethic_diverge_from_materialist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_pacifist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_spiritualist
			has_pop_flag = ethic_diverge_from_spiritualist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_spiritualist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_spiritualist
			}
			has_pop_flag = ethic_diverge_from_spiritualist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_militarist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_authoritarian
			has_pop_flag = ethic_diverge_from_authoritarian
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_authoritarian
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_authoritarian
			}
			has_pop_flag = ethic_diverge_from_authoritarian
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_egalitarian
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_egalitarian
			has_pop_flag = ethic_diverge_from_egalitarian
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_egalitarian
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_egalitarian
			}
			has_pop_flag = ethic_diverge_from_egalitarian
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_authoritarian
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_green
			has_pop_flag = ethic_diverge_from_green
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_green
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_green
			}
			has_pop_flag = ethic_diverge_from_green
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_industrial
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_industrial
			has_pop_flag = ethic_diverge_from_industrial
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_industrial
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_industrial
			}
			has_pop_flag = ethic_diverge_from_industrial
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_green
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_socialism
			has_pop_flag = ethic_diverge_from_socialism
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_socialism
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_socialism
			}
			has_pop_flag = ethic_diverge_from_socialism
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_capitalism
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_capitalism
			has_pop_flag = ethic_diverge_from_capitalism
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_capitalism
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_capitalism
			}
			has_pop_flag = ethic_diverge_from_capitalism
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_socialism
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_pluralist
			has_pop_flag = ethic_diverge_from_pluralist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_pluralist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_pluralist
			}
			has_pop_flag = ethic_diverge_from_pluralist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_elitist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_elitist
			has_pop_flag = ethic_diverge_from_elitist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_elitist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_elitist
			}
			has_pop_flag = ethic_diverge_from_elitist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_pluralist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {	# this will never happen and i include it to avoid the errors
		limit = {
			pop_has_ethic = ethic_gestalt_consciousness
		}
		set_pop_flag = ethic_diverge_from_xenophile
		set_pop_flag = ethic_diverge_from_xenophobe
		set_pop_flag = ethic_diverge_from_militarist
		set_pop_flag = ethic_diverge_from_pacifist
		set_pop_flag = ethic_diverge_from_materialist
		set_pop_flag = ethic_diverge_from_spiritualist
		set_pop_flag = ethic_diverge_from_authoritarian
		set_pop_flag = ethic_diverge_from_egalitarian
		set_pop_flag = ethic_diverge_from_green
		set_pop_flag = ethic_diverge_from_industrial
		set_pop_flag = ethic_diverge_from_socialism
		set_pop_flag = ethic_diverge_from_capitalism
		set_pop_flag = ethic_diverge_from_pluralist
		set_pop_flag = ethic_diverge_from_elitist
	}
}



# R E M I N D E R - other traits are handled by other events
	# events = {
	# 	utopia.2509 # New Leaders Get Erudite Trait
	# 	utopia.2510	# New Leaders Get Cyborg Trait
	# 	utopia.2560	# New Leaders Get Synthetic Trait
	# 	utopia.2651	# New Leaders Get Psionic Trait
	# 	utopia.6000 # hive mind ruler gets hive mind trait to make them immortal
	# 	syndaw.1050 # Machine Intelligence ruler gets trait
	# 	distar.173 # New Leaders Get Brainslug Trait
	# }
#

#TRAIT HANDLER
add_leader_traits_after_modification = {
	if = {
		limit = {
			tec_leader_cannot_take_species_traits = no
		}	
		_add_leader_traits_after_modification = yes
	}
}

# split to not wrap in that if
# NOTE: Rodah, modified most checks to use new system, traits need to be adjusted and fixed to new vanilla formats
_add_leader_traits_after_modification = {
	# Erudite
	if = {
		limit = {
			species = {
				has_trait = trait_erudite
			}
		}
		if = {
			limit = {
				NOR = {
					has_trait = leader_trait_erudite
				}
			}
			add_trait_no_notify = leader_trait_erudite
		}
	}

	# ----------------------------------------------------------------------
	# PU Mutualistic parasite
	if = {
		limit = {
			species = {
				has_trait = @trait_tec_pu_neuroslug
			}
			owner = {
				has_valid_civic = civic_tec_origin_neuroslug
			}
		}
		if = {
			limit = {
				NOT = { has_trait = leader_trait_tec_pu_neuroslug }
			}
			add_trait_no_notify = leader_trait_tec_pu_neuroslug
		}
	}

	# ----------------------------------------------------------------------
	# Clone Origin
	if = {
		limit = {
			species = {
				has_trait = @trait_tec_clone_origin
			}
			owner = {
				has_origin = origin_tec_clones
			}
		}
		if = {
			limit = {
				NOT = { has_trait = leader_trait_tec_clone_origin }
			}
			add_trait_no_notify = leader_trait_tec_clone_origin
		}
	}

	# ----------------------------------------------------------------------
	# Genetic 
		#t3 ERUDITE - tec_gene_brain - all leaders
	if = {
		limit = {
			species = {
				OR = {
					has_trait = @trait_tec_gene_perfection
					has_trait = @trait_pc_tec_gene_preference
				}
				has_trait = @trait_tec_gene_brain
			}
		}
		if = {
			limit = {
				NOT = { has_trait = leader_trait_tec_gene_brain }
			}
			add_trait_no_notify = leader_trait_tec_gene_brain
		}
	}
		#t3 FERTILE - tec_gene_fertile - gov ruler only
	if = {
		limit = {
			species = {
				OR = {
					has_trait = @trait_tec_gene_perfection
					has_trait = @trait_pc_tec_gene_preference
				}
				has_trait = @trait_tec_gene_fertile
			}
		}
		if = {
			limit = {
				OR = {
					leader_class = governor
				}
				NOT = { has_trait = leader_trait_tec_gene_fertile }
			}
			add_trait_no_notify = leader_trait_tec_gene_fertile
		}
	}
		#t3 WILL - tec_gene_will - gov ruler only
	if = {
		limit = {
			species = {
				OR = {
					has_trait = @trait_tec_gene_perfection
					has_trait = @trait_pc_tec_gene_preference
				}
				has_trait = @trait_tec_gene_will
			}
		}
		if = {
			limit = {
				OR = {
					leader_class = governor
				}
				NOT = { has_trait = leader_trait_tec_gene_will }
			}
			add_trait_no_notify = leader_trait_tec_gene_will
		}
	}
		#t3 ROBUST - tec_gene_robust - admiral and generals
	if = {
		limit = {
			species = {
				OR = {
					has_trait = @trait_tec_gene_perfection
					has_trait = @trait_pc_tec_gene_preference
				}
				has_trait = @trait_tec_gene_robust
			}
		}
		if = {
			limit = {
				OR = {
					leader_class = admiral
					leader_class = general
				}
				NOT = { has_trait = leader_trait_tec_gene_robust }
			}
			add_trait_no_notify = leader_trait_tec_gene_robust
		}
	}
		#t3 AUDACIOUS - tec_gene_audacious - admirals and generals
	if = {
		limit = {
			species = {
				OR = {
					has_trait = @trait_tec_gene_perfection
					has_trait = @trait_pc_tec_gene_preference
				}
				has_trait = @trait_tec_gene_audacious
			}
		}
		if = {
			limit = {
				OR = {
					leader_class = admiral
					leader_class = general
				}
				NOT = { has_trait = leader_trait_tec_gene_audacious }
			}
			add_trait_no_notify = leader_trait_tec_gene_audacious
		}
	}
	
	# ----------------------------------------------------------------------
	# Replicant
	if = {
		limit = {
			species = {
				has_trait = @trait_tec_replicant_main
			}
		}
		if = {
			limit = {
				NOT = { has_trait = leader_trait_tec_replicant }
			}
			add_trait_no_notify = leader_trait_tec_replicant
		}
	}

	# ----------------------------------------------------------------------
	# T1 CYBORG
	if = {
		limit = {
			species = {
				has_trait = trait_cybernetic
			}
			exists = owner
			owner = {
				if = {
					limit = {
						tec_has_cybernetic_ascension_path_exception = yes
					}
					tec_has_cybernetic_ascension_path = yes
				}
			}
		}
		if = {
			limit = {
				NOT = { has_trait = leader_trait_cyborg }
			}
			add_trait_no_notify = leader_trait_cyborg
		}
	}

	# T2 CYBORG
	if = {
		limit = {
			species = {
				has_trait = @trait_tec_superior_cybernetics_main
			}
		}
		if = {
			limit = {
				NOT = { has_trait = leader_trait_tec_superior_cybernetics_main }
			}
			add_trait_no_notify = leader_trait_tec_superior_cybernetics_main
		}
	}

	# CYBERPSIONIC
	if = {
		limit = {
			species = {
				has_trait = @trait_tec_cyberpsionic_main
			}
		}
		if = {
			limit = {
				NOT = { has_trait = leader_trait_tec_cyberpsionic }
			}
			add_trait_no_notify = leader_trait_tec_cyberpsionic
		}
	}

	# ----------------------------------------------------------------------
	# Machine T3 traits
	if = {
		limit = {
			species = {
				has_trait = @trait_tec_robot_megaform
			}
		}
		if = {
			limit = {
				NOT = { has_trait = leader_trait_tec_robot_megaform }
			}
			add_trait_no_notify = leader_trait_tec_robot_megaform
		}
	}
		#transmorpher - tec_robot_transmorpher- admirals and generals
	if = {
		limit = {
			species = {
				has_trait = @trait_tec_robot_transmorpher
			}
		}
		if = {
			limit = {
				NOT = { has_trait = leader_trait_tec_robot_transmorpher }
			}
			add_trait_no_notify = leader_trait_tec_robot_transmorpher
		}
	}

	# ----------------------------------------------------------------------
	# Psi mechanic shroud processor trait
	if = {
		limit = {
			species = {
				has_trait = @trait_tec_robot_shroud
			}
		}
		if = {
			limit = {
				NOT = { has_trait = leader_trait_tec_robot_shroud }
			}
			add_trait_no_notify = leader_trait_tec_robot_shroud
		}
	}

	# ----------------------------------------------------------------------
	# Purity of form trait
	if = {
		limit = {
			species = {
				has_trait = @trait_tec_biopsionic_main
			}
		}
		if = {
			limit = {
				NOT = { has_trait = leader_trait_tec_biopsionic }
			}
			add_trait_no_notify = leader_trait_tec_biopsionic
		}
	}

	# ----------------------------------------------------------------------
	# Psionic rare traits (uff)
		# psionic mind - tec_psionic_brain - researchers
	if = {
		limit = {
			species = {
				tec_is_any_psionic_species = yes
				has_trait = @trait_tec_psionic_mind
			}
		}
		if = {
			limit = {
				leader_class = scientist
				NOT = { has_trait = leader_trait_tec_psionic_mind }
			}
			random = {
				chance = 10
				add_trait_no_notify = leader_trait_tec_psionic_mind
			}
		}	
	}
		# psionic body - tec_psionic_body- generals
	if = {
		limit = {
			species = {
				tec_is_any_psionic_species = yes
				has_trait = @trait_tec_psionic_body
			}
		}
		if = {
			limit = {
				leader_class = general
				NOT = { has_trait = leader_trait_tec_psionic_body }
			}
			random = {
				chance = 10
				add_trait_no_notify = leader_trait_tec_psionic_body
			}
		}	
	}

		# Hypercognition - tec_psionic_unity- generals&admirals&gov
	if = {
		limit = {
			species = {
				tec_is_any_psionic_species = yes
				has_trait = @trait_tec_psionic_unity
			}
		}
		if = {
			limit = {
				OR = {
					leader_class = general
					leader_class = admiral
					leader_class = governor
				}
				NOT = { has_trait = leader_trait_tec_psionic_unity }
			}
			random = {
				chance = 10
				add_trait_no_notify = leader_trait_tec_psionic_unity
			}
		}	
	}

		# Psionic energy - tec_psionic_energy- generals&admirals&ruler
	if = {
		limit = {
			species = {
				tec_is_any_psionic_species = yes
				has_trait = @trait_tec_psionic_energy
			}
		}
		if = {
			limit = {
				OR = {
					leader_class = general
					leader_class = admiral
				}
				NOT = { has_trait = leader_trait_tec_psionic_energy }
			}
			random = {
				chance = 10
				add_trait_no_notify = leader_trait_tec_psionic_energy
			}
		}		
	}

		# Psionic telekinesis - tec_psionic_telekinesis - generals
	if = {
		limit = {
			species = {
				tec_is_any_psionic_species = yes
				has_trait = @trait_tec_psionic_telekinesis
			}
		}
		if = {
			limit = {
				OR = {
					leader_class = general
				}
				NOT = { has_trait = leader_trait_tec_psionic_telekinesis }
			}
			random = {
				chance = 10
				add_trait_no_notify = leader_trait_tec_psionic_telekinesis
			}
		}		
	}

		# Teleport - tec_psionic_teleport - generals&admirals&gov
	if = {
		limit = {
			species = {
				tec_is_any_psionic_species = yes
				has_trait = @trait_tec_psionic_teleport
			}
		}
		if = {
			limit = {
				OR = {
					leader_class = general
					leader_class = admiral
					leader_class = governor
				}
				NOT = { has_trait = leader_trait_tec_psionic_teleport }
			}
			random = {
				chance = 10
				add_trait_no_notify = leader_trait_tec_psionic_teleport
			}
		}			
	}


	# Cyberpsio equilibrium
	if = {
		limit = {
			species = {
				has_trait = @trait_tec_cyberpsionic_equilibrium
			}
		}
		if = {
			limit = {
				OR = {
					leader_class = governor
				}
				NOT = { has_trait = leader_trait_tec_cyberpsionic_equilibrium }
			}
			random = {
				chance = 10
				add_trait_no_notify = leader_trait_tec_cyberpsionic_equilibrium
			}
		}		
	}
}

remove_leader_traits_after_modification = {
	# Erudite
	if = {
		limit = {
			species = {
				NOT = {
					has_trait = trait_erudite 
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_erudite
			}
			remove_trait = leader_trait_erudite
		}
	}

	# ----------------------------------------------------------------------
	# Clone origin
	if = {
		limit = {
			species = {
				NOT = { has_trait = @trait_tec_clone_origin }
			}
			owner = {
				NOT = {
					has_origin = origin_tec_clones
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_clone_origin
			}
			remove_trait = leader_trait_tec_clone_origin
		}
	}

	# ----------------------------------------------------------------------
	# Genetic 
		#t3 ERUDITE - tec_gene_brain - all leaders
	if = {
		limit = {
			species = {
				NOT = {
					has_trait = @trait_tec_gene_brain
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_gene_brain
			}
			remove_trait = leader_trait_tec_gene_brain
		}
	}
		#t3 FERTILE - tec_gene_fertile - gov ruler only
	if = {
		limit = {
			species = {
				NOT = {
					has_trait = @trait_tec_gene_fertile
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_gene_fertile
			}
			remove_trait = leader_trait_tec_gene_fertile
		}
	}
		#t3 WILL - tec_gene_will - gov ruler only
	if = {
		limit = {
			species = {
				NOT = {
					has_trait = @trait_tec_gene_will
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_gene_will
			}
			remove_trait = leader_trait_tec_gene_will
		}
	}
		#t3 ROBUST - tec_gene_robust - admiral and generals
	if = {
		limit = {
			species = {
				NOT = {
					has_trait = @trait_tec_gene_robust
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_gene_robust
			}
			remove_trait = leader_trait_tec_gene_robust
		}
	}
		#t3 AUDACIOUS - tec_gene_audacious - admirals and generals
	if = {
		limit = {
			species = {
				NOT = {
					has_trait = @trait_tec_gene_audacious
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_gene_audacious
			}
			remove_trait = leader_trait_tec_gene_audacious
		}
	}

	# ----------------------------------------------------------------------
	# Replicant
	if = {
		limit = {
			species = {
				NOT = {
					has_trait = @trait_tec_replicant_main
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_replicant
			}
			remove_trait = leader_trait_tec_replicant
		}
	}

	# ----------------------------------------------------------------------
		# Cybernetics T1
	if = {
		limit = {
			species = {
				NOT = {
					has_trait = trait_cybernetic
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_cyborg
			}
			remove_trait = leader_trait_cyborg
		}
	}

	# Cybernetics T2
	if = {
		limit = {
			species = {
				NOT = {
					has_trait = @trait_tec_superior_cybernetics_main
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_superior_cybernetics_main
			}
			remove_trait = leader_trait_tec_superior_cybernetics_main
		}
	}

	# Cyberpsionic
	if = {
		limit = {
			species = {
				NOT = {
					has_trait = @trait_tec_cyberpsionic_main
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_cyberpsionic
			}
			remove_trait = leader_trait_tec_cyberpsionic
		}
	}

	# ----------------------------------------------------------------------
	# Machine T3 traits
		#megaform - tec_robot_megaform - all leaders
	if = {
		limit = {
			species = {
				NOT = {
					has_trait = @trait_tec_robot_megaform
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_robot_megaform
			}
			remove_trait = leader_trait_tec_robot_megaform
		}
	}
		#transmorpher - tec_robot_transmorpher- admirals and generals
	if = {
		limit = {
			species = {
				NOT = {
					has_trait = @trait_tec_robot_transmorpher
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_robot_transmorpher
			}
			remove_trait = leader_trait_tec_robot_transmorpher
		}
	}

	# ----------------------------------------------------------------------
	# Psi mechanic shroud processor trait
	if = {
		limit = {
			species = {
				NOT = {
					has_trait = @trait_tec_robot_shroud
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_robot_shroud
			}
			remove_trait = leader_trait_tec_robot_shroud
		}
	}

	# ----------------------------------------------------------------------
	# Purity of form trait
	if = {
		limit = {
			species = {
				NOR = {
					has_trait = @trait_tec_biopsionic_main
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_biopsionic
			}
			remove_trait = leader_trait_tec_biopsionic
		}
	}


	# Psionic rare traits (uff)
		# psionic mind - tec_psionic_brain - researchers
	if = {
		limit = {
			species = {
				OR = {
					tec_is_any_psionic_species = no
					NOT = {
						has_trait = @trait_tec_psionic_mind
					}
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_psionic_mind
			}
			remove_trait = leader_trait_tec_psionic_mind
		}
	}
		# psionic body - tec_psionic_body- generals
	if = {
		limit = {
			species = {
				OR = {
					tec_is_any_psionic_species = no
					NOT = {
						has_trait = @trait_tec_psionic_body
					}
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_psionic_body
			}
			remove_trait = leader_trait_tec_psionic_body
		}
	}
		# Hypercognition - tec_psionic_unity- generals&admirals&gov
	if = {
		limit = {
			species = {
				OR = {
					tec_is_any_psionic_species = no
					NOT = {
						has_trait = @trait_tec_psionic_unity
					}
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_psionic_unity
			}
			remove_trait = leader_trait_tec_psionic_unity
		}
	}
		# Psionic energy - tec_psionic_energy- generals&admirals&ruler
	if = {
		limit = {
			species = {
				OR = {
					tec_is_any_psionic_species = no
					NOT = {
						has_trait = @trait_tec_psionic_energy
					}
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_psionic_energy
			}
			remove_trait = leader_trait_tec_psionic_energy
		}
	}
		# Psionic telekinesis - tec_psionic_telekinesis - generals
	if = {
		limit = {
			species = {
				OR = {
					tec_is_any_psionic_species = no
					NOT = {
						has_trait = @trait_tec_psionic_telekinesis
					}
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_psionic_telekinesis
			}
			remove_trait = leader_trait_tec_psionic_telekinesis
		}
	}
		# Teleport - tec_psionic_teleport - generals&admirals&gov
	if = {
		limit = {
			species = {
				OR = {
					tec_is_any_psionic_species = no
					NOT = {
						has_trait = @trait_tec_psionic_teleport
					}
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_psionic_teleport
			}
			remove_trait = leader_trait_tec_psionic_teleport
		}
	}

		# Cyberpsio equilibrium
	if = {
		limit = {
			species = {
				OR = {
					NOT = {
						has_trait = @trait_tec_cyberpsionic_equilibrium
					}
				}
			}
		}
		if = {
			limit = {
				has_trait = leader_trait_tec_cyberpsionic_equilibrium
			}
			remove_trait = leader_trait_tec_cyberpsionic_equilibrium
		}
	}
}

# FIRST CONTACT EXOCOLONIST TWEAK
# first_contact scope. Putting here so it's easy to find again
set_first_contact_starting_stage = {
	if = {
		limit = {
			contact_country = {
				is_country_type = dragon_dummy
			}
		}
		custom_tooltip = start_dragon_communications_study
	}
	else = {
		custom_tooltip = start_first_contact
	}
	hidden_effect = {
		owner = {
			set_timed_country_flag = {
				flag = recent_first_contact_process_started
				years = 20
			}
		}
		if = {
			limit = {
				contact_country = {
					tec_is_default_country = yes
				}
			}
			set_first_contact_stage = default_stage_1
		}
		else = { #had to leave default country type out of the switch, because "default" in switches means "fallback" :D
			contact_country = {
				switch = {
					trigger = is_country_type
					enclave = {
						setup_first_contact_path = { TYPE = enclave }
						country_event = { id = leviathans.97 days = 720 random = 360 } #they'll establish contact if you aren't quick enough
					}
					enclave_mercenary = {
						setup_first_contact_path = { TYPE = enclave }
						country_event = { id = leviathans.97 days = 720 random = 360 } #they'll establish contact if you aren't quick enough
					}
					tiyanki = { setup_first_contact_path = { TYPE = tiyanki } }
					tiyanki_garrison = { setup_first_contact_path = { TYPE = tiyanki } }
					amoeba = { setup_first_contact_path = { TYPE = amoeba } }
					amoeba_borderless = { setup_first_contact_path = { TYPE = amoeba } }
					amoeba_garrison = { setup_first_contact_path = { TYPE = amoeba } }
					amoeba_faction = { setup_first_contact_path = { TYPE = amoeba } }
					crystal = { setup_first_contact_path = { TYPE = crystals } }
					crystal_faction = { setup_first_contact_path = { TYPE = crystals } }
					drone = { setup_first_contact_path = { TYPE = drones } }
					drone_faction = { setup_first_contact_path = { TYPE = drones } }
					dormant_marauders = { setup_first_contact_path = { TYPE = marauders } }
					pirate = { setup_first_contact_path = { TYPE = pirates } }
					neutral_faction = { setup_first_contact_path = { TYPE = pirates } }
					caravaneer_fleet = {
						setup_first_contact_path = { TYPE = caravaneers }
						if = {
							limit = {
								exists = event_target:caravaneer_fleet1_country
								is_same_value = event_target:caravaneer_fleet1_country
							}
							root.owner = { country_event = { id = cara.1020 days = 720 random = 360 } }
						}
						else_if = {
							limit = {
								exists = event_target:caravaneer_fleet2_country
								is_same_value = event_target:caravaneer_fleet2_country
							}
							root.owner = { country_event = { id = cara.2020 days = 720 random = 360 } }
						}
						else_if = {
							limit = {
								exists = event_target:caravaneer_fleet3_country
								is_same_value = event_target:caravaneer_fleet3_country
							}
							root.owner = { country_event = { id = cara.3020 days = 720 random = 360 } }
						}
					}
					caravaneer_home = { setup_first_contact_path = { TYPE = caravaneers } }
					cloud = { setup_first_contact_path = { TYPE = void_clouds } }
					nomad = { setup_first_contact_path = { TYPE = nomad } }
					dragon_dummy = { setup_first_contact_path = { TYPE = origin_dragon } }
					default = {
						root = { fire_on_action = { on_action = on_first_contact_stage_1_no_path } }
					#	root = {
					#		log_error = "No valid first contact path for encounter with [This.ContactCountry.GetName] (country type: [This.ContactCountry.GetCountryType])"
					#	}
					}
				}
			}
		}
	}
}


# 3.7
set_merchant_government_effect = {
	if = {
		limit = {
			OR = {
				has_civic = civic_criminal_heritage
				has_civic = civic_tec_corporate_dystopian_society
			}
		}
		if = {
			limit = {
				has_technology = tech_galactic_administration
				has_ascension_perk = ap_future_society
			}
			change_government = {
				authority = auth_oligarchic
				cooldown = no
				remove_invalid_civics = yes
				civics = { civic = civic_merchant_guilds civic = civic_dystopian_society civic = random civic = random civic = random }
			}
		}
		else_if = {
			limit = {
				has_technology = tech_galactic_administration
			}
			change_government = {
				authority = auth_oligarchic
				cooldown = no
				remove_invalid_civics = yes
				civics = { civic = civic_merchant_guilds civic = civic_dystopian_society civic = random civic = random }
			}
		}
		else = {
			change_government = {
				authority = auth_oligarchic
				cooldown = no
				remove_invalid_civics = yes
				civics = { civic = civic_merchant_guilds civic = civic_dystopian_society civic = random }
			}
		}
	}
	else = {
		if = {
			limit = {
				has_technology = tech_galactic_administration
				has_ascension_perk = ap_future_society
			}
			change_government = {
				authority = auth_oligarchic
				cooldown = no
				remove_invalid_civics = yes
				civics = { civic = civic_merchant_guilds civic = civic_tec_regular_corporate_politics civic = random civic = random civic = random }
			}
		}
		else_if = {
			limit = {
				has_technology = tech_galactic_administration
			}
			change_government = {
				authority = auth_oligarchic
				cooldown = no
				remove_invalid_civics = yes
				civics = { civic = civic_merchant_guilds civic = civic_tec_regular_corporate_politics civic = random civic = random }
			}
		}
		else = {
			change_government = {
				authority = auth_oligarchic
				cooldown = no
				remove_invalid_civics = yes
				civics = { civic = civic_merchant_guilds civic = civic_tec_regular_corporate_politics civic = random }
			}
		}
	}
}

impose_ideology_effect = {
	copy_ethos_and_authority = root
	tec_remove_sovereign_type_civic_effect = yes
	if = {
		limit = {
			root = { is_megacorp = yes }
			is_megacorp = yes
		}
		set_merchant_government_effect = yes
	}
	add_modifier = { modifier = recently_liberated days = 7300 }
	add_opinion_modifier = { modifier = opinion_liberated_us who = root }
	root = {
		add_opinion_modifier = { modifier = opinion_we_liberated who = from }
	}
}